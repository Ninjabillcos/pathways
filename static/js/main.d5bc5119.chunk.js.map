{"version":3,"sources":["utils/ConfigManager.js","components/ActionButton/ActionButton.module.scss","components/MissingDataPopup/MissingDataPopup.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/PatientProvider.tsx","components/PatientSnapshot/PatientSnapshot.tsx","components/DropDown/DropDown.tsx","components/PathwayProvider.tsx","components/Navigation/Navigation.tsx","utils/patient.js","utils/fhirExtract.js","components/FHIRClient.tsx","components/PatientRecordsProvider.tsx","components/PatientRecord/PatientRecord.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/UserProvider.tsx","components/NoteDataProvider.tsx","utils/fhirUtils.ts","components/MissingDataPopup/MissingDataPopup.tsx","components/ReportModal/ReportSection/ReportSection.tsx","components/ReportModal/ReportModal.tsx","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","engine/cql-extractor.ts","utils/regexes.ts","engine/cql-to-elm.ts","engine/elm-executor.ts","engine/output-results.ts","engine/evaluate-patient.ts","components/Graph/Graph.tsx","components/PathwaysList/PathwaysList.tsx","components/PathwaysService/PathwaysService.tsx","utils/MockedFHIRClient.ts","components/App.tsx","index.js","components/PatientSnapshot/PatientSnapshot.module.scss","components/Navigation/Navigation.module.scss","components/ReportModal/ReportModal.module.scss","components/Arrow/Arrow.module.scss","../node_modules/cql-execution/lib/fhir sync /^/.//.*$","components/PathwaysList/PathwaysList.module.scss","components/App.module.scss","styles/index.module.scss","components/DropDown/DropDown.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Graph/Graph.module.scss","components/Node/Node.module.scss","components/ExpandedNode/ExpandedNode.module.scss","components/PatientRecord/PatientRecord.module.scss","components/ReportModal/ReportSection/ReportSection.module.scss"],"names":["config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","module","exports","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","green","typography","fontFamily","theme","createMuiTheme","palette","primary","main","secondary","common","background","default","text","projectorTheme","ThemeContext","createContext","ThemeProvider","children","useState","defaultTheme","setTheme","toggleTheme","useCallback","currentTheme","Provider","Header","props","anchorEl","setAnchorEl","useContext","handleClose","className","styles","header","src","logo","alt","onClick","event","currentTarget","aria-controls","aria-haspopup","icon","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","PatientContext","patient","setPatient","PatientProvider","usePatient","useStyles","makeStyles","color","PatientSnapshot","classes","useMemo","entry","find","n","use","given","join","family","getPatientName","address","city","state","filter","item","getPatientAddress","age","birthDateString","today","Date","birthDate","getFullYear","m","getMonth","getDate","getPatientAge","patientSnapshot","faUserCircle","patientSnapshot__photo","patientSnapshot__info","patientName","clsx","patientSnapshot__list","gender","DropDown","options","label","visible","onChange","selectedValue","setSelectPathway","onChangeCallback","dropdown","htmlFor","classNamePrefix","inputId","aria-label","PathwayContext","evaluatedPathway","setEvaluatedPathway","updateEvaluatedPathways","PathwayProvider","pathwayCtx","usePathwayContext","navigation","backgroundColor","Navigation","evaluatedPathways","selectPathway","onBack","pathway","undefined","pathwayOptions","map","navigation__leftPanel","faChevronLeft","navigation__back","navigation__rightPanel","pathwayOption","ALL_RESOURCES_PATIENT_REFERENCE","mapperName","get","MapperClass","mappers","mapperInstance","applyMapping","bundle","execute","getEverythingManually","client","supportedResources","push","requests","forEach","resource","request","flat","pageLimit","then","result","length","catch","error","console","log","Promise","all","results","x","getEverythingRevInclude","onError","query","FHIRClientContext","FHIRClientProvider","useFHIRClient","PatientRecordsContext","patientRecords","setPatientRecords","evaluatePath","setEvaluatePath","PatientRecordsProvider","usePatientRecords","PatientRecordElement","resourceType","resourcesByType","patientRecord","getResourceByType","isExpanded","setIsExpanded","chevron","faChevronUp","faChevronDown","resourceCount","element","title","expand","elementContainer","Visualizer","rows","PatientRecord","headerElement","recordContainerElement","useRef","useEffect","current","style","height","window","innerHeight","clientHeight","record","ref","sidebar","key","recordToggle","faNotesMedical","graphLayoutProvider","layout","nodeDimensions","nodeNames","Object","keys","states","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","stateName","nodeDimension","setNode","width","transitions","transition","condition","description","setEdge","nodeCoordinates","startNodeShift","node","nodeName","y","edges","e","edge","edgeName","v","w","start","end","points","p","layoutDagre","START","nodes","rank","NaN","horizontalPosition","parents","canMove","includes","initializeNodes","graph","HORIZONTAL_OFFSET","NODE_WIDTH","VERTICAL_OFFSET","NODE_HEIGHT","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","parentsOnHigherRank","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","setOpen","Popup","content","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","type","largeActionButton","indexStyles","button","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","faTimes","MediumActionButton","mediumActionButton","ActionButton","size","UserContext","user","setUser","UserProvider","NoteContext","note","setNote","NoteDataProvider","date","getHumanName","toDateString","physician","birthdate","mcodeElements","status","useNote","toString","treatment","notes","person","Array","isArray","prefix","suffix","createDocumentReference","data","labelOrCondition","v1","meta","lastUpdated","getCurrentTime","subject","reference","identifier","system","btoa","attachment","contentType","coding","code","display","indexed","createNoteContent","pathwayState","action","tnm","profile","elements","obs","valueCodeableConcept","some","index","findIndex","now","withLeadingZero","getDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","PopupContent","values","showCheck","setShowCheck","selected","setSelected","popupContent","popupChoice","footer","documentReference","create","MissingDataPopup","missingDataPopup","popupTrigger","faEdit","externalLink","ReportField","sectionTitle","field","PhysicianNotesSection","sectionContainer","sectionIconContainer","notesField","ReportSection","fields","fieldContainer","shortid","generate","ReportModal","onConfirm","onDecline","patientSection","observationField","pathwaySection","reportModal","faUser","faRoute","faStickyNote","confirmationSection","confirmationButtonGroup","isGuidanceState","ExpandedNode","memo","isActionable","isGuidance","documentation","showReport","setShowReport","newPatientRecords","pathwayResource","patientId","resourceProperties","intent","authoredOn","toISOString","medicationCodeableConcept","Error","translatePathwayRecommendation","ExpandedNodeMemo","setComments","nc","prevNote","comments","onAccept","ExpandedNodeField","descTitle","desc","StatusField","rawDate","toLocaleString","guidance","returnElements","href","target","rel","faExternalLinkAlt","procedure","performedPeriod","performedDateTime","renderGuidance","branch","observation","valueCoding","effectiveDateTime","identifierArray","documentReferenceIdentifier","atob","arr","renderBranch","defaultText","expandedNode","infoTable","commentsForm","defaultTextButton","preventDefault","borderColor","Node","forwardRef","isOnPatientPath","isCurrentNode","xCoordinate","yCoordinate","expanded","onClickHandler","top","left","backgroundColorClass","onPatientPath","notOnPatientPath","topLevelClasses","expandedNodeClass","nodeStyles","actionable","childActionable","childOnPatientPath","childNotOnPatientPath","isAccepted","nodeTitle","clickable","iconAndLabel","NodeIcon","faMicroscope","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faCapsules","faSyringe","StatusIcon","faCheckCircle","faTimesCircle","statusIcon","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","fill","markerEnd","Arrow","arrowOnPatientPath","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","getFixture","filename","fetch","cql","cqlFormat","cqlBlock","resourceName","concat","cqlAdd","isConditional","extractMultipartBoundary","extractMultipartFileName","extractJSONContent","extractCQLInclude","url","executeElm","elm","libraries","lib","Library","Repository","executor","Executor","psource","PatientSource","FHIRv400","loadBundles","exec","getAllDocumentation","patientData","resources","patientDocumentation","statesWithDocumentation","doc","onPath","entries","retrieveResource","retrieveNote","formatDocumentation","formatNextState","currentState","isComplete","nextState","currentStateName","nextStates","currentTransitionDocumentation","getConditionalNextState","evaluatePatientOnPathway","navigational","processELMCommon","library","extractNavigationCQL","processCQLCommon","currentStates","stateData","completedStates","Patient","pathwayData","evaluatePathwayCriteria","criteria","elementName","extractCriteriaCQL","resultItems","matches","evaluationResult","actual","match","criteriaResultItem","expected","pathwayName","criteriaResultItems","criteriaData","resolve","reject","setTimeout","FHIRHelpers","gatherCQL","formdata","FormData","append","method","body","headers","boundary","obj","oldArray","line","elmName","JSON","parse","convertCQL","Accept","json","convertBasicCQL","elmResults","patientResults","patientIds","getPath","pathwayResults","isEdgeOnPatientPath","path","startIndex","endIndex","interactive","expandCurrentNode","graphElement","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","setPath","getGraphLayout","nodeElement","from","graphLayout","setLayout","maxHeight","max","minX","min","toAdd","layoutKeys","initialExpandedState","curr","_setExpanded","setExpanded","prevState","cancel","r","currentNode","ResizeSensor","maxWidth","l","GraphMemo","root","marginRight","docResource","xmlns","zIndex","overflow","PathwaysListElement","callback","isVisible","setIsVisible","pathwayElement","role","numElements","infoContainer","details","matchingElement","controls","faPlus","faMinus","PathwaysList","service","setCriteria","criteriaPromises","criteriaResults","sort","pathways_list","container","pathwayListHeaderContainer","header_title","header_title__header","header_title__note","matchedElementsLabel","faCaretDown","useGetPathwaysService","setResult","getPathways","response","listOfFiles","f","typedFetch","listOfPromises","pathwaysList","payload","MockedFHIRClient","App","demoId","_setPatientRecords","currentPathway","setCurrentPathway","setEvaluatedPathways","setClient","graphContainerElement","providerProps","resultPatient","FHIR","oauth2","init","clientId","scope","statement","rest","operation","definition","getEverything","revIncludeResources","searchRevInclude","searchInclude","filters","searchParam","searchParams","getPatientRecord","records","every","read","setEvaluatedPathwayCallback","scrollTo","newList","rootElement","document","getElementById","ReactDOM","render","exact","params","webpackContext","req","webpackContextResolve","__webpack_require__","o"],"mappings":"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CA,sBACA,wBACA,yBACA,6BACA,6BACA,eACA,iBACA,eACA,aACA,aACA,gBACA,0BACA,mBACA,mBACA,8BACA,gCACA,+BACA,iCACA,gCACA,mBACA,iBACA,yBACA,0BACA,6BACA,uBACA,2BACA,uBACA,0BACA,wBACA,0BACA,4BACA,gCACA,+BACA,gCACA,+BACA,oBACA,wBACA,qBACA,mBACA,0BACA,2BACA,4BACA,6BACA,4BACA,oBACA,sBACA,2BACA,6BACA,8BACA,4BACA,6BACA,iBACA,cACA,yBACA,wBACA,eACA,sBACA,wBACA,sBACA,6BACA,8BACA,4BACA,8BACA,6BACA,8BACA,+BACA,mCACA,4BACA,mCACA,8BACA,6BACA,qCACA,gBACA,gBACA,wBACA,oBACA,sBACA,uBACA,qBACA,sBACA,eACA,YACA,cACA,oBACA,sBACA,uBACA,sBACA,qBACA,+BACA,qCACA,yBACA,2BACA,2BACA,eACA,eACA,eACA,cACA,+BACA,6BACA,4BACA,4BACA,oBACA,6BACA,4BACA,gCACA,2BACA,2BACA,+BACA,+BACA,6BACA,2BACA,0BACA,6BACA,wBACA,6BACA,0BACA,yBACA,iBACA,2BACA,sBACA,yBACA,iBACA,sBACA,uBACA,mBACA,kBACA,mBACA,iBACA,eACA,oBACA,gBACA,oBACA,4BACA,qBACA,sBACA,oBACA,qBACA,uBACA,+BACA,8BACA,iCACA,iCACA,+BACA,gCACA,wBACA,0BACA,uBACA,wBACA,wBACA,yBACA,6BACA,wBACA,cACA,gBACA,qBACA,qBACA,+BACA,qBACA,mBACA,uBACA,qBACA,mBACA,mBACA,gBACA,gBACA,eACA,qBACA,oBACA,mBACA,8BACA,4BACA,sBACA,oBACA,8BACA,8BACA,uBACA,wBACA,+BACA,iCACA,gCACA,kCACA,iCACA,kBACA,mB,kBC5MIC,EAAazJ,IAAO0J,IAAI,UACxBC,EAAcC,UAAQH,GACtBI,GAAiBF,EAAc,IAAIA,EAAgB,KAEnDG,GAAe,SAACC,GAKpB,OAJIF,IAAkB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","file":"static/js/main.d5bc5119.chunk.js","sourcesContent":["export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily:\n    \"'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n};\n\nconst theme = createMuiTheme({\n  typography: { ...typography },\n  palette: {\n    primary: {\n      main: colors.blue\n    },\n    secondary: {\n      main: colors.red\n    },\n    common: colors,\n    background: {\n      default: colors.grayLighter\n    },\n    text: {\n      primary: colors.gray,\n      secondary: colors.gray\n    }\n  }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: {\n    primary: {\n      main: colors.blue\n    },\n    secondary: {\n      main: colors.red\n    },\n    common: colors,\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }\n});\n\nexport default theme;\nexport { theme, projectorTheme };\n","import React, { FC, createContext, useState, useCallback, useContext, ReactNode } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { theme as defaultTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContext = createContext(() => {\n  // this comment does nothing but make eslint happy :)\n});\nexport const useThemeToggle = (): (() => void) => useContext(ThemeContext);\n\nconst ThemeProvider: FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setTheme] = useState(defaultTheme);\n  const toggleTheme = useCallback(() => {\n    setTheme(currentTheme => (currentTheme === defaultTheme ? projectorTheme : defaultTheme));\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ThemeContext.Provider value={toggleTheme}>{children}</ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { FC, useState, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport styles from './Header.module.scss';\n\ninterface HeaderProps {\n  logo: string;\n}\n\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleToggleTheme = (): void => {\n    toggleTheme();\n    handleClose();\n  };\n\n  return (\n    <header className={styles.header}>\n      <img src={props.logo} alt=\"logo\" />\n      <button onClick={handleClick} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { Patient } from 'fhir-objects';\ninterface PatientProviderProps {\n  children: ReactNode;\n  value: PatientContextInterface;\n}\n\ninterface PatientContextInterface {\n  patient: Patient | null;\n  setPatient: Function;\n}\n\nexport const PatientContext = createContext<PatientContextInterface>({\n  patient: null,\n  setPatient: (): void => {\n    return;\n  }\n});\n\nexport const PatientProvider: FC<PatientProviderProps> = ({ children, value }) => {\n  return value.patient == null ? (\n    <div>Loading...</div>\n  ) : (\n    <PatientContext.Provider value={value}>{children}</PatientContext.Provider>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const usePatient = (): PatientContextInterface => useContext(PatientContext)!;\n","import React, { FC, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { HumanName, Address } from 'fhir-objects';\n\nimport { usePatient } from '../PatientProvider';\nimport styles from './PatientSnapshot.module.scss';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'patient-snapshot-list': {\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'PatientSnapshot' }\n);\n\nconst getPatientName = (name: Array<HumanName> = []): string => {\n  const entry = name.find(n => n.use === 'official') || name[0];\n  return entry ? `${(entry.given || []).join(' ')} ${entry.family}` : 'No name';\n};\n\nconst getPatientAge = (birthDateString: string | undefined): number => {\n  if (!birthDateString) return 0;\n  const today = new Date();\n  const birthDate = new Date(birthDateString);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n\nconst getPatientAddress = (address: Array<Address> = []): string => {\n  const entry = address[0];\n  return entry ? [entry.city, entry.state].filter(item => !!item).join(', ') : 'No Address';\n};\n\nconst PatientSnapshot: FC<{}> = () => {\n  const classes = useStyles();\n  const patient = usePatient().patient as fhir.Patient;\n  const name = useMemo(() => getPatientName(patient.name), [patient]);\n  const address = useMemo(() => getPatientAddress(patient.address), [patient]);\n  const age = useMemo(() => getPatientAge(patient.birthDate), [patient]);\n\n  return (\n    <div className={styles.patientSnapshot}>\n      <FontAwesomeIcon icon={faUserCircle} className={styles.patientSnapshot__photo} />\n\n      <div className={styles.patientSnapshot__info}>\n        <div className={styles.patientName}>{name}</div>\n\n        <ul className={clsx(styles.patientSnapshot__list, classes['patient-snapshot-list'])}>\n          <li>\n            DOB: {patient.birthDate} (Age: {age})\n          </li>\n          <li>Admin. Sex: {patient.gender}</li>\n          <li>Location: {address}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientSnapshot;\n","import React, { FC, useCallback } from 'react';\nimport Select from 'react-select';\n\nimport styles from './DropDown.module.scss';\nimport { Option } from 'option';\n\ninterface Props {\n  label?: string;\n  id: string;\n  visible: boolean;\n  options: Array<Option>;\n  onChange?: (value: Option | ReadonlyArray<Option> | null) => void;\n  selectedValue: Option | ReadonlyArray<Option> | null;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst DropDown: FC<Props> = ({\n  options,\n  label,\n  id,\n  visible,\n  onChange,\n  selectedValue,\n  setSelectPathway\n}: Props) => {\n  const onChangeCallback = useCallback(\n    (value: Option | ReadonlyArray<Option> | null | undefined) => {\n      if (onChange) onChange(value == null ? null : value);\n    },\n    [onChange]\n  );\n\n  if (visible)\n    return (\n      <div className={styles.dropdown}>\n        <div>\n          <label htmlFor={id}>{label}</label>\n          <button\n            onClick={(): void => {\n              setSelectPathway(true);\n            }}\n          >\n            Explore Pathways\n          </button>\n        </div>\n        <Select\n          classNamePrefix=\"DropDown\"\n          inputId={id}\n          value={selectedValue}\n          onChange={onChangeCallback}\n          options={options}\n          aria-label={label}\n        />\n      </div>\n    );\n  else return <div></div>;\n};\n\nexport default DropDown;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwayContextInterface } from 'pathways-model';\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n  pathwayCtx: PathwayContextInterface;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({\n  evaluatedPathway: null,\n  setEvaluatedPathway: () => {\n    //do nothing\n  },\n  updateEvaluatedPathways: () => {\n    //do nothing\n  }\n});\n\nexport const PathwayProvider: FC<PathwayProviderProps> = ({ children, pathwayCtx }) => {\n  return <PathwayContext.Provider value={pathwayCtx}>{children}</PathwayContext.Provider>;\n};\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport PatientSnapshot from 'components/PatientSnapshot';\nimport DropDown from 'components/DropDown';\nimport styles from './Navigation.module.scss';\nimport { EvaluatedPathway } from 'pathways-model';\nimport { Option } from 'option';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst useStyles = makeStyles(\n  theme => ({\n    navigation: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'Navigation' }\n);\n\ninterface Props {\n  evaluatedPathways: EvaluatedPathway[];\n  selectPathway: boolean;\n  setSelectPathway: (flag: boolean) => void;\n  onBack?: () => void;\n}\n\nconst Navigation: FC<Props> = ({ evaluatedPathways, selectPathway, setSelectPathway, onBack }) => {\n  const classes = useStyles();\n  const pathwayCtx = usePathwayContext();\n  const pathway = pathwayCtx.evaluatedPathway?.pathway;\n  const value =\n    pathway === undefined ? null : { label: pathway.name, value: pathwayCtx.evaluatedPathway };\n\n  const onChangeHandler = (pathwayOption: Option | ReadonlyArray<Option> | null): void => {\n    if (pathwayOption !== null && 'value' in pathwayOption) {\n      pathwayCtx.setEvaluatedPathway(pathwayOption.value);\n    }\n  };\n\n  const pathwayOptions = evaluatedPathways.map(evaluatedPathway => ({\n    label: evaluatedPathway.pathway.name,\n    value: evaluatedPathway\n  }));\n\n  return (\n    <nav className={clsx(styles.navigation, classes.navigation)}>\n      <div className={styles.navigation__leftPanel}>\n        {onBack && (\n          <FontAwesomeIcon\n            icon={faChevronLeft}\n            className={styles.navigation__back}\n            onClick={onBack}\n          />\n        )}\n\n        <PatientSnapshot />\n      </div>\n\n      <div className={styles.navigation__rightPanel}>\n        <DropDown\n          label=\"Pathway:\"\n          id=\"patient-view\"\n          visible={!selectPathway}\n          options={pathwayOptions}\n          selectedValue={value}\n          setSelectPathway={setSelectPathway}\n          onChange={onChangeHandler}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","const ALL_RESOURCES_PATIENT_REFERENCE = [\n  'ReferralRequest:patient',\n  'DocumentManifest:patient',\n  'Goal:patient',\n  'Consent:patient',\n  'DocumentReference:patient',\n  'ImagingManifest:patient',\n  'RiskAssessment:patient',\n  'CareTeam:patient',\n  'ImagingStudy:patient',\n  'FamilyMemberHistory:patient',\n  'Encounter:patient',\n  'DeviceRequest:patient',\n  'AllergyIntolerance:patient',\n  'CarePlan:patient',\n  'EpisodeOfCare:patient',\n  'Procedure:patient',\n  'List:patient',\n  'Immunization:patient',\n  'VisionPrescription:patient',\n  'ProcedureRequest:patient',\n  'Flag:patient',\n  'Observation:patient',\n  'DiagnosticReport:patient',\n  'NutritionOrder:patient',\n  'Condition:patient',\n  'Composition:patient',\n  'DetectedIssue:patient',\n  'SupplyDelivery:patient',\n  'ClinicalImpression:patient',\n  'DeviceUseStatement:patient',\n  'Task:subject',\n  'Task:requester',\n  'Task:patient',\n  'Task:owner',\n  'Task:focus',\n  'Task:based-on',\n  'SupplyRequest:requester',\n  'Specimen:subject',\n  'Specimen:patient',\n  'ServiceDefinition:successor',\n  'ServiceDefinition:predecessor',\n  'ServiceDefinition:depends-on',\n  'ServiceDefinition:derived-from',\n  'ServiceDefinition:composed-of',\n  'Sequence:patient',\n  'Schedule:actor',\n  'RiskAssessment:subject',\n  'ResearchSubject:patient',\n  'ResearchSubject:individual',\n  'RequestGroup:subject',\n  'RequestGroup:participant',\n  'RequestGroup:patient',\n  'RequestGroup:definition',\n  'RelatedPerson:patient',\n  'ReferralRequest:subject',\n  'ReferralRequest:requester',\n  'QuestionnaireResponse:subject',\n  'QuestionnaireResponse:source',\n  'QuestionnaireResponse:patient',\n  'QuestionnaireResponse:author',\n  'Provenance:target',\n  'Provenance:entity-ref',\n  'Provenance:patient',\n  'Provenance:agent',\n  'ProcessResponse:request',\n  'ProcedureRequest:subject',\n  'ProcedureRequest:replaces',\n  'ProcedureRequest:performer',\n  'ProcedureRequest:based-on',\n  'Procedure:subject',\n  'Procedure:performer',\n  'PlanDefinition:successor',\n  'PlanDefinition:predecessor',\n  'PlanDefinition:derived-from',\n  'PlanDefinition:depends-on',\n  'PlanDefinition:composed-of',\n  'Person:patient',\n  'Person:link',\n  'PaymentNotice:response',\n  'PaymentNotice:request',\n  'Patient:link',\n  'Observation:subject',\n  'Observation:performer',\n  'MessageHeader:focus',\n  'MedicationStatement:source',\n  'MedicationStatement:subject',\n  'MedicationRequest:subject',\n  'MedicationRequest:requester',\n  'MedicationDispense:subject',\n  'MedicationDispense:receiver',\n  'MedicationDispense:performer',\n  'MedicationAdministration:subject',\n  'MedicationRequest:patient',\n  'MedicationAdministration:patient',\n  'MedicationStatement:patient',\n  'MedicationDispense:patient',\n  'MedicationAdministration:performer',\n  'Media:subject',\n  'Media:patient',\n  'MeasureReport:patient',\n  'Measure:successor',\n  'Measure:predecessor',\n  'Measure:derived-from',\n  'Measure:depends-on',\n  'Measure:composed-of',\n  'List:subject',\n  'List:item',\n  'List:source',\n  'Library:successor',\n  'Library:predecessor',\n  'Library:derived-from',\n  'Library:composed-of',\n  'Library:depends-on',\n  'ImplementationGuide:resource',\n  'ImmunizationRecommendation:patient',\n  'ImagingManifest:author',\n  'GuidanceResponse:subject',\n  'GuidanceResponse:patient',\n  'Group:member',\n  'Goal:subject',\n  'Flag:subject',\n  'Flag:author',\n  'ExplanationOfBenefit:patient',\n  'ExplanationOfBenefit:payee',\n  'EnrollmentRequest:subject',\n  'EnrollmentRequest:patient',\n  'Encounter:subject',\n  'EligibilityRequest:patient',\n  'DocumentReference:subject',\n  'DocumentReference:related-ref',\n  'DocumentReference:author',\n  'DocumentManifest:subject',\n  'DocumentManifest:related-ref',\n  'DocumentManifest:content-ref',\n  'DocumentManifest:recipient',\n  'DiagnosticReport:subject',\n  'DocumentManifest:author',\n  'DeviceUseStatement:subject',\n  'DeviceRequest:subject',\n  'DeviceRequest:priorrequest',\n  'DeviceRequest:performer',\n  'DeviceRequest:based-on',\n  'Device:patient',\n  'DetectedIssue:implicated',\n  'Coverage:subscriber',\n  'Coverage:policy-holder',\n  'Coverage:payor',\n  'Contract:term-topic',\n  'Coverage:beneficiary',\n  'Contract:subject',\n  'Contract:signer',\n  'Contract:patient',\n  'Contract:agent',\n  'Consent:data',\n  'Consent:consentor',\n  'Consent:actor',\n  'Condition:subject',\n  'Condition:evidence-detail',\n  'Condition:asserter',\n  'Composition:subject',\n  'Composition:entry',\n  'Composition:author',\n  'Composition:attester',\n  'CommunicationRequest:subject',\n  'CommunicationRequest:sender',\n  'CommunicationRequest:requester',\n  'CommunicationRequest:recipient',\n  'CommunicationRequest:patient',\n  'CommunicationRequest:based-on',\n  'Communication:subject',\n  'Communication:recipient',\n  'Communication:sender',\n  'Communication:patient',\n  'Communication:part-of',\n  'Communication:based-on',\n  'ClinicalImpression:subject',\n  'ClaimResponse:patient',\n  'Claim:payee',\n  'Claim:patient',\n  'ChargeItem:subject',\n  'ChargeItem:patient',\n  'ChargeItem:participant-actor',\n  'ChargeItem:enterer',\n  'CareTeam:subject',\n  'CareTeam:participant',\n  'CarePlan:performer',\n  'CarePlan:subject',\n  'BodySite:patient',\n  'Basic:subject',\n  'Basic:patient',\n  'Basic:author',\n  'AuditEvent:patient',\n  'AuditEvent:entity',\n  'AuditEvent:agent',\n  'AppointmentResponse:patient',\n  'AppointmentResponse:actor',\n  'Appointment:patient',\n  'Appointment:actor',\n  'AllergyIntolerance:recorder',\n  'AllergyIntolerance:asserter',\n  'AdverseEvent:subject',\n  'AdverseEvent:recorder',\n  'ActivityDefinition:successor',\n  'ActivityDefinition:predecessor',\n  'ActivityDefinition:depends-on',\n  'ActivityDefinition:derived-from',\n  'ActivityDefinition:composed-of',\n  'Account:subject',\n  'Account:patient'\n];\n\nexport { ALL_RESOURCES_PATIENT_REFERENCE };\n","import { ALL_RESOURCES_PATIENT_REFERENCE } from './patient';\n\nimport { mappers } from 'fhir-mapper';\nimport config from './ConfigManager';\n\nconst mapperName = config.get('mapper');\nconst MapperClass = mappers[mapperName];\nconst mapperInstance = MapperClass ? new MapperClass() : null;\n\nconst applyMapping = (bundle) => {\n  if (mapperInstance && bundle)\n  {\n    bundle = mapperInstance.execute(bundle);\n  }\n  return bundle;\n}\n\n/**\n * There are slight discrepencies between the $everything, revinclude, and manual methods that affect the resources that might be returned\n * @param {Object} client - the fhir client\n */\nfunction getPatientRecord(client) {\n  return client.request(`/metadata`).then(statement => {\n    if (\n      statement.rest[0].operation.find(\n        e => (e.definition.reference || e.definition) === 'OperationDefinition/Patient--everything'\n      )\n    ) {\n      // supports patient everything\n      return getEverything(client).then(bundle => applyMapping(bundle));\n    } else {\n      console.log('Cannot use $everything, using reverse includes instead');\n      const supportedResources = [];\n      let revIncludeResources = [];\n      statement.rest[0].resource.forEach(resource => {\n        if (resource.type === 'Patient') {\n          if (resource.searchRevInclude) {\n            revIncludeResources = resource.searchRevInclude;\n          }\n        } else if (resource.searchInclude) {\n          const filters = resource.searchInclude.filter(target => {\n            return target === `${resource.type}:patient` || target === `${resource.type}:subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(filters[0]);\n          }\n        } else if (resource.searchParam) {\n          const filters = resource.searchParams.filter(target => {\n            return target.name === `patient` || target.name === `subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(`${resource.type}:${filters[0].name}`);\n          }\n        }\n      });\n      if (revIncludeResources.length > 0) {\n        return getEverythingRevInclude(client, revIncludeResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else if (supportedResources.length > 0) {\n        return getEverythingRevInclude(client, supportedResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else {\n        console.log('Cannot use reverse includes, retrieving all resources manually from predefined list');\n        return getEverythingManually(client, ALL_RESOURCES_PATIENT_REFERENCE).then(bundle => applyMapping(bundle));\n      }\n    }\n  });\n}\n\n/**\n * Uses the $everything operation.  The server takes care of constructing the bundle that gets returned, so\n * it is generally not possible to know how it is deciding what resources to send.\n */\nfunction getEverything(client) {\n  return client.request(`/Patient/${client.patient.id}/$everything`, { flat: true, pageLimit: 0 }).then(bundle => {\n    return bundle;\n  });\n}\n\n/**\n * Uses regular FHIR search queries on every resource that is supported and can refer to a patient.\n * Which resources it queries is dependent on info available in the Capability Statement, and\n * it only provides a one layer deep search, so the results might be different from $everything.\n */\nfunction getEverythingManually(client, supportedResources) {\n  supportedResources.push('Patient:_id');\n  const requests = [];\n  supportedResources.forEach(resource => {\n    resource = resource.split(':');\n    const request = client\n      .request(`${resource[0]}?${resource[1]}=${client.patient.id}`, { flat: true, pageLimit: 0 })\n      .then(result => {\n        if (result.length > 0) {\n          return result;\n        }\n      })\n      .catch(error => {\n        console.log(`failed to fetch ${resource}`);\n        console.error(error);\n      });\n    requests.push(request);\n  });\n\n  return Promise.all(requests).then(results => {\n    const bundle = results\n      .filter(x => {\n        return x;\n      })\n      .flat();\n    return bundle;\n  });\n}\n\n/**\n * Uses the _revinclude FHIR search parameter to request the patient resource and any resource that refers to it.\n * The list of resources it checks is retrieved from the Capability Statement.  It is slightly better than the manual\n * method since it does everything in one request.\n */\nfunction getEverythingRevInclude(client, supportedResources, onError) {\n  const query = supportedResources.join('&_revinclude=');\n  return client\n    .request(`/Patient?_id=${client.patient.id}&_revinclude=${query}`, { flat: true })\n    .then(result => {\n      return result;\n    })\n    .catch(error => {\n      console.log('Reverse Include query failed, manually fetching resources instead.');\n      console.error(error);\n      onError(client, supportedResources);\n    });\n}\n\nexport { getPatientRecord };\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwaysClient } from 'pathways-client';\n\ninterface FHIRClientProviderProps {\n  client: PathwaysClient; // TODO: fhirclient.Client\n  children: ReactNode;\n}\n\nexport const FHIRClientContext = createContext({ patient: {} });\n\nexport const FHIRClientProvider: FC<FHIRClientProviderProps> = ({ client, children }) => (\n  <FHIRClientContext.Provider value={client}>{children}</FHIRClientContext.Provider>\n);\n\nexport const useFHIRClient = (): PathwaysClient => useContext(FHIRClientContext);\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { DomainResource } from 'fhir-objects';\ninterface PatientRecordsProviderProps {\n  children: ReactNode;\n  value: PatientRecordsContextInterface;\n}\n\ninterface PatientRecordsContextInterface {\n  patientRecords: DomainResource[];\n  setPatientRecords: Function;\n  evaluatePath: boolean;\n  setEvaluatePath: (value: boolean) => void;\n}\n\nexport const PatientRecordsContext = createContext<PatientRecordsContextInterface>({\n  patientRecords: [],\n  setPatientRecords: (): void => {\n    return;\n  },\n  evaluatePath: true,\n  setEvaluatePath: (): void => {\n    return;\n  }\n});\n\nexport const PatientRecordsProvider: FC<PatientRecordsProviderProps> = ({ children, value }) => {\n  return <PatientRecordsContext.Provider value={value}>{children}</PatientRecordsContext.Provider>;\n};\n\nexport const usePatientRecords = (): PatientRecordsContextInterface =>\n  useContext(PatientRecordsContext);\n","import React, { FC, useState, useEffect, useRef, RefObject } from 'react';\nimport { usePatient } from 'components/PatientProvider';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport {\n  AllergiesVisualizer,\n  CarePlansVisualizer,\n  ConditionsVisualizer,\n  EncountersVisualizer,\n  ImmunizationsVisualizer,\n  MedicationsVisualizer,\n  ObservationsVisualizer,\n  PatientVisualizer,\n  ProceduresVisualizer,\n  ReportsVisualizer\n} from 'fhir-visualizers';\nimport { DomainResource } from 'fhir-objects';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faNotesMedical,\n  faChevronLeft,\n  faChevronUp,\n  faChevronDown\n} from '@fortawesome/free-solid-svg-icons';\nimport styles from './PatientRecord.module.scss';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nconst getResourceByType = (\n  patientRecord: ReadonlyArray<DomainResource>,\n  resourceType: string\n): ReadonlyArray<object> => {\n  return patientRecord.filter(resource => resource.resourceType === resourceType);\n};\n\ninterface PatientRecordProps {\n  headerElement: RefObject<HTMLDivElement>;\n}\n\ninterface PatientRecordElementProps {\n  resourceType: string;\n}\n\ninterface VisualizerProps {\n  resourceType: string;\n  resourcesByType: readonly object[];\n}\n\nconst PatientRecord: FC<PatientRecordProps> = ({ headerElement }) => {\n  const recordContainerElement = useRef<HTMLDivElement>(null);\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  const resourceTypes = [\n    'Patient',\n    'Condition',\n    'Observation',\n    'DiagnosticReport',\n    'MedicationRequest',\n    'AllergyIntolerance',\n    'CarePlan',\n    'Procedure',\n    'Encounter',\n    'Immunization'\n  ];\n\n  const expand = (): void => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Set the height of the patient record container\n  useEffect(() => {\n    if (recordContainerElement?.current && headerElement?.current)\n      recordContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  if (isExpanded) {\n    return (\n      <div className={styles.record} ref={recordContainerElement}>\n        <div className={styles.sidebar}>\n          {resourceTypes.map(resourceType => (\n            <PatientRecordElement resourceType={resourceType} key={resourceType} />\n          ))}\n        </div>\n\n        <div className={styles.recordToggle} onClick={expand}>\n          <FontAwesomeIcon icon={faChevronLeft} />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles.record}>\n        <div className={styles.recordToggle} onClick={expand}>\n          <FontAwesomeIcon icon={faNotesMedical} />\n        </div>\n      </div>\n    );\n  }\n};\n\nconst PatientRecordElement: FC<PatientRecordElementProps> = ({ resourceType }) => {\n  const resources = usePatientRecords().patientRecords;\n  const resourcesByType = getResourceByType(resources, resourceType);\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const chevron: IconProp = isExpanded ? faChevronUp : faChevronDown;\n  const resourceCount: string =\n    resourceType !== 'Patient' ? '(' + resourcesByType.length + ')' : '';\n\n  return (\n    <div className={styles.element}>\n      <div className={styles.title} onClick={(): void => setIsExpanded(!isExpanded)}>\n        <div>\n          {resourceType} {resourceCount}\n        </div>\n        <div className={styles.expand}>\n          <FontAwesomeIcon icon={chevron} />\n        </div>\n      </div>\n\n      {isExpanded && (\n        <div className={styles.elementContainer}>\n          <Visualizer resourceType={resourceType} resourcesByType={resourcesByType} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst Visualizer: FC<VisualizerProps> = ({ resourceType, resourcesByType }) => {\n  const patient = usePatient().patient as fhir.Patient;\n  if (resourceType === 'Patient') return <PatientVisualizer patient={patient} />;\n  else if (resourceType === 'Condition') return <ConditionsVisualizer rows={resourcesByType} />;\n  else if (resourceType === 'Observation') return <ObservationsVisualizer rows={resourcesByType} />;\n  else if (resourceType === 'DiagnosticReport') return <ReportsVisualizer rows={resourcesByType} />;\n  else if (resourceType === 'MedicationRequest')\n    return <MedicationsVisualizer rows={resourcesByType} />;\n  else if (resourceType === 'AllergyIntolerance')\n    return <AllergiesVisualizer rows={resourcesByType} />;\n  else if (resourceType === 'CarePlan') return <CarePlansVisualizer rows={resourcesByType} />;\n  else if (resourceType === 'Procedure') return <ProceduresVisualizer rows={resourcesByType} />;\n  else if (resourceType === 'Encounter') return <EncountersVisualizer rows={resourcesByType} />;\n  else if (resourceType === 'Immunization')\n    return <ImmunizationsVisualizer rows={resourcesByType} />;\n  else return <div>Unsupported Resource</div>;\n};\n\nexport default PatientRecord;\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport indexStyles from 'styles/index.module.scss';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} ${indexStyles.button} ${type === 'decline' &&\n        styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({\n  user: '',\n  setUser: () => {\n    // do nothing\n  }\n});\n\ninterface UserProviderProps {\n  children: ReactNode;\n  value: UserContextInterface;\n}\nexport const UserProvider: FC<UserProviderProps> = ({ children, value }) => {\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import React, {\n  FC,\n  createContext,\n  useContext,\n  ReactNode,\n  useState,\n  SetStateAction,\n  Dispatch\n} from 'react';\nimport { usePathwayContext } from './PathwayProvider';\nimport { usePatient } from './PatientProvider';\nimport { getHumanName } from 'utils/fhirUtils';\nimport { useUser } from './UserProvider';\nexport interface Note {\n  patient: string;\n  date: string;\n  physician: string;\n  birthdate?: string;\n  mcodeElements: {\n    [key: string]: string;\n  };\n  pathway?: string;\n  node?: string;\n  status: string;\n  treatment?: string;\n  notes?: string;\n}\n\ninterface NoteDataProviderProps {\n  children: ReactNode;\n  date: Date;\n}\n\ninterface NoteContextProps {\n  note: Note | null;\n  setNote: Dispatch<SetStateAction<Note>> | (() => void);\n}\n\nexport const NoteContext = createContext<NoteContextProps>({\n  note: null,\n  setNote: () => {\n    // do nothing.\n  }\n});\n\nexport const NoteDataProvider: FC<NoteDataProviderProps> = ({ children, date }) => {\n  const patient = usePatient().patient as fhir.Patient;\n  const { user } = useUser();\n  const name = patient?.name ? getHumanName(patient.name) : '';\n  const [note, setNote] = useState<Note>({\n    patient: name,\n    date: date.toDateString(),\n    physician: user,\n    birthdate: patient?.birthDate || '',\n    mcodeElements: {},\n    pathway: usePathwayContext().evaluatedPathway?.pathway.name,\n    status: 'Pending'\n  });\n\n  return <NoteContext.Provider value={{ note, setNote }}>{children}</NoteContext.Provider>;\n};\n\nexport const useNote = (): NoteContextProps => useContext(NoteContext);\n\nexport const toString = (note: Note): string => {\n  let mcodeElements = '';\n  Object.keys(note.mcodeElements).forEach(element => {\n    mcodeElements += `${element}: ${note.mcodeElements[element]}\\n`;\n  });\n  const noteString = `Date: ${note.date}\\n\nPatient: ${note.patient}\\n\nBirthdate: ${note.birthdate}\\n\nPhysician: ${note.physician}\\n\n${mcodeElements}\nPathway: ${note.pathway}\\n\nNode: ${note.node}\\n\nStatus: ${note.status}\\n\nTreatment: ${note.treatment}\\n\nNotes: ${note.notes}\n  `;\n  return noteString;\n};\n","import { GuidanceState } from 'pathways-model';\nimport { Note, toString } from 'components/NoteDataProvider';\nimport {\n  Patient,\n  DomainResource,\n  HumanName,\n  DocumentReference,\n  Observation,\n  ServiceRequest,\n  MedicationRequest\n} from 'fhir-objects';\nimport { v1 } from 'uuid';\n\n// translates pathway recommendation resource into suitable FHIR resource\nexport function translatePathwayRecommendation(\n  pathwayResource: MedicationRequest | ServiceRequest,\n  patientId: string\n): MedicationRequest | ServiceRequest {\n  const { resourceType } = pathwayResource;\n  const resourceProperties = {\n    id: v1(),\n    resourceType,\n    intent: 'order',\n    subject: { reference: `Patient/${patientId}` },\n    status: 'active',\n    authoredOn: new Date().toISOString(),\n    meta: {\n      lastUpdated: new Date().toISOString()\n    }\n  };\n\n  switch (resourceType) {\n    case 'ServiceRequest': {\n      const { code } = pathwayResource as ServiceRequest;\n      return {\n        ...resourceProperties,\n        code\n      } as ServiceRequest;\n    }\n    case 'MedicationRequest': {\n      const { medicationCodeableConcept } = pathwayResource as MedicationRequest;\n      return {\n        ...resourceProperties,\n        medicationCodeableConcept\n      } as MedicationRequest;\n    }\n    default: {\n      throw Error(`Translation for ${resourceType} not implemented.`);\n    }\n  }\n}\n\nexport function getHumanName(person: HumanName[]): string {\n  let name = '';\n  if (Array.isArray(person)) {\n    name = [\n      person[0]?.prefix?.join(' '),\n      person[0]?.given?.join(' '),\n      person[0]?.family,\n      person[0]?.suffix?.join(' ')\n    ].join(' ');\n  }\n  return name;\n}\n\nexport function createDocumentReference(\n  data: string,\n  labelOrCondition: string,\n  patient: Patient\n): DocumentReference {\n  return {\n    resourceType: 'DocumentReference',\n    id: v1(),\n    meta: {\n      lastUpdated: getCurrentTime()\n    },\n    status: 'current',\n    subject: { reference: `Patient/${patient.id}` },\n    identifier: [\n      {\n        system: 'pathways.documentreference',\n        value: btoa(labelOrCondition)\n      }\n    ],\n    content: [\n      {\n        attachment: {\n          data: btoa(data), // Base 64 encoded data\n          contentType: 'text/plain'\n        }\n      }\n    ],\n    // type and indexed are required in STU3 DocumentReference but not in R4\n    type: {\n      coding: [\n        {\n          system: 'http://loinc.org',\n          code: '34108-1',\n          display: 'Outpatient Note'\n        }\n      ]\n    },\n    indexed: ''\n  };\n}\n\nexport function createNoteContent(\n  note: Note,\n  patientRecords: DomainResource[],\n  status: string,\n  notes: string,\n  pathwayState?: GuidanceState\n): string {\n  note.status = status;\n  note.notes = notes;\n  if (pathwayState) {\n    note.treatment = pathwayState.action[0].description;\n    note.node = pathwayState.label;\n  }\n\n  const tnm: string[] = ['', '', ''];\n  patientRecords.forEach(record => {\n    // TODO: should use code bindings over\n    // profile names.\n    if (record.meta?.profile && record.meta.profile.length) {\n      const elements = [\n        'TNMClinicalPrimaryTumorCategory',\n        'TNMClinicalRegionalNodesCategory',\n        'TNMClinicalDistantMetastasesCategory'\n      ];\n\n      const profile = record.meta.profile[0];\n      if (record.resourceType === 'Observation') {\n        if (profile.includes('TumorMarkerTest') && record.resourceType === 'Observation') {\n          const obs = record as Observation;\n          const value = obs.valueCodeableConcept?.text;\n          const name = obs.code.text;\n          if (value && name) {\n            note.mcodeElements[name] = value;\n          }\n        } else if (\n          elements.some(value => {\n            return profile.includes(value);\n          })\n        ) {\n          const index = elements.findIndex(value => {\n            return profile.includes(value);\n          });\n          if (index > -1) {\n            const obs = record as Observation;\n            const value = obs.valueCodeableConcept?.text;\n            if (value) {\n              tnm[index] = value;\n            }\n          }\n        }\n      }\n    }\n  });\n\n  note.mcodeElements['Clinical TNM'] = tnm.join(' ');\n  return toString(note);\n}\n\nfunction getCurrentTime(): string {\n  const now = new Date();\n  return (\n    now.getFullYear() +\n    '-' +\n    withLeadingZero(now.getMonth()) +\n    '-' +\n    withLeadingZero(now.getDay()) +\n    'T' +\n    withLeadingZero(now.getUTCHours()) +\n    ':' +\n    withLeadingZero(now.getUTCMinutes()) +\n    ':' +\n    withLeadingZero(now.getUTCSeconds()) +\n    '.' +\n    now.getUTCMilliseconds() +\n    '+00:00'\n  );\n}\n\nfunction withLeadingZero(n: number): string {\n  return n < 10 ? '0' + n : n.toString();\n}\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { usePatient } from 'components/PatientProvider';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { useFHIRClient } from 'components/FHIRClient';\nimport { createDocumentReference, createNoteContent } from 'utils/fhirUtils';\nimport { useNote } from 'components/NoteDataProvider';\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const patient = usePatient().patient as fhir.Patient;\n  const client = useFHIRClient();\n  const { patientRecords, setPatientRecords } = usePatientRecords();\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n  const { note } = useNote();\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n              // Create DocumentReference with selected value and add to patient record\n              if (note) {\n                const noteString = createNoteContent(note, patientRecords, 'completed', selected);\n                const documentReference = createDocumentReference(noteString, selected, patient);\n                setPatientRecords([...patientRecords, documentReference]);\n                client?.create?.(documentReference);\n              }\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import React, { FC, ReactNode } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types';\nimport styles from './ReportSection.module.scss';\nimport shortid from 'shortid';\n\ninterface ReportSectionProps {\n  icon: IconDefinition;\n  fields: { name: ReactNode; value: ReactNode }[];\n}\n\nconst ReportSection: FC<ReportSectionProps> = ({ icon, fields }) => {\n  return (\n    <div className={styles.sectionContainer}>\n      <div className={styles.sectionIconContainer}>\n        <FontAwesomeIcon icon={icon} className={styles.icon} />\n      </div>\n      <div className={styles.fieldContainer}>\n        {fields\n          .filter(field => field.name)\n          .map(field => (\n            <ReportField sectionTitle={field.name} value={field.value} key={shortid.generate()} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\ninterface ReportFieldProps {\n  sectionTitle: ReactNode;\n  value: ReactNode;\n}\n\nconst ReportField: FC<ReportFieldProps> = ({ sectionTitle, value }) => {\n  return (\n    <div className={styles.field}>\n      <b>{sectionTitle}: </b>\n      <span>{value}</span>\n    </div>\n  );\n};\n\ninterface PhysicianNotesProps {\n  icon: IconDefinition;\n  notes: string;\n}\n\nconst PhysicianNotesSection: FC<PhysicianNotesProps> = ({ icon, notes }) => {\n  return (\n    <div className={styles.sectionContainer}>\n      <div className={styles.sectionIconContainer}>\n        <FontAwesomeIcon icon={icon} className={styles.icon} />\n      </div>\n      <div className={styles.notesField}>\n        <b>Physician Notes: </b>\n        <div>{notes}</div>\n      </div>\n    </div>\n  );\n};\n\nexport { PhysicianNotesSection };\nexport default ReportSection;\n","import React, { FC } from 'react';\nimport { useNote } from 'components/NoteDataProvider';\nimport ReportSection, { PhysicianNotesSection } from './ReportSection';\nimport styles from './ReportModal.module.scss';\nimport { faUser, faNotesMedical, faRoute, faStickyNote } from '@fortawesome/free-solid-svg-icons';\nimport ActionButton from 'components/ActionButton';\n\ninterface ReportModalInterface {\n  onConfirm: () => void;\n  onDecline: () => void;\n}\n\nconst ReportModal: FC<ReportModalInterface> = ({ onConfirm, onDecline }) => {\n  const { note } = useNote();\n  const reportName = 'Pathway Report';\n  const patientSection = [\n    { name: 'Date', value: note?.date },\n    { name: 'Patient', value: note?.patient },\n    { name: 'Date of Birth', value: note?.birthdate },\n    { name: 'Physician', value: note?.physician }\n  ];\n\n  const observationField = [\n    { name: 'Primary Cancer', value: undefined },\n    { name: 'Laterality', value: undefined },\n    { name: 'Clinical TNM', value: undefined },\n    { name: 'Estrogen Receptor', value: undefined },\n    { name: 'Progesterone Receptor', value: undefined },\n    { name: 'HER2 Receptor', value: undefined }\n  ];\n\n  const pathwaySection = [\n    { name: 'Pathway Selected', value: note?.pathway },\n    { name: 'Recommendation', value: note?.node },\n    { name: 'Pathway Status', value: note?.status }\n  ];\n  return (\n    <div className={styles.reportModal}>\n      <h1>{reportName}</h1>\n      <div className={styles.sectionContainer}>\n        <ReportSection icon={faUser} fields={patientSection} />\n        <ReportSection icon={faNotesMedical} fields={observationField} />\n        <ReportSection icon={faRoute} fields={pathwaySection} />\n        {note?.notes && <PhysicianNotesSection icon={faStickyNote} notes={note?.notes} />}\n      </div>\n      <div className={styles.confirmationSection}>\n        <i>\n          The above note will be written into the EHR and any procedure requests will be submitted.\n        </i>\n        <div className={styles.confirmationButtonGroup}>\n          <ActionButton size=\"medium\" type=\"accept\" onClick={onConfirm} />\n          <ActionButton size=\"medium\" type=\"decline\" onClick={onDecline} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportModal;\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, useState, memo } from 'react';\nimport { GuidanceState, DocumentationResource, State, Action } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport ActionButton from 'components/ActionButton';\nimport ReportModal from 'components/ReportModal';\nimport { isBranchState } from 'utils/nodeUtils';\nimport { useFHIRClient } from 'components/FHIRClient';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { usePatient } from 'components/PatientProvider';\nimport {\n  translatePathwayRecommendation,\n  createDocumentReference,\n  createNoteContent\n} from 'utils/fhirUtils';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useNote } from 'components/NoteDataProvider';\nimport {\n  Resource,\n  DocumentReference,\n  Observation,\n  Procedure,\n  Identifier,\n  MedicationRequest,\n  ServiceRequest\n} from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n  documentation: DocumentationResource | undefined;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(\n  ({ pathwayState, isActionable, isGuidance, documentation }) => {\n    const { note, setNote } = useNote();\n    const [showReport, setShowReport] = useState<boolean>(false);\n    const { patientRecords, setPatientRecords } = usePatientRecords();\n    const client = useFHIRClient();\n    const setComments = (nc: string): void => {\n      setNote(prevNote => {\n        return { ...prevNote, notes: nc };\n      });\n    };\n    const patient = usePatient().patient as fhir.Patient;\n    if (note) note.node = pathwayState.label;\n\n    const onConfirm = (action?: Action[]): void => {\n      const newPatientRecords = [...patientRecords];\n\n      // Create DocumentReference and add to patient record(and post to FHIR server)\n      if (note) {\n        const noteString = createNoteContent(\n          note,\n          patientRecords,\n          note.status,\n          note?.notes ?? '',\n          pathwayState\n        );\n        const documentReference = createDocumentReference(noteString, pathwayState.label, patient);\n        newPatientRecords.push(documentReference);\n        client?.create?.(documentReference);\n      }\n\n      // Translate pathway recommended resource and add to patient record\n      if (note?.status === 'Accepted' && action && action.length > 0) {\n        const resource: Resource = translatePathwayRecommendation(\n          action[0].resource,\n          patient.id as string\n        );\n\n        newPatientRecords.push(resource);\n        client?.create?.(resource);\n      }\n\n      setPatientRecords(newPatientRecords);\n    };\n\n    return (\n      <>\n        <ExpandedNodeMemo\n          isGuidance={isGuidance}\n          isActionable={isActionable}\n          pathwayState={pathwayState}\n          documentation={documentation}\n          setComments={setComments}\n          comments={note?.notes ?? ''}\n          onAccept={(): void => {\n            setNote(prevNote => {\n              return { ...prevNote, status: 'Accepted' };\n            });\n            setShowReport(true);\n          }}\n          onDecline={(): void => {\n            setNote(prevNote => {\n              return { ...prevNote, status: 'Declined' };\n            });\n            setShowReport(true);\n          }}\n        />\n        {showReport && (\n          <ReportModal\n            onConfirm={(): void => onConfirm(pathwayState.action)}\n            onDecline={(): void => setShowReport(false)}\n          />\n        )}\n      </>\n    );\n  }\n);\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\ntype StatusFieldProps = {\n  documentation: DocumentationResource | undefined;\n};\n\nconst StatusField: FC<StatusFieldProps> = ({ documentation }) => {\n  if (!documentation?.resource) {\n    return null;\n  }\n  const status = documentation.status;\n  const rawDate = documentation.resource?.meta?.lastUpdated;\n  if (rawDate)\n    return (\n      <ExpandedNodeField\n        key=\"Status\"\n        title={status}\n        description={new Date(rawDate).toLocaleString('en-us')}\n      />\n    );\n  return null;\n};\n\nfunction renderBranch(\n  documentation: DocumentationResource | undefined,\n  pathwayState: State\n): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Observation': {\n        const observation = documentation.resource as Observation;\n\n        const valueCoding = observation.valueCodeableConcept?.coding;\n        if (valueCoding) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"ValueSystem\"\n              title=\"System\"\n              description={\n                <>\n                  {valueCoding[0].system}\n                  <a href={valueCoding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n                  </a>\n                </>\n              }\n            />,\n            <ExpandedNodeField key=\"ValueCode\" title=\"Code\" description={valueCoding[0].code} />,\n            <ExpandedNodeField\n              key=\"ValueDisplay\"\n              title=\"Display\"\n              description={valueCoding[0].display}\n            />\n          );\n        }\n\n        const date = observation.effectiveDateTime;\n        if (date) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Date\"\n              title=\"Date\"\n              description={new Date(date).toLocaleString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n      case 'DocumentReference': {\n        const documentReference = documentation.resource as DocumentReference;\n        const subject = documentReference.subject;\n        if (subject)\n          returnElements.push(\n            <ExpandedNodeField key=\"subject\" title=\"Subject\" description={subject.reference} />\n          );\n\n        // Display missing data value if it is available, otherwise display note content\n        const identifierArray: Identifier[] | undefined = documentReference.identifier;\n        const documentReferenceIdentifier = identifierArray?.find(\n          i => i.system === 'pathways.documentreference'\n        );\n\n        if (documentReferenceIdentifier) {\n          const value = atob(documentReferenceIdentifier.value as string);\n          returnElements.push(<ExpandedNodeField key=\"value\" title=\"Value\" description={value} />);\n        } else {\n          const note = documentReference.content[0].attachment.data;\n          if (note)\n            returnElements.push(\n              <ExpandedNodeField key=\"note\" title=\"Note\" description={atob(note)} />\n            );\n        }\n        break;\n      }\n      default: {\n        returnElements.push(\n          <ExpandedNodeField key=\"error\" title=\"Error\" description=\"Unsupported Resource Type\" />\n        );\n      }\n    }\n  } else {\n    const values: string[] = pathwayState.transitions\n      .map(transition => {\n        const description = transition.condition?.description;\n        return description ? description : '';\n      })\n      // Remove duplicate values\n      .filter((v, i, arr) => arr.indexOf(v) === i);\n\n    returnElements.push(\n      <ExpandedNodeField\n        key=\"value\"\n        title=\"Value\"\n        description={<MissingDataPopup values={values} />}\n      />\n    );\n  }\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(\n  pathwayState: GuidanceState,\n  documentation: DocumentationResource | undefined\n): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding && coding[0].system}\n          <a href={coding && coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />\n  ];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Procedure': {\n        const procedure = documentation.resource as Procedure;\n        const start =\n          (procedure.performedPeriod && procedure.performedPeriod.start) ||\n          procedure.performedDateTime;\n        const end = procedure.performedPeriod && procedure.performedPeriod.end;\n        if (start) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Start\"\n              title=\"Start\"\n              description={new Date(start).toLocaleString('en-us')}\n            />\n          );\n        }\n\n        if (end) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"End\"\n              title=\"End\"\n              description={new Date(end).toLocaleString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n    }\n  }\n  return returnElements;\n}\n\ninterface ExpandedNodeMemoProps {\n  documentation: DocumentationResource | undefined;\n  pathwayState: GuidanceState;\n  isGuidance: boolean;\n  isActionable: boolean;\n  comments: string;\n  setComments: (value: string) => void;\n  onAccept: () => void;\n  onDecline: () => void;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(\n  ({\n    documentation,\n    pathwayState,\n    isGuidance,\n    isActionable,\n    comments,\n    setComments,\n    onAccept,\n    onDecline\n  }) => {\n    const guidance = isGuidance && renderGuidance(pathwayState, documentation);\n    const branch = isBranchState(pathwayState) && renderBranch(documentation, pathwayState);\n    const defaultText =\n      'The patient and I discussed the treatment plan, risks, benefits and alternatives.  The patient expressed understanding and wants to proceed.';\n    return (\n      <div className={indexStyles.expandedNode}>\n        <table className={styles.infoTable}>\n          <tbody>\n            <StatusField documentation={documentation} />\n            {guidance || branch}\n          </tbody>\n        </table>\n        {isActionable && isGuidance && (\n          <form className={styles.commentsForm}>\n            <label>Comments:</label>\n            <button\n              className={`${indexStyles.button} ${styles.defaultTextButton}`}\n              onClick={(e): void => {\n                e.preventDefault();\n                if (!comments.includes(defaultText)) setComments(comments + defaultText);\n              }}\n            >\n              Use Default Text\n            </button>\n            <textarea\n              className={styles.comments}\n              value={comments}\n              onChange={(e): void => setComments(e.target.value)}\n            ></textarea>\n            <div className={styles.footer}>\n              <ActionButton type=\"accept\" size=\"large\" onClick={onAccept} />\n            </div>\n            <div className={styles.footer}>\n              <ActionButton type=\"decline\" size=\"large\" onClick={onDecline} />\n            </div>\n          </form>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { GuidanceState, State, DocumentationResource } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport nodeStyles from 'styles/index.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'not-on-patient-path': {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    },\n    'child-not-on-patient-path': {\n      borderColor: theme.palette.background.default\n    }\n  }),\n  { name: 'Node' }\n);\n\ninterface NodeProps {\n  pathwayState: State;\n  documentation: DocumentationResource | undefined;\n  isOnPatientPath: boolean;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClickHandler?: () => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      {\n        pathwayState,\n        documentation,\n        isOnPatientPath,\n        isCurrentNode,\n        xCoordinate,\n        yCoordinate,\n        expanded = false,\n        onClickHandler\n      },\n      ref\n    ) => {\n      const { label } = pathwayState;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const classes = useStyles();\n      const backgroundColorClass = isOnPatientPath\n        ? styles.onPatientPath\n        : clsx(styles.notOnPatientPath, classes['not-on-patient-path']);\n      const isActionable = isCurrentNode && !documentation;\n      const topLevelClasses = [styles.node, backgroundColorClass];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push(nodeStyles.expanded);\n      if (isActionable) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = isOnPatientPath\n          ? styles.childOnPatientPath\n          : clsx(styles.childNotOnPatientPath, classes['child-not-on-patient-path']);\n      }\n      const isGuidance = isGuidanceState(pathwayState);\n      // TODO: how do we determine whether a node has been accepted or declined?\n      // for now:\n      // if it's a non-actionable guidance state on the path: accepted == has documentation\n      // if it's actionable, not guidance or not on the path: null\n      const wasActionTaken = isOnPatientPath && isGuidance && !isActionable;\n      const isAccepted = wasActionTaken\n        ? documentation?.resourceType !== 'DocumentReference'\n        : null;\n      let status = null;\n      if ('action' in pathwayState) {\n        status = isAccepted;\n      } else if (!isCurrentNode && documentation) {\n        status = true;\n      }\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div\n            className={`${nodeStyles.nodeTitle} ${onClickHandler && nodeStyles.clickable}`}\n            onClick={onClickHandler}\n          >\n            <div className={nodeStyles.iconAndLabel}>\n              <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n              {label}\n            </div>\n            <StatusIcon status={status} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                pathwayState={pathwayState as GuidanceState}\n                isActionable={isActionable}\n                isGuidance={isGuidance}\n                documentation={documentation}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'MedicationAdministration') icon = faCapsules;\n      else if (resourceType === 'Procedure') icon = faSyringe;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className={nodeStyles.statusIcon}>\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  isOnPatientPath: boolean;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, isOnPatientPath, widthOffset }) => {\n  const className = isOnPatientPath ? styles.arrowOnPatientPath : styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import { Pathway, State } from 'pathways-model';\n\nexport interface CqlObject {\n  main: string;\n  libraries: Library;\n}\n\nexport interface Library {\n  [name: string]: string; // should probably have an object for expected ELM structure.\n}\nexport function getFixture(filename: string): Promise<string> {\n  return fetch(`./static/cql/${filename}`).then(cql => cql.text());\n}\n\n/**\n * Function to format each block from the pathway in CQL format\n * @param cqlBlock - block of CQL code from the pathway\n * @param resourceName - Name of the CQL resource block to be defined\n * @return the CQL code formatted pretty with the define line\n */\nfunction cqlFormat(cqlBlock: string, resourceName: string): string {\n  let formattedBlock = '';\n\n  // Definition of CQL block\n  const line1 = 'define \"' + resourceName + '\":\\n\\t';\n\n  // Build the formatted block\n  formattedBlock = line1.concat(cqlBlock);\n  return formattedBlock;\n}\n\n/**\n * Helper function to add the cql block to the completed cql\n * with the correct formatting\n * @param cql - complete cql string\n * @param cqlBlock - current cql block to append to the cql\n * @return the cql with the cql block appended correctly\n */\nfunction cqlAdd(cql: string, cqlBlock: string): string {\n  return cql.concat('\\n', '\\n', cqlBlock);\n}\n\n/**\n * Helper function to determine if a state has a conditional transition\n * @param state - the JSON object of the desired state on the pathway\n * @return true if state is a conditional transition and false\n *                   otherwise\n */\nfunction isConditional(state: State): boolean {\n  if ('transitions' in state) {\n    return state.transitions.length > 1 ? true : false;\n  } else return false;\n}\n\n/**\n * Function to extract the CQL code from each state in the pathway and build\n * the CQL code to execute\n * @param pathway - the JSON object of the entire pathway\n * @return a string of the CQL code for the navigational nodes in the pathway\n */\nexport function extractNavigationCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const stateName in pathway.states) {\n      const state = pathway.states[stateName];\n      if ('cql' in state) {\n        const cqlBlock1 = state.cql;\n        const nextBlock1 = cqlFormat(cqlBlock1, stateName);\n        cql = cqlAdd(cql, nextBlock1);\n      } else if (isConditional(state)) {\n        for (const transition of state.transitions) {\n          const condition = transition.condition;\n          if (condition) {\n            const nextBlock2 = cqlFormat(condition.cql, condition.description);\n            cql = cqlAdd(cql, nextBlock2);\n          }\n        }\n      }\n    }\n\n    return cql;\n  });\n}\n\n/**\n * Extract the CQL statements from the `criteria` section of the pathway\n * into a snippet ready to be converted to ELM.\n * @param pathway - the entire pathway object\n * @return a string of the CQL for the criteria in the pathway\n */\nexport function extractCriteriaCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const criteria of pathway.criteria) {\n      const cqlBlock1 = criteria.cql;\n      const nextBlock1 = cqlFormat(cqlBlock1, criteria.elementName);\n      cql = cqlAdd(cql, nextBlock1);\n    }\n\n    return cql;\n  });\n}\n","// sample header= \"multipart/form-data;boundary=Boundary_1\"\n// get the part after \"boundary=\" and before any subsequent ;\nexport const extractMultipartBoundary = /.*;boundary=(Boundary.*);?.*/g;\n\nexport const extractMultipartFileName = /Content-Disposition: form-data; name=\"([^\"]+)\"/;\n\n// eveything between { } including newlines. [^] is like . but matches newline\nexport const extractJSONContent = /(\\{[^]*\\})/;\n\nexport const extractCQLInclude = /include .* called (.*)/g;\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","/* eslint-disable max-len */\nimport { ElmResults } from 'pathways-model';\nimport { Library, Executor, Repository } from 'cql-execution';\nimport { PatientSource } from 'cql-exec-fhir';\nimport { Bundle } from 'fhir-objects';\n/**\n * Engine function that takes in a patient file (JSON) and an ELM file, running the patient against the ELM file\n * @param patientRecord - FHIR bundle containing patient's record\n * @param elm - ELM structure (previosuly converted from CQL) on which the patient will be run.\n * @return returns a JSON object which is the result of analyzing the patient against the elm file\n */\nexport default function executeElm(\n  patientRecord: Bundle,\n  elm: object,\n  libraries?: object\n): ElmResults {\n  let lib;\n  if (libraries) {\n    lib = new Library(elm, new Repository(libraries));\n  } else {\n    lib = new Library(elm);\n  }\n\n  const executor = new Executor(lib);\n  const psource = new PatientSource.FHIRv400(patientRecord);\n  psource.loadBundles(patientRecord);\n  const result = executor.exec(psource);\n  return result;\n}\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport {\n  Pathway,\n  PathwayResults,\n  PatientData,\n  CriteriaResult,\n  DocumentationResource,\n  State,\n  GuidanceState,\n  CriteriaResultItem,\n  Documentation\n} from 'pathways-model';\nimport { DocumentReference, DomainResource } from 'fhir-objects';\n\ninterface StateData {\n  documentation: Documentation;\n  nextStates: string[];\n  status: string;\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the patient's pathway\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns PathwayResults describing\n */\nexport function pathwayData(\n  pathway: Pathway,\n  patientData: PatientData,\n  resources: DomainResource[]\n): PathwayResults {\n  const startState = 'Start';\n  const patientDocumentation: { [key: string]: Documentation } = {};\n\n  let currentStates = [startState];\n  let stateData = nextState(pathway, patientData, startState, resources);\n  while (stateData !== null) {\n    if (stateData.documentation === null) break;\n    const documentation = stateData.documentation;\n    documentation.onPath = true;\n    (documentation as DocumentationResource).resource = retrieveResource(\n      stateData.documentation,\n      resources\n    );\n    patientDocumentation[stateData.documentation.state] = { ...documentation };\n    if (stateData.nextStates.length === 0) break;\n    else if (stateData.nextStates.length === 1) {\n      currentStates = stateData.nextStates;\n      stateData = nextState(pathway, patientData, stateData.nextStates[0], resources);\n    } else {\n      // There are multiple transitions\n      // Check if any of them have been done\n      currentStates = [];\n      const completedStates: string[] = [];\n      for (const stateName of stateData.nextStates) {\n        const documentReference = retrieveNote(pathway.states[stateName].label, resources);\n        if (!documentReference && (!patientData[stateName] || !patientData[stateName].length)) {\n          currentStates.push(stateName);\n        } else {\n          completedStates.push(stateName);\n        }\n      }\n\n      if (completedStates.length !== 0) {\n        currentStates = completedStates;\n      } else if (currentStates.length === 0) {\n        currentStates = stateData.nextStates;\n        break;\n      }\n\n      // TODO: there is a possibility multiple states match\n      const currentStateName = completedStates.length ? completedStates[0] : currentStates[0];\n      stateData = nextState(pathway, patientData, currentStateName, resources);\n    }\n  }\n  return {\n    patientId: patientData.Patient.id.value,\n    currentStates: currentStates,\n    documentation: getAllDocumentation(pathway, patientData, resources, patientDocumentation)\n  };\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the pathway criteria\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns CriteriaResult containing the expected and actual value for one data element\n */\nexport function criteriaData(pathway: Pathway, patientData: PatientData): CriteriaResult {\n  const resultItems: CriteriaResultItem[] = [];\n\n  let matches = 0;\n  pathway.criteria.forEach(criteria => {\n    let evaluationResult = patientData[criteria.elementName];\n    if (Array.isArray(evaluationResult)) {\n      evaluationResult = evaluationResult[0]; // TODO: add functionality for multiple resources\n    }\n    let actual = 'unknown';\n    let match = false;\n\n    if (evaluationResult) {\n      actual = evaluationResult['value'];\n      match = evaluationResult['match'];\n    }\n\n    if (match) matches += 1;\n\n    const criteriaResultItem = {\n      elementName: criteria.elementName,\n      expected: criteria.expected,\n      actual,\n      match\n    };\n\n    resultItems.push(criteriaResultItem);\n  });\n\n  return {\n    pathwayName: pathway.name,\n    matches: matches,\n    criteriaResultItems: resultItems\n  };\n}\n\n/**\n * Helper function to obtain documentation for any states not on the path\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient\n * @param resources - the patient resources\n * @param patientDocumentation - the documentation dictionary from states on the patient path\n */\nfunction getAllDocumentation(\n  pathway: Pathway,\n  patientData: PatientData,\n  resources: DomainResource[],\n  patientDocumentation: { [key: string]: Documentation }\n): { [key: string]: Documentation } {\n  const statesWithDocumentation = Object.values(patientDocumentation)\n    .filter(doc => doc.onPath)\n    .map(doc => doc.state);\n  for (const [stateName, state] of Object.entries(pathway.states)) {\n    if (!statesWithDocumentation.includes(stateName)) {\n      if ('action' in state) {\n        // If action check for resource\n        if (patientData[stateName] && patientData[stateName].length) {\n          const documentation = patientData[stateName][0];\n          documentation.state = stateName;\n          documentation.onPath = false;\n          (documentation as DocumentationResource).resource = retrieveResource(\n            documentation,\n            resources\n          );\n          patientDocumentation[stateName] = { ...documentation };\n        }\n      } else {\n        // Tranisition element must check each transition in patient data for existence\n        for (const transition of (state as State).transitions) {\n          if (!transition.condition) continue;\n\n          if (\n            patientData[transition.condition.description] &&\n            patientData[transition.condition.description].length\n          ) {\n            const documentation = patientData[transition.condition.description][0];\n            documentation.state = stateName;\n            documentation.onPath = false;\n            (documentation as DocumentationResource).resource = retrieveResource(\n              documentation,\n              resources\n            );\n            patientDocumentation[stateName] = { ...documentation };\n          } else {\n            // Check for document reference note\n            const documentReference = retrieveNote(transition.condition.description, resources);\n            if (documentReference) {\n              const documentation = {\n                resourceType: 'DocumentReference',\n                status: documentReference.status,\n                id: documentReference.id,\n                state: stateName,\n                onPath: false,\n                resource: documentReference\n              };\n              patientDocumentation[stateName] = { ...documentation };\n            }\n          }\n        }\n      }\n    }\n  }\n  return patientDocumentation;\n}\n\n/**\n * Helper function to format the documentation and include the related state\n * @param resource - the resource returned by the CQL execution\n * @param state - the current state name\n * @return the JSON resource with the state property set\n */\nfunction formatDocumentation(\n  resource: DocumentationResource,\n  state: string\n): DocumentationResource {\n  resource.state = state;\n  return resource;\n}\n\n/**\n * Helper function to determine whether the action represented by\n * the given resource has been \"completed\", and the pathway execution should advance.\n * @param resource - the FHIR resource for a given action\n * @return boolean as to whether this resource is complete\n */\nfunction isComplete(resource: DocumentationResource): boolean {\n  // placeholder for more complex logic if needed.\n  // as of today MedicationRequest and ServiceRequest should both be \"completed\"\n  // (MedicationRequest can also be \"stopped\" though that indicates\n  // \"Actions implied by the prescription are to be permanently halted, **before all of them occurred.**\")\n  return resource.status === 'completed';\n}\n\n/**\n * Helper function to select the transition state\n * @param resource - the resource returned by the CQL execution\n * @param currentState - the current state\n * @return the next state name or null\n */\nfunction formatNextState(resource: DocumentationResource, currentState: State): string[] {\n  return isComplete(resource) && currentState.transitions.length !== 0\n    ? [currentState.transitions[0].transition]\n    : [];\n}\n\n/**\n * Determine the nextState in a conditional transition state\n * @param patientData - JSON object representing the data on a patient\n * @param currentState - the current state\n * @param currentStateName - the name of the current state\n * @return the next state\n */\nfunction getConditionalNextState(\n  patientData: PatientData,\n  currentState: State,\n  currentStateName: string,\n  resources: DomainResource[]\n): StateData | null {\n  const documentation: DocumentationResource[] = [];\n  const nextStates: string[] = [];\n  for (const transition of currentState.transitions) {\n    if (transition.condition) {\n      let currentTransitionDocumentation: DocumentationResource | null = null;\n      if (patientData[transition.condition.description]?.length)\n        // TODO: add functionality for multiple resources\n        currentTransitionDocumentation = patientData[transition.condition.description][0];\n      else {\n        const documentReference = retrieveNote(transition.condition.description, resources);\n        if (documentReference) {\n          currentTransitionDocumentation = {\n            resourceType: 'DocumentReference',\n            id: documentReference.id ? documentReference.id : 'unknown',\n            status: documentReference.status,\n            state: currentStateName,\n            resource: documentReference,\n            onPath: true\n          };\n        }\n      }\n\n      if (currentTransitionDocumentation) {\n        nextStates.push(transition.transition);\n        documentation.push(currentTransitionDocumentation);\n      }\n    }\n  }\n\n  if (nextStates.length && documentation.length)\n    return {\n      nextStates: nextStates,\n      documentation: formatDocumentation(documentation[0], currentStateName),\n      status: documentation[0].status\n    };\n  else return null;\n}\n\n/**\n * Helper function to traverse the pathway and determine the next state in a patients pathway.\n * For actions this function will also verify the move is valid by the resource status\n * @param pathway - JSON object representing the complete pathway\n * @param patientData - JSON object representing the data on a patient\n * @param currentStateName - the name of the current state in the traversal\n * @return returns object with the next state, the status, and the evidenvce\n */\nfunction nextState(\n  pathway: Pathway,\n  patientData: PatientData,\n  currentStateName: string,\n  resources: DomainResource[]\n): StateData | null {\n  const currentState: State | GuidanceState = pathway.states[currentStateName];\n  if ('action' in currentState) {\n    let resource = patientData[currentStateName];\n    if (resource?.length) {\n      resource = resource[0]; // TODO: add functionality for multiple resources\n      return {\n        nextStates: formatNextState(resource, currentState),\n        documentation: formatDocumentation(resource, currentStateName),\n        status: 'status' in resource ? resource.status : 'unknown'\n      };\n    } else {\n      // Check for note posted on decline\n      const documentReference = retrieveNote(currentState.label, resources);\n      if (documentReference) {\n        const doc = {\n          resourceType: 'DocumentReference',\n          id: documentReference.id ? documentReference.id : 'unknown',\n          status: 'status' in documentReference ? documentReference.status : 'unknown',\n          state: currentStateName,\n          resource: documentReference,\n          onPath: true\n        };\n        return {\n          nextStates: formatNextState(doc, currentState),\n          documentation: formatDocumentation(doc, currentStateName),\n          status: doc.status\n        };\n      }\n      // Action exists but has no matching resource in patientData\n      return null;\n    }\n  } else if (currentState.transitions.length === 1) {\n    return {\n      nextStates: [currentState.transitions[0].transition],\n      documentation: { state: currentStateName, onPath: true },\n      status: 'completed'\n    };\n  } else if (currentState.transitions.length > 1) {\n    return getConditionalNextState(patientData, currentState, currentStateName, resources);\n  } else return null;\n}\n\n/**\n * Helper function to retrieve DocumentReference note if one exists.\n * @param condition - the transition condition description for the note\n * @param resources - list of patient resources\n * @return DocumentReference for the transition condition or null if none found\n */\nfunction retrieveNote(condition: string, resources: DomainResource[]): DocumentReference | null {\n  const documentReference = resources.find(resource => {\n    if (resource.resourceType !== 'DocumentReference') return false;\n    const documentReference = resource as DocumentReference;\n    if (documentReference.identifier === undefined) return false;\n    for (const identifier of documentReference.identifier) {\n      if (\n        identifier.system === 'pathways.documentreference' &&\n        identifier.value === btoa(condition)\n      )\n        return true;\n    }\n    return false;\n  });\n\n  if (!documentReference) return null;\n\n  return documentReference as DocumentReference;\n}\n\n/**\n * Helper function to retrieve a resource for documentation if one exists.\n * @param doc - the docuumentation to find a resource for\n * @param resources - the list of patient resources\n * @return DomainResource for the documentation or undefined if none found\n */\nfunction retrieveResource(\n  doc: Documentation,\n  resources: DomainResource[]\n): DomainResource | undefined {\n  let resource: DomainResource | undefined = undefined;\n  if ('resourceType' in doc && resources) {\n    resource = resources.find(resource => {\n      return (\n        resource.resourceType === (doc as DocumentationResource).resourceType &&\n        resource.id === (doc as DocumentationResource).id\n      );\n    });\n  }\n\n  return resource;\n}\n","import { extractNavigationCQL, extractCriteriaCQL, CqlObject, Library } from './cql-extractor';\nimport convertCQL, { convertBasicCQL, ElmObject } from './cql-to-elm';\nimport executeElm from './elm-executor';\nimport { pathwayData, criteriaData } from './output-results';\nimport { Pathway, PatientData, PathwayResults, ElmResults, CriteriaResult } from 'pathways-model';\nimport { getFixture } from './cql-extractor';\nimport { extractCQLInclude } from 'utils/regexes';\nimport { DomainResource, Bundle } from 'fhir-objects';\nfunction instanceOfElmObject(object: object): object is ElmObject {\n  return 'main' in object;\n}\n\n/**\n * Function to run each of the engine files in series to execute\n * the automated pathway\n * @param patientRecord - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return Information on the patient's current status within the\n *                  clinical pathway\n */\nexport function evaluatePatientOnPathway(\n  patientRecord: Bundle,\n  pathway: Pathway,\n  resources: DomainResource[]\n): Promise<PathwayResults> {\n  const patientDataPromise = pathway.elm?.navigational\n    ? processELMCommon(patientRecord, pathway.elm.navigational)\n    : extractNavigationCQL(pathway).then(cql => processCQLCommon(patientRecord, cql));\n\n  return patientDataPromise.then(patientData => pathwayData(pathway, patientData, resources));\n}\n\n/**\n * Evaluate the pathway criteria against the given patient.\n * @param patientRecord - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return a list of CriteriaResults, each containing\n *         the expected value and actual value for one criteria item\n */\nexport function evaluatePathwayCriteria(\n  patientRecord: Bundle,\n  pathway: Pathway\n): Promise<CriteriaResult> {\n  const patientDataPromise = pathway.elm?.criteria\n    ? processELMCommon(patientRecord, pathway.elm.criteria)\n    : extractCriteriaCQL(pathway).then(cql => processCQLCommon(patientRecord, cql));\n\n  return patientDataPromise.then(patientData => criteriaData(pathway, patientData));\n}\n\n/**\n * Common logic to execute the given CQL against the given Patient.\n * @param patientRecord - Patient's record as FHIR data\n * @param cql - aggregated CQL from a pathway\n * @return the raw, unprocessed patientResults\n *         derived from executing the CQL against the given patient\n */\nfunction processCQLCommon(patientRecord: Bundle, cql: string): Promise<PatientData> {\n  // Likely need an intermediary step that gathers the CQL files needed\n  // example function gatherCQL\n  return gatherCQL(cql)\n    .then(result => {\n      if (Object.keys(result).length > 0) {\n        // non-empty library\n        const cqlObject: CqlObject = {\n          main: cql,\n          libraries: result\n        };\n        return convertCQL(cqlObject);\n      } else {\n        return convertBasicCQL(cql);\n      }\n    })\n    .then(elm => processELMCommon(patientRecord, elm));\n}\n\n/**\n * Common logic to execute the given ELM against the given Patient.\n * @param patientRecord - Patient's record as FHIR data\n * @param elm - resulting ELM from converting the CQL in a pathway\n * @return the raw, unprocessed patientResults\n *         derived from executing the ELM against the given patient\n */\nfunction processELMCommon(patientRecord: Bundle, elm: object): Promise<PatientData> {\n  // this is not inherently async,\n  // but we wrap it in a promise to make the code cleaner elsewhere\n  return new Promise((resolve, reject) => {\n    let elmResults: ElmResults = {\n      patientResults: {}\n    };\n    if (instanceOfElmObject(elm)) {\n      elmResults = executeElm(patientRecord, elm.main, elm.libraries);\n    } else {\n      elmResults = executeElm(patientRecord, elm);\n    }\n\n    // TODO - update pathwaysData to take multiple patients\n    const patientIds = Object.keys(elmResults.patientResults);\n    const patientData = elmResults.patientResults[patientIds[0]];\n    resolve(patientData);\n  });\n}\n\n// example function that would gather library CQL files\nfunction gatherCQL(cql: string): Promise<Library> {\n  const lib = extractCQLInclude.exec(cql);\n  if (lib) {\n    return getFixture(`${lib[1]}.cql`).then(result => {\n      return new Promise(function(resolve, reject): void {\n        setTimeout(function() {\n          resolve({ FHIRHelpers: result });\n        }, 300);\n      });\n    });\n  } else {\n    return new Promise(function(resolve, reject): void {\n      resolve({});\n    });\n  }\n}\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { evaluatePatientOnPathway } from 'engine';\nimport {\n  EvaluatedPathway,\n  PathwayResults,\n  DocumentationResource,\n  Pathway,\n  Documentation\n} from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges, Edge } from 'graph-model';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { DomainResource } from 'fhir-objects';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\nimport { NoteDataProvider } from 'components/NoteDataProvider';\n\ninterface GraphProps {\n  evaluatedPathway: EvaluatedPathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n  updateEvaluatedPathways: (value: EvaluatedPathway) => void;\n}\n\nconst getPath = (pathwayResults: PathwayResults): string[] => {\n  return Object.values(pathwayResults.documentation)\n    .filter(doc => doc.onPath)\n    .map(doc => doc.state);\n};\n\nconst isEdgeOnPatientPath = (pathwayResults: PathwayResults, edge: Edge): boolean => {\n  const path = getPath(pathwayResults);\n  const startIndex = path.indexOf(edge.start);\n  const endIndex = path.indexOf(edge.end);\n  if (startIndex !== -1 && endIndex !== -1 && startIndex + 1 === endIndex) return true;\n  else if (startIndex === path.length - 1 && pathwayResults.currentStates.includes(edge.end))\n    return true;\n  else return false;\n};\n\nconst Graph: FC<GraphProps> = memo(\n  ({ evaluatedPathway, interactive = true, expandCurrentNode = true, updateEvaluatedPathways }) => {\n    const patientRecords = usePatientRecords();\n    const resources = patientRecords.patientRecords;\n    const pathway = evaluatedPathway.pathway;\n    const graphElement = useRef<HTMLDivElement>(null);\n    const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n    const [parentWidth, setParentWidth] = useState<number>(\n      graphElement?.current?.parentElement?.clientWidth ?? 0\n    );\n\n    const setPath = useCallback(\n      (value: PathwayResults): void => {\n        patientRecords.setEvaluatePath(false);\n        updateEvaluatedPathways({ pathway: evaluatedPathway.pathway, pathwayResults: value });\n      },\n      [evaluatedPathway.pathway, updateEvaluatedPathways, patientRecords]\n    );\n\n    // Get the layout of the graph\n    const getGraphLayout = useCallback((): Layout => {\n      const nodeDimensions: NodeDimensions = {};\n\n      // Retrieve dimensions from nodeRefs\n      if (nodeRefs?.current) {\n        Object.keys(nodeRefs.current).forEach(key => {\n          const nodeElement = nodeRefs.current[key];\n          const width = nodeElement.clientWidth;\n          // nodeElement can have multiple children so calculate the sum to get the node height\n          const height = Array.from(nodeElement.children).reduce(\n            (acc, child) => acc + child.clientHeight,\n            0\n          );\n\n          nodeDimensions[key] = { width, height };\n        });\n      }\n\n      return graphLayout(pathway, nodeDimensions);\n    }, [pathway]);\n\n    const [layout, setLayout] = useState(getGraphLayout());\n    const { nodeCoordinates, edges } = layout;\n    const maxHeight = useMemo(() => {\n      return nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.y)\n            .reduce((a, b) => Math.max(a, b))\n        : 0;\n    }, [nodeCoordinates]);\n\n    // If a node has a negative x value, shift nodes and edges to the right by that value\n    const minX =\n      nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.x + parentWidth / 2)\n            .reduce((a, b) => Math.min(a, b))\n        : 0;\n\n    if (minX < 0) {\n      const toAdd = minX * -1;\n      Object.keys(nodeCoordinates).forEach(key => {\n        const node = nodeCoordinates[key];\n        node.x += toAdd;\n      });\n\n      Object.keys(edges).forEach(key => {\n        const edge = edges[key];\n\n        edge.points.forEach(p => (p.x += toAdd));\n        if (edge.label) edge.label.x += toAdd;\n      });\n    }\n    const layoutKeys = Object.keys(layout).toString();\n    const initialExpandedState = useMemo(() => {\n      return layoutKeys.split(',').reduce((acc: { [key: string]: boolean }, curr: string) => {\n        acc[curr] = false;\n        return acc;\n      }, {});\n    }, [layoutKeys]);\n\n    const [expanded, _setExpanded] = useState<{ [key: string]: boolean | undefined }>(\n      initialExpandedState\n    );\n\n    const setExpanded = useCallback((key: string, expand?: boolean): void => {\n      _setExpanded(prevState => {\n        return { ...prevState, [key]: !prevState[key] };\n      });\n    }, []);\n\n    // Evaluate patient on the pathway\n    useEffect(() => {\n      // Keeps track of whether the current useEffect cycle has ended\n      let cancel = false;\n\n      if (\n        resources.length > 0 &&\n        (!evaluatedPathway.pathwayResults || patientRecords.evaluatePath)\n      ) {\n        // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n        const patient = {\n          resourceType: 'Bundle',\n          type: 'searchset',\n          entry: resources.map((r: DomainResource) => ({ resource: r }))\n        };\n        evaluatePatientOnPathway(patient, pathway, resources).then(pathwayResults => {\n          if (!cancel) setPath(pathwayResults);\n        });\n\n        return (): void => {\n          cancel = true;\n        };\n      }\n    }, [pathway, resources, evaluatedPathway.pathwayResults, setPath, patientRecords]);\n\n    // Expand all the current nodes by default if allowed\n    useEffect(() => {\n      if (evaluatedPathway.pathwayResults) {\n        for (const currentNode of evaluatedPathway.pathwayResults.currentStates) {\n          if (expandCurrentNode) {\n            if (currentNode) setExpanded(currentNode, true);\n          }\n        }\n      }\n    }, [expandCurrentNode, evaluatedPathway.pathwayResults, setExpanded]);\n\n    // Recalculate graph layout if graph container size changes\n    useEffect(() => {\n      if (graphElement.current?.parentElement) {\n        new ResizeSensor(graphElement.current.parentElement, function() {\n          setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n          setLayout(getGraphLayout());\n        });\n      }\n    }, [getGraphLayout]);\n\n    // Recalculate graph layout if a node is expanded\n    useEffect(() => {\n      setLayout(getGraphLayout());\n    }, [expanded, getGraphLayout]);\n\n    // maxWidth finds the edge label that is farthest to the right\n    const maxWidth: number =\n      edges !== undefined\n        ? Object.values(edges)\n            .map(e => e.label)\n            .map(l => (l ? l.x + l.text.length * 10 + parentWidth / 2 : 0))\n            .reduce((a, b) => Math.max(a, b), 0)\n        : parentWidth;\n\n    const documentation = evaluatedPathway.pathwayResults\n      ? evaluatedPathway.pathwayResults.documentation\n      : {};\n\n    return (\n      <GraphMemo\n        graphElement={graphElement}\n        interactive={interactive}\n        maxHeight={maxHeight}\n        nodeCoordinates={nodeCoordinates}\n        documentation={documentation}\n        edges={edges}\n        evaluatedPathway={evaluatedPathway}\n        nodeRefs={nodeRefs}\n        parentWidth={parentWidth}\n        maxWidth={maxWidth}\n        pathway={pathway}\n        expanded={expanded}\n        setExpanded={setExpanded}\n      />\n    );\n  }\n);\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  documentation: { [key: string]: Documentation };\n  edges: Edges;\n  evaluatedPathway: EvaluatedPathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  pathway: Pathway;\n  expanded: {\n    [key: string]: boolean | undefined;\n  };\n  setExpanded: (key: string, expand?: boolean | undefined) => void;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    documentation,\n    edges,\n    evaluatedPathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    pathway,\n    expanded,\n    setExpanded\n  }) => {\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeName => {\n              const docResource = documentation[nodeName] as DocumentationResource;\n              const onClickHandler = useCallback(() => {\n                return interactive ? setExpanded(nodeName) : undefined;\n              }, [nodeName]);\n              return (\n                <NoteDataProvider date={new Date(Date.now())} key={nodeName}>\n                  <Node\n                    key={nodeName}\n                    documentation={docResource}\n                    ref={(node: HTMLDivElement): void => {\n                      nodeRefs.current[nodeName] = node;\n                    }}\n                    pathwayState={pathway.states[nodeName]}\n                    isOnPatientPath={\n                      evaluatedPathway.pathwayResults\n                        ? getPath(evaluatedPathway.pathwayResults).includes(nodeName) ||\n                          evaluatedPathway.pathwayResults.currentStates.includes(nodeName)\n                        : false\n                    }\n                    isCurrentNode={\n                      evaluatedPathway.pathwayResults\n                        ? evaluatedPathway.pathwayResults.currentStates.includes(nodeName)\n                        : false\n                    }\n                    xCoordinate={nodeCoordinates[nodeName].x + parentWidth / 2}\n                    yCoordinate={nodeCoordinates[nodeName].y}\n                    expanded={expanded[nodeName]}\n                    onClickHandler={onClickHandler}\n                  />\n                </NoteDataProvider>\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            // Adding 5 pixels to maxWidth so that the rightmost edge label is not cut off\n            width: maxWidth + 5,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    isOnPatientPath={\n                      evaluatedPathway.pathwayResults\n                        ? isEdgeOnPatientPath(evaluatedPathway.pathwayResults, edge)\n                        : false\n                    }\n                    widthOffset={parentWidth / 2}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import React, { FC, ReactNode, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Service } from 'pathways-objects';\nimport { Pathway, EvaluatedPathway, CriteriaResult } from 'pathways-model';\n\nimport styles from './PathwaysList.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Graph from 'components/Graph';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { evaluatePathwayCriteria } from 'engine';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { Resource } from 'fhir-objects';\nimport {\n  faPlay,\n  faPlus,\n  faMinus,\n  faChevronUp,\n  faChevronDown,\n  faCaretDown\n} from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'pathway-element': {\n      backgroundColor: theme.palette.background.default\n    },\n    title: {\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n\ninterface PathwaysListElementProps {\n  evaluatedPathway: EvaluatedPathway;\n  criteria?: CriteriaResult;\n  callback: Function;\n}\n\ninterface PathwaysListProps {\n  evaluatedPathways: EvaluatedPathway[];\n  callback: Function;\n  service: Service<Array<Pathway>>;\n}\n\nconst PathwaysList: FC<PathwaysListProps> = ({ evaluatedPathways, callback, service }) => {\n  const resources = usePatientRecords().patientRecords;\n  const [criteria, setCriteria] = useState<CriteriaResult[] | null>(null);\n\n  if (!criteria && evaluatedPathways.length > 0 && resources && resources.length > 0) {\n    // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n    const patient = {\n      resourceType: 'Bundle',\n      type: 'searchset',\n      entry: resources.map((r: fhir.Resource) => ({ resource: r }))\n    };\n\n    // Evaluate pathway criteria for each pathway\n    const criteriaPromises = evaluatedPathways.map(pathway =>\n      evaluatePathwayCriteria(patient, pathway.pathway)\n    );\n    Promise.all(criteriaPromises).then(criteriaResults => {\n      setCriteria(criteriaResults.sort((a, b) => b.matches - a.matches));\n    });\n  }\n\n  function renderList(): ReactNode {\n    return (\n      <div>\n        {criteria ? (\n          criteria.map(c => {\n            const evaluatedPathway = evaluatedPathways.find(p => p.pathway.name === c.pathwayName);\n            if (evaluatedPathway)\n              return (\n                <PathwaysListElement\n                  evaluatedPathway={evaluatedPathway}\n                  callback={callback}\n                  criteria={c}\n                  key={evaluatedPathway.pathway.name}\n                />\n              );\n            else\n              return <div>An error occured evaluating the pathway criteria. Please try again.</div>;\n          })\n        ) : (\n          <div>Loading Pathways...</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.pathways_list}>\n      {service.status === 'loading' ? (\n        <div>Loading...</div>\n      ) : service.status === 'loaded' ? (\n        <div className={styles.container}>\n          <div className={styles.pathwayListHeaderContainer}>\n            <div className={styles.header_title}>\n              <div className={styles.header_title__header}>Explore Pathways</div>\n              <div className={styles.header_title__note}>Select pathway below to view details</div>\n            </div>\n            <div className={styles.matchedElementsLabel}>\n              <i>\n                mCODE\n                <br />\n                elements\n                <br />\n                matched\n              </i>\n              <FontAwesomeIcon icon={faCaretDown} />\n            </div>\n          </div>\n\n          {criteria?.length !== 0 && renderList()}\n        </div>\n      ) : (\n        <div>ERROR</div>\n      )}\n    </div>\n  );\n};\n\nconst PathwaysListElement: FC<PathwaysListElementProps> = ({\n  evaluatedPathway,\n  criteria,\n  callback\n}) => {\n  const classes = useStyles();\n  const pathway = evaluatedPathway.pathway;\n  const pathwayCtx = usePathwayContext();\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const chevron: IconProp = isVisible ? faChevronUp : faChevronDown;\n\n  function toggleVisible(): void {\n    setIsVisible(!isVisible);\n  }\n\n  return (\n    <div\n      className={clsx(styles.pathwayElement, classes['pathway-element'])}\n      role={'list'}\n      key={pathway.name}\n    >\n      <div\n        className={clsx(styles.title, classes.title)}\n        role={'listitem'}\n        onClick={(e): void => {\n          pathwayCtx.setEvaluatedPathway(evaluatedPathway, true);\n          toggleVisible();\n        }}\n      >\n        <div>{pathway.name}</div>\n        <div className={styles.expand}>\n          <FontAwesomeIcon icon={chevron} />\n        </div>\n        <div className={styles.numElements}>{criteria?.matches}</div>\n      </div>\n\n      {isVisible && (\n        <div className={styles.infoContainer}>\n          <div className={styles.details}>\n            <p>{pathway.description}</p>\n            <table>\n              <tbody>\n                <tr>\n                  <th></th>\n                  <th>mCODE elements</th>\n                  <th>patient elements</th>\n                </tr>\n                {criteria?.criteriaResultItems.map(c => (\n                  <tr key={c.elementName}>\n                    <td>{c.elementName}</td>\n                    <td>{c.expected}</td>\n                    <td className={c.match ? styles.matchingElement : undefined}>{c.actual}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button className={indexStyles.button} onClick={(): void => callback(evaluatedPathway)}>\n              Select Pathway\n            </button>\n          </div>\n          <div className={styles.pathway}>\n            <div style={{ height: '100%', overflow: 'scroll' }}>\n              <Graph\n                evaluatedPathway={evaluatedPathway}\n                interactive={false}\n                expandCurrentNode={false}\n                updateEvaluatedPathways={pathwayCtx.updateEvaluatedPathways}\n              />\n            </div>\n            <div className={styles.controls}>\n              <FontAwesomeIcon icon={faPlay} />\n              <FontAwesomeIcon icon={faPlus} />\n              <FontAwesomeIcon icon={faMinus} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PathwaysList;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Array<Pathway>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<Array<string>>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import { Resource } from 'fhir-objects';\nclass MockedFHIRClient {\n  patient = {};\n\n  async create(): Promise<Resource> {\n    console.log('Mocked create');\n    return Promise.resolve({});\n  }\n}\n\nexport { MockedFHIRClient };\n","import React, { FC, useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport { PathwaysClient } from 'pathways-client';\nimport logo from 'camino-logo-dark.png';\nimport { getPatientRecord } from 'utils/fhirExtract';\nimport { FHIRClientProvider } from './FHIRClient';\nimport { PatientProvider } from './PatientProvider';\nimport { PatientRecordsProvider } from './PatientRecordsProvider';\nimport PatientRecord from './PatientRecord/PatientRecord';\nimport Graph from './Graph';\nimport config from 'utils/ConfigManager';\nimport PathwaysList from './PathwaysList';\nimport { PathwayProvider } from './PathwayProvider';\nimport ThemeProvider from './ThemeProvider';\nimport { EvaluatedPathway } from 'pathways-model';\nimport useGetPathwaysService from './PathwaysService/PathwaysService';\nimport FHIR from 'fhirclient';\nimport { MockedFHIRClient } from 'utils/MockedFHIRClient';\nimport { getHumanName } from 'utils/fhirUtils';\nimport { DomainResource, Practitioner } from 'fhir-objects';\nimport styles from './App.module.scss';\nimport { UserProvider } from './UserProvider';\ninterface AppProps {\n  demoId?: string;\n}\n\nconst App: FC<AppProps> = ({ demoId }) => {\n  const [patient, setPatient] = useState<fhir.Patient | null>(null);\n  const [patientRecords, _setPatientRecords] = useState<DomainResource[]>([]);\n  const [currentPathway, setCurrentPathway] = useState<EvaluatedPathway | null>(null);\n  const [selectPathway, setSelectPathway] = useState<boolean>(true);\n  const [evaluatePath, setEvaluatePath] = useState<boolean>(false);\n  const [evaluatedPathways, setEvaluatedPathways] = useState<EvaluatedPathway[]>([]);\n  const [client, setClient] = useState<PathwaysClient | null>(null);\n  const [user, setUser] = useState<string>('');\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n\n  const setPatientRecords = useCallback((value: DomainResource[]): void => {\n    _setPatientRecords(value);\n    setEvaluatePath(true);\n  }, []);\n\n  const providerProps = useMemo(\n    () => ({\n      patientRecords,\n      setPatientRecords,\n      evaluatePath,\n      setEvaluatePath\n    }),\n    [patientRecords, setPatientRecords, evaluatePath, setEvaluatePath]\n  );\n\n  useEffect(() => {\n    if (!demoId) {\n      FHIR.oauth2\n        .init({\n          clientId: 'Input client id you get when you register the app',\n          scope: 'launch/patient openid profile'\n        })\n        .then(client => {\n          // TODO: MockedFHIRClient has not mocked out requests for resources yet\n          getPatientRecord(client).then((records: DomainResource[]) => {\n            // filters out values that are empty\n            // the server might return deleted\n            // resources that only include an\n            // id, meta, and resourceType\n            const values = ['id', 'meta', 'resourceType'];\n            records = records.filter(resource => {\n              return !Object.keys(resource).every(value => values.includes(value));\n            });\n\n            setPatientRecords(records);\n          });\n          client.patient?.read?.().then((resultPatient: fhir.Patient) => setPatient(resultPatient));\n          setClient(client);\n        });\n    } else {\n      setClient(new MockedFHIRClient());\n      const url = config.get('demoPatients') + demoId + '.json';\n      fetch(url)\n        .then(data => data.json())\n        .then(result => {\n          const resultPatient = result.find((r: DomainResource) => r.resourceType === 'Patient');\n          setPatientRecords(result);\n          setPatient(resultPatient);\n        });\n    }\n  }, [demoId, setPatientRecords]);\n\n  // gather note info\n  useEffect(() => {\n    client?.user?.read().then((user: Practitioner) => {\n      const name = user.name && getHumanName(user.name);\n      if (name) {\n        setUser(name);\n      }\n    });\n  }, [client]);\n\n  const service = useGetPathwaysService(\n    config.get(demoId ? 'demoPathwaysService' : 'pathwaysService')\n  );\n\n  useEffect(() => {\n    if (service.status === 'loaded' && evaluatedPathways.length === 0)\n      setEvaluatedPathways(\n        service.payload.map(pathway => ({ pathway: pathway, pathwayResults: null }))\n      );\n  }, [service, evaluatedPathways.length, client, patientRecords]);\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current)\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [selectPathway]);\n\n  function setEvaluatedPathwayCallback(\n    value: EvaluatedPathway | null,\n    selectPathway = false\n  ): void {\n    window.scrollTo(0, 0);\n    setSelectPathway(selectPathway);\n    setCurrentPathway(value);\n  }\n\n  const updateEvaluatedPathways = useCallback(\n    (value: EvaluatedPathway) => {\n      const newList = [...evaluatedPathways]; // Create a shallow copy of list\n      for (let i = 0; i < evaluatedPathways.length; i++) {\n        if (evaluatedPathways[i].pathway.name === value.pathway.name) {\n          newList[i] = value;\n          setEvaluatedPathways(newList);\n        }\n      }\n\n      if (currentPathway?.pathway.name === value.pathway.name) {\n        setCurrentPathway(value);\n      }\n    },\n    [currentPathway, evaluatedPathways]\n  );\n\n  interface PatientViewProps {\n    evaluatedPathway: EvaluatedPathway | null;\n  }\n\n  const PatientView: FC<PatientViewProps> = ({ evaluatedPathway }) => {\n    return (\n      <div className={styles.display}>\n        <PatientRecord headerElement={headerElement} />\n\n        {evaluatedPathway ? (\n          <div ref={graphContainerElement} className={styles.graph}>\n            <Graph\n              evaluatedPathway={evaluatedPathway}\n              expandCurrentNode={true}\n              updateEvaluatedPathways={updateEvaluatedPathways}\n            />\n          </div>\n        ) : (\n          <div>No Pathway Loaded</div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <ThemeProvider>\n      <FHIRClientProvider client={client as PathwaysClient}>\n        <UserProvider value={{ user, setUser }}>\n          <PatientProvider value={{ patient, setPatient }}>\n            <PatientRecordsProvider value={providerProps}>\n              <PathwayProvider\n                pathwayCtx={{\n                  updateEvaluatedPathways,\n                  evaluatedPathway: currentPathway,\n                  setEvaluatedPathway: setEvaluatedPathwayCallback\n                }}\n              >\n                <div ref={headerElement}>\n                  <Header logo={logo} />\n\n                  <Navigation\n                    evaluatedPathways={evaluatedPathways}\n                    selectPathway={selectPathway}\n                    setSelectPathway={setSelectPathway}\n                  />\n                </div>\n\n                {selectPathway ? (\n                  <PathwaysList\n                    evaluatedPathways={evaluatedPathways}\n                    callback={setEvaluatedPathwayCallback}\n                    service={service}\n                  ></PathwaysList>\n                ) : (\n                  <PatientView evaluatedPathway={currentPathway} />\n                )}\n              </PathwayProvider>\n            </PatientRecordsProvider>\n          </PatientProvider>\n        </UserProvider>\n      </FHIRClientProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './components/App.tsx';\nimport './styles/index.module.scss';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" render={() => <App />}></Route>\n      <Route\n        path=\"/demo/:id\"\n        render={props => <App demoId={props.match.params.id} key={props.match.params.id} />}\n      ></Route>\n      <Route path=\"/demo\" render={() => <App demoId={'Maureen'} />}></Route>\n    </Switch>\n  </Router>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientSnapshot\":\"PatientSnapshot_patientSnapshot__3bGcm\",\"patientSnapshot__info\":\"PatientSnapshot_patientSnapshot__info__2Ry7e\",\"patientName\":\"PatientSnapshot_patientName__ZClJB\",\"patientSnapshot__photo\":\"PatientSnapshot_patientSnapshot__photo__3XI7U\",\"patientSnapshot__list\":\"PatientSnapshot_patientSnapshot__list__5DVC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigation__back\":\"Navigation_navigation__back__2cVZ2\",\"navigation__leftPanel\":\"Navigation_navigation__leftPanel__QjHPF\",\"navigation__rightPanel\":\"Navigation_navigation__rightPanel__1FRD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reportModal\":\"ReportModal_reportModal__2hppG\",\"sectionContainer\":\"ReportModal_sectionContainer__1iIQM\",\"confirmationSection\":\"ReportModal_confirmationSection__2HXo4\",\"confirmationButtonGroup\":\"ReportModal_confirmationButtonGroup__1FN9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\",\"arrowOnPatientPath\":\"Arrow_arrowOnPatientPath__1r5CB\"};","var map = {\n\t\"./alert\": 307,\n\t\"./alert.js\": 307,\n\t\"./alert.js.map\": 1060,\n\t\"./allergyintolerance\": 308,\n\t\"./allergyintolerance.js\": 308,\n\t\"./allergyintolerance.js.map\": 1061,\n\t\"./appointment\": 309,\n\t\"./appointment.js\": 309,\n\t\"./appointment.js.map\": 1062,\n\t\"./appointmentresponse\": 310,\n\t\"./appointmentresponse.js\": 310,\n\t\"./appointmentresponse.js.map\": 1063,\n\t\"./availability\": 311,\n\t\"./availability.js\": 311,\n\t\"./availability.js.map\": 1064,\n\t\"./basic\": 312,\n\t\"./basic.js\": 312,\n\t\"./basic.js.map\": 1065,\n\t\"./binary\": 313,\n\t\"./binary.js\": 313,\n\t\"./binary.js.map\": 1066,\n\t\"./bundle\": 314,\n\t\"./bundle.js\": 314,\n\t\"./bundle.js.map\": 1067,\n\t\"./careplan\": 315,\n\t\"./careplan.js\": 315,\n\t\"./careplan.js.map\": 1068,\n\t\"./claimresponse\": 316,\n\t\"./claimresponse.js\": 316,\n\t\"./claimresponse.js.map\": 1069,\n\t\"./communicationrequest\": 317,\n\t\"./communicationrequest.js\": 317,\n\t\"./communicationrequest.js.map\": 1070,\n\t\"./composition\": 318,\n\t\"./composition.js\": 318,\n\t\"./composition.js.map\": 1071,\n\t\"./conceptmap\": 319,\n\t\"./conceptmap.js\": 319,\n\t\"./conceptmap.js.map\": 1072,\n\t\"./condition\": 320,\n\t\"./condition.js\": 320,\n\t\"./condition.js.map\": 1073,\n\t\"./conformance\": 321,\n\t\"./conformance.js\": 321,\n\t\"./conformance.js.map\": 1074,\n\t\"./contract\": 322,\n\t\"./contract.js\": 322,\n\t\"./contract.js.map\": 1075,\n\t\"./contraindication\": 323,\n\t\"./contraindication.js\": 323,\n\t\"./contraindication.js.map\": 1076,\n\t\"./core\": 5,\n\t\"./core.js\": 5,\n\t\"./core.js.map\": 1077,\n\t\"./coverage\": 324,\n\t\"./coverage.js\": 324,\n\t\"./coverage.js.map\": 1078,\n\t\"./dataelement\": 325,\n\t\"./dataelement.js\": 325,\n\t\"./dataelement.js.map\": 1079,\n\t\"./device\": 326,\n\t\"./device.js\": 326,\n\t\"./device.js.map\": 1080,\n\t\"./devicecomponent\": 327,\n\t\"./devicecomponent.js\": 327,\n\t\"./devicecomponent.js.map\": 1081,\n\t\"./deviceuserequest\": 328,\n\t\"./deviceuserequest.js\": 328,\n\t\"./deviceuserequest.js.map\": 1082,\n\t\"./deviceusestatement\": 329,\n\t\"./deviceusestatement.js\": 329,\n\t\"./deviceusestatement.js.map\": 1083,\n\t\"./diagnosticorder\": 330,\n\t\"./diagnosticorder.js\": 330,\n\t\"./diagnosticorder.js.map\": 1084,\n\t\"./diagnosticreport\": 331,\n\t\"./diagnosticreport.js\": 331,\n\t\"./diagnosticreport.js.map\": 1085,\n\t\"./documentmanifest\": 332,\n\t\"./documentmanifest.js\": 332,\n\t\"./documentmanifest.js.map\": 1086,\n\t\"./documentreference\": 333,\n\t\"./documentreference.js\": 333,\n\t\"./documentreference.js.map\": 1087,\n\t\"./eligibility\": 334,\n\t\"./eligibility.js\": 334,\n\t\"./eligibility.js.map\": 1088,\n\t\"./eligibilityresponse\": 335,\n\t\"./eligibilityresponse.js\": 335,\n\t\"./eligibilityresponse.js.map\": 1089,\n\t\"./encounter\": 336,\n\t\"./encounter.js\": 336,\n\t\"./encounter.js.map\": 1090,\n\t\"./enrollment\": 337,\n\t\"./enrollment.js\": 337,\n\t\"./enrollment.js.map\": 1091,\n\t\"./enrollmentresponse\": 338,\n\t\"./enrollmentresponse.js\": 338,\n\t\"./enrollmentresponse.js.map\": 1092,\n\t\"./explanationofbenefit\": 339,\n\t\"./explanationofbenefit.js\": 339,\n\t\"./explanationofbenefit.js.map\": 1093,\n\t\"./extensiondefinition\": 340,\n\t\"./extensiondefinition.js\": 340,\n\t\"./extensiondefinition.js.map\": 1094,\n\t\"./familyhistory\": 341,\n\t\"./familyhistory.js\": 341,\n\t\"./familyhistory.js.map\": 1095,\n\t\"./group\": 342,\n\t\"./group.js\": 342,\n\t\"./group.js.map\": 1096,\n\t\"./healthcareservice\": 343,\n\t\"./healthcareservice.js\": 343,\n\t\"./healthcareservice.js.map\": 1097,\n\t\"./imagingobjectselection\": 344,\n\t\"./imagingobjectselection.js\": 344,\n\t\"./imagingobjectselection.js.map\": 1098,\n\t\"./imagingstudy\": 345,\n\t\"./imagingstudy.js\": 345,\n\t\"./imagingstudy.js.map\": 1099,\n\t\"./immunization\": 346,\n\t\"./immunization.js\": 346,\n\t\"./immunization.js.map\": 1100,\n\t\"./immunizationrecommendation\": 347,\n\t\"./immunizationrecommendation.js\": 347,\n\t\"./immunizationrecommendation.js.map\": 1101,\n\t\"./list\": 348,\n\t\"./list.js\": 348,\n\t\"./list.js.map\": 1102,\n\t\"./location\": 349,\n\t\"./location.js\": 349,\n\t\"./location.js.map\": 1103,\n\t\"./media\": 350,\n\t\"./media.js\": 350,\n\t\"./media.js.map\": 1104,\n\t\"./medication\": 351,\n\t\"./medication.js\": 351,\n\t\"./medication.js.map\": 1105,\n\t\"./medicationadministration\": 352,\n\t\"./medicationadministration.js\": 352,\n\t\"./medicationadministration.js.map\": 1106,\n\t\"./medicationdispense\": 353,\n\t\"./medicationdispense.js\": 353,\n\t\"./medicationdispense.js.map\": 1107,\n\t\"./medicationprescription\": 354,\n\t\"./medicationprescription.js\": 354,\n\t\"./medicationprescription.js.map\": 1108,\n\t\"./medicationstatement\": 355,\n\t\"./medicationstatement.js\": 355,\n\t\"./medicationstatement.js.map\": 1109,\n\t\"./messageheader\": 356,\n\t\"./messageheader.js\": 356,\n\t\"./messageheader.js.map\": 1110,\n\t\"./models\": 305,\n\t\"./models.js\": 305,\n\t\"./models.js.map\": 1111,\n\t\"./namingsystem\": 357,\n\t\"./namingsystem.js\": 357,\n\t\"./namingsystem.js.map\": 1112,\n\t\"./nutritionorder\": 358,\n\t\"./nutritionorder.js\": 358,\n\t\"./nutritionorder.js.map\": 1113,\n\t\"./observation\": 359,\n\t\"./observation.js\": 359,\n\t\"./observation.js.map\": 1114,\n\t\"./operationdefinition\": 360,\n\t\"./operationdefinition.js\": 360,\n\t\"./operationdefinition.js.map\": 1115,\n\t\"./operationoutcome\": 361,\n\t\"./operationoutcome.js\": 361,\n\t\"./operationoutcome.js.map\": 1116,\n\t\"./oralhealthclaim\": 362,\n\t\"./oralhealthclaim.js\": 362,\n\t\"./oralhealthclaim.js.map\": 1117,\n\t\"./order\": 363,\n\t\"./order.js\": 363,\n\t\"./order.js.map\": 1118,\n\t\"./orderresponse\": 364,\n\t\"./orderresponse.js\": 364,\n\t\"./orderresponse.js.map\": 1119,\n\t\"./organization\": 365,\n\t\"./organization.js\": 365,\n\t\"./organization.js.map\": 1120,\n\t\"./other\": 366,\n\t\"./other.js\": 366,\n\t\"./other.js.map\": 1121,\n\t\"./patient\": 367,\n\t\"./patient.js\": 367,\n\t\"./patient.js.map\": 1122,\n\t\"./paymentnotice\": 368,\n\t\"./paymentnotice.js\": 368,\n\t\"./paymentnotice.js.map\": 1123,\n\t\"./paymentreconciliation\": 369,\n\t\"./paymentreconciliation.js\": 369,\n\t\"./paymentreconciliation.js.map\": 1124,\n\t\"./pendedrequest\": 370,\n\t\"./pendedrequest.js\": 370,\n\t\"./pendedrequest.js.map\": 1125,\n\t\"./practitioner\": 371,\n\t\"./practitioner.js\": 371,\n\t\"./practitioner.js.map\": 1126,\n\t\"./procedure\": 372,\n\t\"./procedure.js\": 372,\n\t\"./procedure.js.map\": 1127,\n\t\"./procedurerequest\": 373,\n\t\"./procedurerequest.js\": 373,\n\t\"./procedurerequest.js.map\": 1128,\n\t\"./profile\": 374,\n\t\"./profile.js\": 374,\n\t\"./profile.js.map\": 1129,\n\t\"./provenance\": 375,\n\t\"./provenance.js\": 375,\n\t\"./provenance.js.map\": 1130,\n\t\"./query\": 376,\n\t\"./query.js\": 376,\n\t\"./query.js.map\": 1131,\n\t\"./questionnaire\": 377,\n\t\"./questionnaire.js\": 377,\n\t\"./questionnaire.js.map\": 1132,\n\t\"./questionnaireanswers\": 378,\n\t\"./questionnaireanswers.js\": 378,\n\t\"./questionnaireanswers.js.map\": 1133,\n\t\"./readjudicate\": 379,\n\t\"./readjudicate.js\": 379,\n\t\"./readjudicate.js.map\": 1134,\n\t\"./referralrequest\": 380,\n\t\"./referralrequest.js\": 380,\n\t\"./referralrequest.js.map\": 1135,\n\t\"./relatedperson\": 381,\n\t\"./relatedperson.js\": 381,\n\t\"./relatedperson.js.map\": 1136,\n\t\"./reversal\": 382,\n\t\"./reversal.js\": 382,\n\t\"./reversal.js.map\": 1137,\n\t\"./riskassessment\": 383,\n\t\"./riskassessment.js\": 383,\n\t\"./riskassessment.js.map\": 1138,\n\t\"./searchparameter\": 384,\n\t\"./searchparameter.js\": 384,\n\t\"./searchparameter.js.map\": 1139,\n\t\"./securityevent\": 385,\n\t\"./securityevent.js\": 385,\n\t\"./securityevent.js.map\": 1140,\n\t\"./slot\": 386,\n\t\"./slot.js\": 386,\n\t\"./slot.js.map\": 1141,\n\t\"./specimen\": 387,\n\t\"./specimen.js\": 387,\n\t\"./specimen.js.map\": 1142,\n\t\"./statusrequest\": 388,\n\t\"./statusrequest.js\": 388,\n\t\"./statusrequest.js.map\": 1143,\n\t\"./statusresponse\": 389,\n\t\"./statusresponse.js\": 389,\n\t\"./statusresponse.js.map\": 1144,\n\t\"./subscription\": 390,\n\t\"./subscription.js\": 390,\n\t\"./subscription.js.map\": 1145,\n\t\"./substance\": 391,\n\t\"./substance.js\": 391,\n\t\"./substance.js.map\": 1146,\n\t\"./supply\": 392,\n\t\"./supply.js\": 392,\n\t\"./supply.js.map\": 1147,\n\t\"./supportingdocumentation\": 393,\n\t\"./supportingdocumentation.js\": 393,\n\t\"./supportingdocumentation.js.map\": 1148,\n\t\"./valueset\": 394,\n\t\"./valueset.js\": 394,\n\t\"./valueset.js.map\": 1149\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 306;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathways_list\":\"PathwaysList_pathways_list__2WO5g\",\"header_title\":\"PathwaysList_header_title__7EM8s\",\"header_title__header\":\"PathwaysList_header_title__header__36yqh\",\"header_title__note\":\"PathwaysList_header_title__note__34zC8\",\"container\":\"PathwaysList_container__1SC5K\",\"pathwayElement\":\"PathwaysList_pathwayElement__34hJh\",\"title\":\"PathwaysList_title__ccVmw\",\"numElements\":\"PathwaysList_numElements__1WAOk\",\"expand\":\"PathwaysList_expand__2v9Wx\",\"infoContainer\":\"PathwaysList_infoContainer__2q0Tn\",\"details\":\"PathwaysList_details__2kSzT\",\"pathway\":\"PathwaysList_pathway__1vqM1\",\"matchingElement\":\"PathwaysList_matchingElement__1SQoM\",\"controls\":\"PathwaysList_controls__vZmz8\",\"matchedElementsLabel\":\"PathwaysList_matchedElementsLabel__3cXeX\",\"pathwayListHeaderContainer\":\"PathwaysList_pathwayListHeaderContainer__2l2fi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"App_display__2vneK\",\"graph\":\"App_graph__3EP_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expanded\":\"styles_expanded__XNUv-\",\"expandedNode\":\"styles_expandedNode__26Fy8\",\"nodeTitle\":\"styles_nodeTitle__5mm8f\",\"clickable\":\"styles_clickable__3HzZZ\",\"iconAndLabel\":\"styles_iconAndLabel__2LOTu\",\"statusIcon\":\"styles_statusIcon__2jDwI\",\"button\":\"styles_button__1AUjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"onPatientPath\":\"Node_onPatientPath__3LPjE\",\"actionable\":\"Node_actionable__bHXKd\",\"notOnPatientPath\":\"Node_notOnPatientPath__24OpF\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childOnPatientPath\":\"Node_childOnPatientPath__28UD6\",\"childActionable\":\"Node_childActionable__SwUjD\",\"childNotOnPatientPath\":\"Node_childNotOnPatientPath__2j4QB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"PatientRecord_record__2CgGD\",\"recordToggle\":\"PatientRecord_recordToggle__2Vhvd\",\"sidebar\":\"PatientRecord_sidebar__1Box0\",\"element\":\"PatientRecord_element__RKq2B\",\"title\":\"PatientRecord_title__2U0uE\",\"expand\":\"PatientRecord_expand__M9HFP\",\"elementContainer\":\"PatientRecord_elementContainer__-2X3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldContainer\":\"ReportSection_fieldContainer__3LwUq\",\"field\":\"ReportSection_field__Cxwdy\",\"sectionContainer\":\"ReportSection_sectionContainer__3gJ8s\",\"sectionIconContainer\":\"ReportSection_sectionIconContainer__3pp4w\",\"icon\":\"ReportSection_icon__1NGg-\",\"notesField\":\"ReportSection_notesField__67Cly\"};"],"sourceRoot":""}