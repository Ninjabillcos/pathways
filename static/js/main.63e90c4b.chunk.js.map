{"version":3,"sources":["components/Node/Node.module.scss","components/ExpandedNode/ExpandedNode.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Graph/Graph.module.scss","styles/index.module.scss","components/PatientRecord/PatientRecord.module.scss","components/ReportModal/ReportSection/ReportSection.module.scss","utils/ConfigManager.js","components/MissingDataPopup/MissingDataPopup.module.scss","components/ActionButton/ActionButton.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/PatientProvider.tsx","components/PatientSnapshot/PatientSnapshot.tsx","components/PathwayProvider.tsx","components/UserProvider.tsx","components/NoteDataProvider.tsx","utils/fhirUtils.ts","components/PatientRecordsProvider.tsx","components/DropDown/DropDown.tsx","components/Navigation/Navigation.tsx","utils/patient.js","utils/fhirExtract.js","components/FHIRClient.tsx","engine/cql-extractor.ts","utils/regexes.ts","engine/cql-to-elm.ts","engine/elm-executor.ts","engine/output-results.ts","engine/evaluate-patient.ts","components/PatientRecord/PatientRecord.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","components/ReportModal/ReportSection/ReportSection.tsx","components/ReportModal/ReportModal.tsx","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/PathwaysList/PathwaysList.tsx","components/PathwaysService/PathwaysService.tsx","utils/MockedFHIRClient.ts","components/App.tsx","index.js","components/PatientSnapshot/PatientSnapshot.module.scss","components/Navigation/Navigation.module.scss","components/ReportModal/ReportModal.module.scss","components/Arrow/Arrow.module.scss","../node_modules/cql-execution/lib/fhir sync /^/.//.*$","components/DropDown/DropDown.module.scss","components/App.module.scss","components/PathwaysList/PathwaysList.module.scss"],"names":["module","exports","config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","green","typography","fontFamily","materialUiOverridesBase","MuiButton","root","borderRadius","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","theme","createMuiTheme","palette","primary","main","secondary","common","background","default","text","overrides","projectorTheme","ThemeContext","createContext","ThemeProvider","children","useState","defaultTheme","setTheme","toggleTheme","useCallback","currentTheme","Provider","Header","props","anchorEl","setAnchorEl","useContext","handleClose","className","styles","header","src","logo","alt","onClick","event","currentTarget","aria-controls","aria-haspopup","icon","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","PatientContext","patient","setPatient","PatientProvider","usePatient","useStyles","makeStyles","color","PatientSnapshot","classes","useMemo","entry","find","n","use","given","join","family","getPatientName","address","city","state","filter","item","getPatientAddress","age","birthDateString","today","Date","birthDate","getFullYear","m","getMonth","getDate","getPatientAge","patientSnapshot","faUserCircle","patientSnapshot__photo","patientSnapshot__info","patientName","clsx","patientSnapshot__list","gender","PathwayContext","evaluatedPathway","setEvaluatedPathway","updateEvaluatedPathways","assignPathway","unassignPathway","PathwayProvider","pathwayCtx","usePathwayContext","UserContext","user","setUser","UserProvider","NoteContext","note","setNote","NoteDataProvider","date","getHumanName","toDateString","physician","birthdate","mcodeElements","pathway","status","useNote","toString","Object","keys","forEach","element","node","treatment","notes","person","Array","isArray","prefix","suffix","createDocumentReference","data","resourceType","v1","meta","lastUpdated","getCurrentTime","subject","reference","content","attachment","btoa","contentType","type","coding","system","code","display","indexed","createActionDocumentReference","labelOrCondition","documentReference","identifier","createNoteContent","patientRecords","actionNode","action","description","tnm","record","profile","length","elements","includes","obs","valueCodeableConcept","some","index","findIndex","now","withLeadingZero","getDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","pathwayIsAssigned","r","map","title","getTNM","retrieveNote","condition","resources","resource","undefined","PatientRecordsContext","setPatientRecords","evaluatePath","setEvaluatePath","mcodeRecords","setMcodeRecords","PatientRecordsProvider","usePatientRecords","DropDown","options","visible","onChange","selectedValue","setSelectPathway","onChangeCallback","assigned","dropdown","htmlFor","Button","variant","startIcon","faThList","alert","faTimesCircle","faCheckCircle","classNamePrefix","inputId","aria-label","formatOptionLabel","option","check","navigation","backgroundColor","Navigation","evaluatedPathways","selectPathway","onBack","pathwayOptions","navigation__leftPanel","faChevronLeft","navigation__back","navigation__rightPanel","pathwayOption","ALL_RESOURCES_PATIENT_REFERENCE","mapperName","get","MapperClass","mappers","mapperInstance","applyMapping","bundle","execute","getEverythingManually","client","supportedResources","push","requests","request","flat","pageLimit","then","result","catch","error","console","log","Promise","all","results","x","getEverythingRevInclude","onError","query","FHIRClientContext","FHIRClientProvider","useFHIRClient","getFixture","filename","fetch","cql","cqlFormat","cqlBlock","resourceName","concat","cqlAdd","isConditional","transitions","extractMultipartBoundary","extractMultipartFileName","extractJSONContent","extractCQLInclude","url","executeElm","patientRecord","elm","libraries","lib","Library","Repository","executor","Executor","psource","PatientSource","FHIRv400","loadBundles","exec","getAllDocumentation","patientData","patientDocumentation","nodesWithDocumentation","values","doc","onPath","entries","nodes","nodeKey","documentation","retrieveResource","transition","formatDocumentation","formatNextNode","currentNode","atob","shouldAdvance","isComplete","nextNode","currentNodeKey","nextNodes","currentTransitionDocumentation","getConditionalNextNode","evaluatePatientOnPathway","navigational","processELMCommon","library","extractNavigationCQL","processCQLCommon","currentNodes","nodeData","completedNodes","patientId","Patient","pathwayData","evaluatePathwayPreconditions","preconditions","precondition","elementName","extractPreconditionCQL","resultItems","matches","evaluationResult","actual","match","preconditionResultItem","expected","pathwayName","preconditionResultItems","preconditionData","resolve","reject","setTimeout","FHIRHelpers","gatherCQL","formdata","FormData","key","append","method","body","headers","boundary","obj","reduce","oldArray","line","elmName","JSON","parse","convertCQL","Accept","json","convertBasicCQL","elmResults","patientIds","patientResults","recordSections","getResourcesByType","groupedResources","PatientRecordElement","recordSection","isExpanded","setIsExpanded","chevron","faChevronUp","faChevronDown","resourceCount","expand","visualizerContainer","resourcesByType","Visualizer","rows","PathwayVisualizer","setPreconditions","useEffect","preconditionResult","c","McodeVisualizer","keysArray","PatientRecord","headerElement","recordContainerElement","useRef","Map","collection","set","groupResourceByType","current","style","height","window","innerHeight","clientHeight","ref","sidebar","recordToggle","faNotesMedical","graphLayoutProvider","layout","nodeDimensions","nodeKeys","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","nodeDimension","setNode","width","setEdge","nodeCoordinates","startNodeShift","y","edges","e","edge","edgeName","v","w","start","end","points","p","layoutDagre","START","rank","NaN","horizontalPosition","parents","canMove","initializeNodes","graph","HORIZONTAL_OFFSET","NODE_WIDTH","VERTICAL_OFFSET","NODE_HEIGHT","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","parentsOnHigherRank","parentName","parent","floor","splice","childNode","spreadChildrenEvenly","sum","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","setOpen","Popup","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","toUpperCase","slice","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","faTimes","MediumActionButton","mediumActionButton","ActionButton","size","PopupContent","showCheck","setShowCheck","selected","setSelected","popupContent","popupChoice","footer","create","MissingDataPopup","missingDataPopup","popupTrigger","faEdit","externalLink","ReportField","sectionTitle","field","PhysicianNotesSection","sectionContainer","sectionIconContainer","notesField","ReportSection","fields","fieldContainer","shortid","generate","ReportModal","onConfirm","onDecline","patientSection","observationField","Laterality","pathwaySection","reportModal","faUser","faRoute","faStickyNote","confirmationSection","confirmationButtonGroup","isActionNode","ExpandedNode","memo","isActionable","isCurrentNode","isAction","isAccepted","showReport","setShowReport","newPatientRecords","pathwayResource","resourceProperties","intent","authoredOn","toISOString","medicationCodeableConcept","Error","translatePathwayRecommendation","ExpandedNodeMemo","setComments","nc","prevNote","comments","onAccept","onAdvance","ExpandedNodeField","descTitle","desc","StatusField","rawDate","toLocaleString","titleText","charAt","returnElements","href","target","rel","faExternalLinkAlt","procedure","performedPeriod","performedDateTime","renderAction","branch","pathwayNode","observation","valueCoding","effectiveDateTime","identifierArray","documentReferenceIdentifier","arr","renderBranch","defaultText","indexStyles","expandedNode","infoTable","test","button","commentsForm","preventDefault","borderColor","Node","forwardRef","isOnPatientPath","xCoordinate","yCoordinate","expanded","onClickHandler","top","left","backgroundColorClass","onPatientPath","notOnPatientPath","topLevelClasses","expandedNodeClass","nodeStyles","actionable","childActionable","childOnPatientPath","childNotOnPatientPath","declined","childDeclined","nodeTitle","clickable","iconAndLabel","NodeIcon","faMicroscope","faPlay","faPrescriptionBottleAlt","faSyringe","faBookMedical","StatusIcon","statusIcon","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","fill","markerEnd","Arrow","arrowOnPatientPath","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","getPath","pathwayResults","isEdgeOnPatientPath","path","startIndex","endIndex","interactive","expandCurrentNode","graphElement","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","setPath","getGraphLayout","nodeElement","from","graphLayout","setLayout","maxHeight","max","minX","min","toAdd","layoutKeys","initialExpandedNode","curr","_setExpanded","setExpanded","prevState","cancel","ResizeSensor","maxWidth","l","GraphMemo","marginRight","docResource","xmlns","zIndex","overflow","PathwaysListElement","callback","isVisible","setIsVisible","pathwayElementClass","assignedPathwayElement","pathwayElement","titleClass","role","numElements","infoContainer","details","matchingElement","faEye","controls","faPlus","faMinus","PathwaysList","service","preconditionPromises","preconditionResults","sort","assignedPathways","carePlanTitles","getAssignedPathways","pathways_list","container","pathwayListHeaderContainer","header_title","header_title__header","header_title__note","matchedElementsLabel","faCaretDown","useGetPathwaysService","setResult","getPathways","response","listOfFiles","f","typedFetch","listOfPromises","pathwaysList","payload","MockedFHIRClient","PatientView","graphContainerElement","App","demoId","_setPatientRecords","_setMcodeRecords","currentPathway","setCurrentPathway","setEvaluatedPathways","setClient","elmString","mcodeData","providerProps","resultPatient","FHIR","oauth2","init","clientId","scope","statement","rest","operation","definition","getEverything","revIncludeResources","searchRevInclude","searchInclude","filters","searchParam","searchParams","getPatientRecord","records","every","read","setEvaluatedPathwayCallback","scrollTo","newList","carePlan","R4","NarrativeStatusKind","_generated","div","category","createCarePlan","delete","rootElement","document","getElementById","ReactDOM","render","exact","params","webpackContext","req","webpackContextResolve","__webpack_require__","o"],"mappings":"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AWN,kBAQpEmI,EAAiBH,EAAkB1C,KAAI,SAAAtF,GAAgB,MAAK,CAChElG,MAAOkG,EAAiBsB,QAAQhJ,KAChCK,MAAOqH,MAGT,OACE,yBAAKhE,UAAW4D,YAAK3D,KAAO4L,WAAYhK,EAAQgK,aAC9C,yBAAK7L,UAAWC,KAAOmM,uBACpBF,GACC,kBAAC,IAAD,CACEvL,KAAM0L,IACNrM,UAAWC,KAAOqM,iBAClBhM,QAAS4L,IAIb,kBAAC,EAAD,OAGF,yBAAKlM,UAAWC,KAAOsM,wBACrB,kBAAC,GAAD,CACEzO,MAAM,WACNgD,GAAG,eACH0J,SAAUyB,EACV1B,QAAS4B,EACTzB,cAAe/N,EACfgO,iBAAkBA,EAClBF,SAjCgB,SAAC+B,GACD,OAAlBA,GAA0B,UAAWA,GACvClI,EAAWL,oBAAoBuI,EAAc7P,a,sBCvC7C8P,GAAkC,CACtC,0BACA,2BACA,eACA,kBACA,4BACA,0BACA,yBACA,mBACA,uBACA,8BACA,oBACA,wBACA,6BACA,mBACA,wBACA,oBACA,eACA,uBACA,6BACA,2BACA,eACA,sBACA,2BACA,yBACA,oBACA,sBACA,wBACA,yBACA,6BACA,6BACA,eACA,iBACA,eACA,aACA,aACA,gBACA,0BACA,mBACA,mBACA,8BACA,gCACA,+BACA,iCACA,gCACA,mBACA,iBACA,yBACA,0BACA,6BACA,uBACA,2BACA,uBACA,0BACA,wBACA,0BACA,4BACA,gCACA,+BACA,gCACA,+BACA,oBACA,wBACA,qBACA,mBACA,0BACA,2BACA,4BACA,6BACA,4BACA,oBACA,sBACA,2BACA,6BACA,8BACA,4BACA,6BACA,iBACA,cACA,yBACA,wBACA,eACA,sBACA,wBACA,sBACA,6BACA,8BACA,4BACA,8BACA,6BACA,8BACA,+BACA,mCACA,4BACA,mCACA,8BACA,6BACA,qCACA,gBACA,gBACA,wBACA,oBACA,sBACA,uBACA,qBACA,sBACA,eACA,YACA,cACA,oBACA,sBACA,uBACA,sBACA,qBACA,+BACA,qCACA,yBACA,2BACA,2BACA,eACA,eACA,eACA,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","file":"static/js/main.63e90c4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"statusIcon\":\"Node_statusIcon__NkBGU\",\"onPatientPath\":\"Node_onPatientPath__3LPjE\",\"actionable\":\"Node_actionable__bHXKd\",\"declined\":\"Node_declined__2Dd-4\",\"notOnPatientPath\":\"Node_notOnPatientPath__24OpF\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childOnPatientPath\":\"Node_childOnPatientPath__28UD6\",\"childActionable\":\"Node_childActionable__SwUjD\",\"childNotOnPatientPath\":\"Node_childNotOnPatientPath__2j4QB\",\"childDeclined\":\"Node_childDeclined__2Gx9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"button\":\"ExpandedNode_button__Tvpk5\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expanded\":\"styles_expanded__XNUv-\",\"expandedNode\":\"styles_expandedNode__26Fy8\",\"nodeTitle\":\"styles_nodeTitle__5mm8f\",\"clickable\":\"styles_clickable__3HzZZ\",\"iconAndLabel\":\"styles_iconAndLabel__2LOTu\",\"statusIcon\":\"styles_statusIcon__2jDwI\",\"button\":\"styles_button__1AUjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"PatientRecord_record__2CgGD\",\"recordToggle\":\"PatientRecord_recordToggle__2Vhvd\",\"sidebar\":\"PatientRecord_sidebar__1Box0\",\"element\":\"PatientRecord_element__RKq2B\",\"title\":\"PatientRecord_title__2U0uE\",\"expand\":\"PatientRecord_expand__M9HFP\",\"visualizerContainer\":\"PatientRecord_visualizerContainer__PamdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldContainer\":\"ReportSection_fieldContainer__3LwUq\",\"field\":\"ReportSection_field__Cxwdy\",\"sectionContainer\":\"ReportSection_sectionContainer__3gJ8s\",\"sectionIconContainer\":\"ReportSection_sectionIconContainer__3pp4w\",\"icon\":\"ReportSection_icon__1NGg-\",\"notesField\":\"ReportSection_notesField__67Cly\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily:\n    \"'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  }\n};\n\nconst theme = createMuiTheme({\n  typography: { ...typography },\n  palette: {\n    primary: {\n      main: colors.blue\n    },\n    secondary: {\n      main: colors.red\n    },\n    common: colors,\n    background: {\n      default: colors.grayLighter\n    },\n    text: {\n      primary: colors.gray,\n      secondary: colors.gray\n    }\n  },\n  overrides: { ...materialUiOverridesBase }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: {\n    primary: {\n      main: colors.blue\n    },\n    secondary: {\n      main: colors.red\n    },\n    common: colors,\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  },\n  overrides: { ...materialUiOverridesBase }\n});\n\nexport default theme;\nexport { theme, projectorTheme };\n","import React, { FC, createContext, useState, useCallback, useContext, ReactNode } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { theme as defaultTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContext = createContext(() => {\n  // this comment does nothing but make eslint happy :)\n});\nexport const useThemeToggle = (): (() => void) => useContext(ThemeContext);\n\nconst ThemeProvider: FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setTheme] = useState(defaultTheme);\n  const toggleTheme = useCallback(() => {\n    setTheme(currentTheme => (currentTheme === defaultTheme ? projectorTheme : defaultTheme));\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ThemeContext.Provider value={toggleTheme}>{children}</ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { FC, useState, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport styles from './Header.module.scss';\n\ninterface HeaderProps {\n  logo: string;\n}\n\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleToggleTheme = (): void => {\n    toggleTheme();\n    handleClose();\n  };\n\n  return (\n    <header className={styles.header}>\n      <img src={props.logo} alt=\"logo\" />\n      <button onClick={handleClick} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { Patient } from 'fhir-objects';\ninterface PatientProviderProps {\n  children: ReactNode;\n  value: PatientContextInterface;\n}\n\ninterface PatientContextInterface {\n  patient: Patient | null;\n  setPatient: Function;\n}\n\nexport const PatientContext = createContext<PatientContextInterface>({\n  patient: null,\n  setPatient: (): void => {\n    return;\n  }\n});\n\nexport const PatientProvider: FC<PatientProviderProps> = ({ children, value }) => {\n  return value.patient == null ? (\n    <div>Loading...</div>\n  ) : (\n    <PatientContext.Provider value={value}>{children}</PatientContext.Provider>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const usePatient = (): PatientContextInterface => useContext(PatientContext)!;\n","import React, { FC, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { HumanName, Address } from 'fhir-objects';\n\nimport { usePatient } from '../PatientProvider';\nimport styles from './PatientSnapshot.module.scss';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'patient-snapshot-list': {\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'PatientSnapshot' }\n);\n\nconst getPatientName = (name: Array<HumanName> = []): string => {\n  const entry = name.find(n => n.use === 'official') || name[0];\n  return entry ? `${(entry.given || []).join(' ')} ${entry.family}` : 'No name';\n};\n\nconst getPatientAge = (birthDateString: string | undefined): number => {\n  if (!birthDateString) return 0;\n  const today = new Date();\n  const birthDate = new Date(birthDateString);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n\nconst getPatientAddress = (address: Array<Address> = []): string => {\n  const entry = address[0];\n  return entry ? [entry.city, entry.state].filter(item => !!item).join(', ') : 'No Address';\n};\n\nconst PatientSnapshot: FC<{}> = () => {\n  const classes = useStyles();\n  const patient = usePatient().patient as fhir.Patient;\n  const name = useMemo(() => getPatientName(patient.name), [patient]);\n  const address = useMemo(() => getPatientAddress(patient.address), [patient]);\n  const age = useMemo(() => getPatientAge(patient.birthDate), [patient]);\n\n  return (\n    <div className={styles.patientSnapshot}>\n      <FontAwesomeIcon icon={faUserCircle} className={styles.patientSnapshot__photo} />\n\n      <div className={styles.patientSnapshot__info}>\n        <div className={styles.patientName}>{name}</div>\n\n        <ul className={clsx(styles.patientSnapshot__list, classes['patient-snapshot-list'])}>\n          <li>\n            DOB: {patient.birthDate} (Age: {age})\n          </li>\n          <li>Admin. Sex: {patient.gender}</li>\n          <li>Location: {address}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientSnapshot;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwayContextInterface } from 'pathways-model';\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n  pathwayCtx: PathwayContextInterface;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({\n  evaluatedPathway: null,\n  setEvaluatedPathway: () => {\n    //do nothing\n  },\n  updateEvaluatedPathways: () => {\n    //do nothing\n  },\n  assignPathway: () => {\n    //do nothing\n  },\n  unassignPathway: () => {\n    //do nothing\n  }\n});\n\nexport const PathwayProvider: FC<PathwayProviderProps> = ({ children, pathwayCtx }) => {\n  return <PathwayContext.Provider value={pathwayCtx}>{children}</PathwayContext.Provider>;\n};\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({\n  user: '',\n  setUser: () => {\n    // do nothing\n  }\n});\n\ninterface UserProviderProps {\n  children: ReactNode;\n  value: UserContextInterface;\n}\nexport const UserProvider: FC<UserProviderProps> = ({ children, value }) => {\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import React, {\n  FC,\n  createContext,\n  useContext,\n  ReactNode,\n  useState,\n  SetStateAction,\n  Dispatch\n} from 'react';\nimport { usePathwayContext } from './PathwayProvider';\nimport { usePatient } from './PatientProvider';\nimport { getHumanName } from 'utils/fhirUtils';\nimport { useUser } from './UserProvider';\nexport interface Note {\n  patient: string;\n  date: string;\n  physician: string;\n  birthdate?: string;\n  mcodeElements: {\n    [key: string]: string;\n  };\n  pathway?: string;\n  node?: string;\n  status: string;\n  treatment?: string;\n  notes?: string;\n}\n\ninterface NoteDataProviderProps {\n  children: ReactNode;\n  date: Date;\n}\n\ninterface NoteContextProps {\n  note: Note | null;\n  setNote: Dispatch<SetStateAction<Note>> | (() => void);\n}\n\nexport const NoteContext = createContext<NoteContextProps>({\n  note: null,\n  setNote: () => {\n    // do nothing.\n  }\n});\n\nexport const NoteDataProvider: FC<NoteDataProviderProps> = ({ children, date }) => {\n  const patient = usePatient().patient as fhir.Patient;\n  const { user } = useUser();\n  const name = patient?.name ? getHumanName(patient.name) : '';\n  const [note, setNote] = useState<Note>({\n    patient: name,\n    date: date.toDateString(),\n    physician: user,\n    birthdate: patient?.birthDate || '',\n    mcodeElements: {},\n    pathway: usePathwayContext().evaluatedPathway?.pathway.name,\n    status: 'Pending'\n  });\n\n  return <NoteContext.Provider value={{ note, setNote }}>{children}</NoteContext.Provider>;\n};\n\nexport const useNote = (): NoteContextProps => useContext(NoteContext);\n\nexport const toString = (note: Note): string => {\n  let mcodeElements = '';\n  Object.keys(note.mcodeElements).forEach(element => {\n    mcodeElements += `${element}: ${note.mcodeElements[element]}\\n`;\n  });\n  const noteString = `Date: ${note.date}\\n\nPatient: ${note.patient}\\n\nBirthdate: ${note.birthdate}\\n\nPhysician: ${note.physician}\\n\n${mcodeElements}\nPathway: ${note.pathway}\\n\nNode: ${note.node}\\n\nStatus: ${note.status}\\n\nTreatment: ${note.treatment}\\n\nNotes: ${note.notes}`;\n  return noteString;\n};\n","import { ActionNode, EvaluatedPathway, Pathway } from 'pathways-model';\nimport { Note, toString } from 'components/NoteDataProvider';\nimport {\n  Patient,\n  DomainResource,\n  HumanName,\n  DocumentReference,\n  Observation,\n  ServiceRequest,\n  MedicationRequest,\n  CarePlan\n} from 'fhir-objects';\nimport { R4 } from '@ahryman40k/ts-fhir-types';\nimport { v1 } from 'uuid';\nimport { McodeElements } from 'mcode';\nimport shortid from 'shortid';\n\n// translates pathway recommendation resource into suitable FHIR resource\nexport function translatePathwayRecommendation(\n  pathwayResource: MedicationRequest | ServiceRequest | CarePlan,\n  patientId: string\n): MedicationRequest | ServiceRequest | CarePlan {\n  const { resourceType } = pathwayResource;\n  const resourceProperties = {\n    id: v1(),\n    resourceType,\n    intent: 'order',\n    subject: { reference: `Patient/${patientId}` },\n    status: 'active',\n    authoredOn: new Date().toISOString(),\n    meta: {\n      lastUpdated: new Date().toISOString()\n    }\n  };\n\n  switch (resourceType) {\n    case 'ServiceRequest': {\n      const { code } = pathwayResource as ServiceRequest;\n      return {\n        ...resourceProperties,\n        code\n      } as ServiceRequest;\n    }\n    case 'MedicationRequest': {\n      const { medicationCodeableConcept } = pathwayResource as MedicationRequest;\n      return {\n        ...resourceProperties,\n        medicationCodeableConcept\n      } as MedicationRequest;\n    }\n    case 'CarePlan': {\n      const { title } = pathwayResource as CarePlan;\n      return {\n        ...resourceProperties,\n        title\n      } as CarePlan;\n    }\n    default: {\n      throw Error(`Translation for ${resourceType} not implemented.`);\n    }\n  }\n}\n\nexport function getHumanName(person: HumanName[]): string {\n  let name = '';\n  if (Array.isArray(person)) {\n    name = [\n      person[0]?.prefix?.join(' '),\n      person[0]?.given?.join(' '),\n      person[0]?.family,\n      person[0]?.suffix?.join(' ')\n    ].join(' ');\n  }\n  return name;\n}\n\nexport function createDocumentReference(data: string, patient: Patient): DocumentReference {\n  return {\n    resourceType: 'DocumentReference',\n    id: v1(),\n    meta: {\n      lastUpdated: getCurrentTime()\n    },\n    status: 'current',\n    subject: { reference: `Patient/${patient.id}` },\n    content: [\n      {\n        attachment: {\n          data: btoa(data), // Base 64 encoded data\n          contentType: 'text/plain'\n        }\n      }\n    ],\n    // type and indexed are required in STU3 DocumentReference but not in R4\n    type: {\n      coding: [\n        {\n          system: 'http://loinc.org',\n          code: '34108-1',\n          display: 'Outpatient Note'\n        }\n      ]\n    },\n    indexed: ''\n  };\n}\n\nexport function createActionDocumentReference(\n  data: string,\n  labelOrCondition: string,\n  patient: Patient\n): DocumentReference {\n  const documentReference = createDocumentReference(data, patient);\n  return {\n    ...documentReference,\n    identifier: [\n      {\n        system: 'pathways.documentreference',\n        value: btoa(labelOrCondition)\n      }\n    ]\n  };\n}\n\nexport function createNoteContent(\n  note: Note,\n  patientRecords: DomainResource[],\n  status: string,\n  notes: string,\n  actionNode?: ActionNode\n): string {\n  note.status = status;\n  note.notes = notes;\n  if (actionNode) {\n    note.treatment = actionNode.action[0].description;\n    note.node = actionNode.label;\n  }\n\n  const tnm: string[] = ['', '', ''];\n  patientRecords.forEach(record => {\n    // TODO: should use code bindings over\n    // profile names.\n    if (record.meta?.profile && record.meta.profile.length) {\n      const elements = [\n        'TNMClinicalPrimaryTumorCategory',\n        'TNMClinicalRegionalNodesCategory',\n        'TNMClinicalDistantMetastasesCategory'\n      ];\n\n      const profile = record.meta.profile[0];\n      if (record.resourceType === 'Observation') {\n        if (profile.includes('TumorMarkerTest') && record.resourceType === 'Observation') {\n          const obs = record as Observation;\n          const value = obs.valueCodeableConcept?.text;\n          const name = obs.code.text;\n          if (value && name) {\n            note.mcodeElements[name] = value;\n          }\n        } else if (\n          elements.some(value => {\n            return profile.includes(value);\n          })\n        ) {\n          const index = elements.findIndex(value => {\n            return profile.includes(value);\n          });\n          if (index > -1) {\n            const obs = record as Observation;\n            const value = obs.valueCodeableConcept?.text;\n            if (value) {\n              tnm[index] = value;\n            }\n          }\n        }\n      }\n    }\n  });\n\n  note.mcodeElements['Clinical TNM'] = tnm.join(' ');\n  return toString(note);\n}\n\nfunction getCurrentTime(): string {\n  const now = new Date();\n  return (\n    now.getFullYear() +\n    '-' +\n    withLeadingZero(now.getMonth()) +\n    '-' +\n    withLeadingZero(now.getDay()) +\n    'T' +\n    withLeadingZero(now.getUTCHours()) +\n    ':' +\n    withLeadingZero(now.getUTCMinutes()) +\n    ':' +\n    withLeadingZero(now.getUTCSeconds()) +\n    '.' +\n    now.getUTCMilliseconds() +\n    '+00:00'\n  );\n}\n\nfunction withLeadingZero(n: number): string {\n  return n < 10 ? '0' + n : n.toString();\n}\n\nexport function createCarePlan(title: string, patient: Patient): CarePlan {\n  return {\n    title,\n    resourceType: 'CarePlan',\n    id: shortid.generate(),\n    text: {\n      status: R4.NarrativeStatusKind._generated,\n      div: `<div> Assignment of patient to pathway ${title} </div>`\n    },\n    status: 'active',\n    intent: 'plan',\n    category: [\n      {\n        coding: [\n          {\n            system: 'http://hl7.org/fhir/us/core/CodeSystem/careplan-category',\n            code: 'assess-plan'\n          }\n        ]\n      }\n    ],\n    subject: { reference: `Patient/${patient.id}` }\n  };\n}\n\nexport function getAssignedPathways(\n  patientRecords: DomainResource[],\n  evaluatedPathways: EvaluatedPathway[]\n): string[] {\n  // Get all active CarePlan resource titles\n  const carePlanTitles = (patientRecords.filter(r => r.resourceType === 'CarePlan') as CarePlan[])\n    .filter(r => r.status === 'active')\n    .map(r => r.title);\n\n  // Check to see if any of the pathway names are in carePlanTitles\n  return evaluatedPathways.map(p => p.pathway.name).filter(n => carePlanTitles.includes(n));\n}\n\nexport function pathwayIsAssigned(\n  patientRecords: DomainResource[],\n  pathway: Pathway | undefined\n): boolean {\n  if (!pathway) return false;\n\n  // Get all active CarePlan resource titles\n  const carePlanTitles = (patientRecords.filter(r => r.resourceType === 'CarePlan') as CarePlan[])\n    .filter(r => r.status === 'active')\n    .map(r => r.title);\n\n  return carePlanTitles.includes(pathway.name);\n}\n\nexport function getTNM(mcodeElements: McodeElements): string {\n  const tnm = [\n    mcodeElements['Tumor Category']?.split(' ')[0],\n    mcodeElements['Node Category']?.split(' ')[0],\n    mcodeElements['Metastases Category']?.split(' ')[0]\n  ].join(' ');\n  return tnm === '   ' ? 'Unknown' : tnm;\n}\n\n/**\n * Helper function to retrieve DocumentReference note if one exists.\n * @param condition - the transition condition description for the note\n * @param resources - list of patient resources\n * @return DocumentReference for the transition condition or null if none found\n */\nexport function retrieveNote(\n  condition: string,\n  resources: DomainResource[]\n): DocumentReference | null {\n  const documentReference = resources.find(resource => {\n    if (resource.resourceType !== 'DocumentReference') return false;\n    const documentReference = resource as DocumentReference;\n    if (documentReference.identifier === undefined) return false;\n    for (const identifier of documentReference.identifier) {\n      if (\n        identifier.system === 'pathways.documentreference' &&\n        identifier.value === btoa(condition)\n      )\n        return true;\n    }\n    return false;\n  });\n\n  if (!documentReference) return null;\n\n  return documentReference as DocumentReference;\n}\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { DomainResource } from 'fhir-objects';\nimport { McodeElements } from 'mcode';\ninterface PatientRecordsProviderProps {\n  children: ReactNode;\n  value: PatientRecordsContextInterface;\n}\n\ninterface PatientRecordsContextInterface {\n  patientRecords: DomainResource[];\n  setPatientRecords: Function;\n  evaluatePath: boolean;\n  setEvaluatePath: (value: boolean) => void;\n  mcodeRecords: McodeElements;\n  setMcodeRecords: (value: DomainResource[]) => void;\n}\n\nexport const PatientRecordsContext = createContext<PatientRecordsContextInterface>({\n  patientRecords: [],\n  setPatientRecords: (): void => {\n    return;\n  },\n  evaluatePath: true,\n  setEvaluatePath: (): void => {\n    return;\n  },\n  mcodeRecords: {},\n  setMcodeRecords: (): void => {\n    return;\n  }\n});\n\nexport const PatientRecordsProvider: FC<PatientRecordsProviderProps> = ({ children, value }) => {\n  return <PatientRecordsContext.Provider value={value}>{children}</PatientRecordsContext.Provider>;\n};\n\nexport const usePatientRecords = (): PatientRecordsContextInterface =>\n  useContext(PatientRecordsContext);\n","import React, { FC, useCallback } from 'react';\nimport Select from 'react-select';\n\nimport styles from './DropDown.module.scss';\nimport { Option } from 'option';\nimport { pathwayIsAssigned } from 'utils/fhirUtils';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { Button } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThList, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\ninterface Props {\n  label?: string;\n  id: string;\n  visible: boolean;\n  options: Array<Option>;\n  onChange?: (value: Option | ReadonlyArray<Option> | null) => void;\n  selectedValue: Option | ReadonlyArray<Option> | null;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst DropDown: FC<Props> = ({\n  options,\n  label,\n  id,\n  visible,\n  onChange,\n  selectedValue,\n  setSelectPathway\n}: Props) => {\n  const { patientRecords } = usePatientRecords();\n  const { evaluatedPathway, assignPathway, unassignPathway } = usePathwayContext();\n  const onChangeCallback = useCallback(\n    (value: Option | ReadonlyArray<Option> | null | undefined) => {\n      if (onChange) onChange(value == null ? null : value);\n    },\n    [onChange]\n  );\n\n  const assigned = pathwayIsAssigned(patientRecords, evaluatedPathway?.pathway);\n\n  const formatOptionLabel = (option: Readonly<Option>): object => (\n    <>\n      {option.label}\n      {pathwayIsAssigned(patientRecords, option.value.pathway) && (\n        <FontAwesomeIcon icon={faCheckCircle} className={styles.check} />\n      )}\n    </>\n  );\n\n  if (visible)\n    return (\n      <div className={styles.dropdown}>\n        <div>\n          <label htmlFor={id}>{label}</label>\n          <Button\n            onClick={(): void => {\n              setSelectPathway(true);\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faThList} />}\n          >\n            Explore\n          </Button>\n          <Button\n            onClick={(): void => {\n              if (evaluatedPathway?.pathway) {\n                assigned\n                  ? unassignPathway(evaluatedPathway.pathway.name)\n                  : assignPathway(evaluatedPathway.pathway.name);\n              } else {\n                alert('Unable to perform action. No pathway is selected.');\n              }\n            }}\n            variant=\"contained\"\n            color={assigned ? 'secondary' : 'primary'}\n            startIcon={<FontAwesomeIcon icon={assigned ? faTimesCircle : faCheckCircle} />}\n          >\n            {assigned ? 'Unassign' : 'Assign'}\n          </Button>\n        </div>\n        <Select\n          classNamePrefix=\"DropDown\"\n          inputId={id}\n          value={selectedValue}\n          onChange={onChangeCallback}\n          options={options}\n          aria-label={label}\n          formatOptionLabel={formatOptionLabel}\n        />\n      </div>\n    );\n  else return <div></div>;\n};\n\nexport default DropDown;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport PatientSnapshot from 'components/PatientSnapshot';\nimport DropDown from 'components/DropDown';\nimport styles from './Navigation.module.scss';\nimport { EvaluatedPathway } from 'pathways-model';\nimport { Option } from 'option';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst useStyles = makeStyles(\n  theme => ({\n    navigation: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'Navigation' }\n);\n\ninterface Props {\n  evaluatedPathways: EvaluatedPathway[];\n  selectPathway: boolean;\n  setSelectPathway: (flag: boolean) => void;\n  onBack?: () => void;\n}\n\nconst Navigation: FC<Props> = ({ evaluatedPathways, selectPathway, setSelectPathway, onBack }) => {\n  const classes = useStyles();\n  const pathwayCtx = usePathwayContext();\n  const pathway = pathwayCtx.evaluatedPathway?.pathway;\n  const value =\n    pathway === undefined ? null : { label: pathway.name, value: pathwayCtx.evaluatedPathway };\n\n  const onChangeHandler = (pathwayOption: Option | ReadonlyArray<Option> | null): void => {\n    if (pathwayOption !== null && 'value' in pathwayOption) {\n      pathwayCtx.setEvaluatedPathway(pathwayOption.value);\n    }\n  };\n\n  const pathwayOptions = evaluatedPathways.map(evaluatedPathway => ({\n    label: evaluatedPathway.pathway.name,\n    value: evaluatedPathway\n  }));\n\n  return (\n    <nav className={clsx(styles.navigation, classes.navigation)}>\n      <div className={styles.navigation__leftPanel}>\n        {onBack && (\n          <FontAwesomeIcon\n            icon={faChevronLeft}\n            className={styles.navigation__back}\n            onClick={onBack}\n          />\n        )}\n\n        <PatientSnapshot />\n      </div>\n\n      <div className={styles.navigation__rightPanel}>\n        <DropDown\n          label=\"Pathway:\"\n          id=\"patient-view\"\n          visible={!selectPathway}\n          options={pathwayOptions}\n          selectedValue={value}\n          setSelectPathway={setSelectPathway}\n          onChange={onChangeHandler}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","const ALL_RESOURCES_PATIENT_REFERENCE = [\n  'ReferralRequest:patient',\n  'DocumentManifest:patient',\n  'Goal:patient',\n  'Consent:patient',\n  'DocumentReference:patient',\n  'ImagingManifest:patient',\n  'RiskAssessment:patient',\n  'CareTeam:patient',\n  'ImagingStudy:patient',\n  'FamilyMemberHistory:patient',\n  'Encounter:patient',\n  'DeviceRequest:patient',\n  'AllergyIntolerance:patient',\n  'CarePlan:patient',\n  'EpisodeOfCare:patient',\n  'Procedure:patient',\n  'List:patient',\n  'Immunization:patient',\n  'VisionPrescription:patient',\n  'ProcedureRequest:patient',\n  'Flag:patient',\n  'Observation:patient',\n  'DiagnosticReport:patient',\n  'NutritionOrder:patient',\n  'Condition:patient',\n  'Composition:patient',\n  'DetectedIssue:patient',\n  'SupplyDelivery:patient',\n  'ClinicalImpression:patient',\n  'DeviceUseStatement:patient',\n  'Task:subject',\n  'Task:requester',\n  'Task:patient',\n  'Task:owner',\n  'Task:focus',\n  'Task:based-on',\n  'SupplyRequest:requester',\n  'Specimen:subject',\n  'Specimen:patient',\n  'ServiceDefinition:successor',\n  'ServiceDefinition:predecessor',\n  'ServiceDefinition:depends-on',\n  'ServiceDefinition:derived-from',\n  'ServiceDefinition:composed-of',\n  'Sequence:patient',\n  'Schedule:actor',\n  'RiskAssessment:subject',\n  'ResearchSubject:patient',\n  'ResearchSubject:individual',\n  'RequestGroup:subject',\n  'RequestGroup:participant',\n  'RequestGroup:patient',\n  'RequestGroup:definition',\n  'RelatedPerson:patient',\n  'ReferralRequest:subject',\n  'ReferralRequest:requester',\n  'QuestionnaireResponse:subject',\n  'QuestionnaireResponse:source',\n  'QuestionnaireResponse:patient',\n  'QuestionnaireResponse:author',\n  'Provenance:target',\n  'Provenance:entity-ref',\n  'Provenance:patient',\n  'Provenance:agent',\n  'ProcessResponse:request',\n  'ProcedureRequest:subject',\n  'ProcedureRequest:replaces',\n  'ProcedureRequest:performer',\n  'ProcedureRequest:based-on',\n  'Procedure:subject',\n  'Procedure:performer',\n  'PlanDefinition:successor',\n  'PlanDefinition:predecessor',\n  'PlanDefinition:derived-from',\n  'PlanDefinition:depends-on',\n  'PlanDefinition:composed-of',\n  'Person:patient',\n  'Person:link',\n  'PaymentNotice:response',\n  'PaymentNotice:request',\n  'Patient:link',\n  'Observation:subject',\n  'Observation:performer',\n  'MessageHeader:focus',\n  'MedicationStatement:source',\n  'MedicationStatement:subject',\n  'MedicationRequest:subject',\n  'MedicationRequest:requester',\n  'MedicationDispense:subject',\n  'MedicationDispense:receiver',\n  'MedicationDispense:performer',\n  'MedicationAdministration:subject',\n  'MedicationRequest:patient',\n  'MedicationAdministration:patient',\n  'MedicationStatement:patient',\n  'MedicationDispense:patient',\n  'MedicationAdministration:performer',\n  'Media:subject',\n  'Media:patient',\n  'MeasureReport:patient',\n  'Measure:successor',\n  'Measure:predecessor',\n  'Measure:derived-from',\n  'Measure:depends-on',\n  'Measure:composed-of',\n  'List:subject',\n  'List:item',\n  'List:source',\n  'Library:successor',\n  'Library:predecessor',\n  'Library:derived-from',\n  'Library:composed-of',\n  'Library:depends-on',\n  'ImplementationGuide:resource',\n  'ImmunizationRecommendation:patient',\n  'ImagingManifest:author',\n  'GuidanceResponse:subject',\n  'GuidanceResponse:patient',\n  'Group:member',\n  'Goal:subject',\n  'Flag:subject',\n  'Flag:author',\n  'ExplanationOfBenefit:patient',\n  'ExplanationOfBenefit:payee',\n  'EnrollmentRequest:subject',\n  'EnrollmentRequest:patient',\n  'Encounter:subject',\n  'EligibilityRequest:patient',\n  'DocumentReference:subject',\n  'DocumentReference:related-ref',\n  'DocumentReference:author',\n  'DocumentManifest:subject',\n  'DocumentManifest:related-ref',\n  'DocumentManifest:content-ref',\n  'DocumentManifest:recipient',\n  'DiagnosticReport:subject',\n  'DocumentManifest:author',\n  'DeviceUseStatement:subject',\n  'DeviceRequest:subject',\n  'DeviceRequest:priorrequest',\n  'DeviceRequest:performer',\n  'DeviceRequest:based-on',\n  'Device:patient',\n  'DetectedIssue:implicated',\n  'Coverage:subscriber',\n  'Coverage:policy-holder',\n  'Coverage:payor',\n  'Contract:term-topic',\n  'Coverage:beneficiary',\n  'Contract:subject',\n  'Contract:signer',\n  'Contract:patient',\n  'Contract:agent',\n  'Consent:data',\n  'Consent:consentor',\n  'Consent:actor',\n  'Condition:subject',\n  'Condition:evidence-detail',\n  'Condition:asserter',\n  'Composition:subject',\n  'Composition:entry',\n  'Composition:author',\n  'Composition:attester',\n  'CommunicationRequest:subject',\n  'CommunicationRequest:sender',\n  'CommunicationRequest:requester',\n  'CommunicationRequest:recipient',\n  'CommunicationRequest:patient',\n  'CommunicationRequest:based-on',\n  'Communication:subject',\n  'Communication:recipient',\n  'Communication:sender',\n  'Communication:patient',\n  'Communication:part-of',\n  'Communication:based-on',\n  'ClinicalImpression:subject',\n  'ClaimResponse:patient',\n  'Claim:payee',\n  'Claim:patient',\n  'ChargeItem:subject',\n  'ChargeItem:patient',\n  'ChargeItem:participant-actor',\n  'ChargeItem:enterer',\n  'CareTeam:subject',\n  'CareTeam:participant',\n  'CarePlan:performer',\n  'CarePlan:subject',\n  'BodySite:patient',\n  'Basic:subject',\n  'Basic:patient',\n  'Basic:author',\n  'AuditEvent:patient',\n  'AuditEvent:entity',\n  'AuditEvent:agent',\n  'AppointmentResponse:patient',\n  'AppointmentResponse:actor',\n  'Appointment:patient',\n  'Appointment:actor',\n  'AllergyIntolerance:recorder',\n  'AllergyIntolerance:asserter',\n  'AdverseEvent:subject',\n  'AdverseEvent:recorder',\n  'ActivityDefinition:successor',\n  'ActivityDefinition:predecessor',\n  'ActivityDefinition:depends-on',\n  'ActivityDefinition:derived-from',\n  'ActivityDefinition:composed-of',\n  'Account:subject',\n  'Account:patient'\n];\n\nexport { ALL_RESOURCES_PATIENT_REFERENCE };\n","import { ALL_RESOURCES_PATIENT_REFERENCE } from './patient';\n\nimport { mappers } from 'fhir-mapper';\nimport config from './ConfigManager';\n\nconst mapperName = config.get('mapper');\nconst MapperClass = mappers[mapperName];\nconst mapperInstance = MapperClass ? new MapperClass() : null;\n\nconst applyMapping = (bundle) => {\n  if (mapperInstance && bundle)\n  {\n    bundle = mapperInstance.execute(bundle);\n  }\n  return bundle;\n}\n\n/**\n * There are slight discrepencies between the $everything, revinclude, and manual methods that affect the resources that might be returned\n * @param {Object} client - the fhir client\n */\nfunction getPatientRecord(client) {\n  return client.request(`/metadata`).then(statement => {\n    if (\n      statement.rest[0].operation.find(\n        e => (e.definition.reference || e.definition) === 'OperationDefinition/Patient--everything'\n      )\n    ) {\n      // supports patient everything\n      return getEverything(client).then(bundle => applyMapping(bundle));\n    } else {\n      console.log('Cannot use $everything, using reverse includes instead');\n      const supportedResources = [];\n      let revIncludeResources = [];\n      statement.rest[0].resource.forEach(resource => {\n        if (resource.type === 'Patient') {\n          if (resource.searchRevInclude) {\n            revIncludeResources = resource.searchRevInclude;\n          }\n        } else if (resource.searchInclude) {\n          const filters = resource.searchInclude.filter(target => {\n            return target === `${resource.type}:patient` || target === `${resource.type}:subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(filters[0]);\n          }\n        } else if (resource.searchParam) {\n          const filters = resource.searchParams.filter(target => {\n            return target.name === `patient` || target.name === `subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(`${resource.type}:${filters[0].name}`);\n          }\n        }\n      });\n      if (revIncludeResources.length > 0) {\n        return getEverythingRevInclude(client, revIncludeResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else if (supportedResources.length > 0) {\n        return getEverythingRevInclude(client, supportedResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else {\n        console.log('Cannot use reverse includes, retrieving all resources manually from predefined list');\n        return getEverythingManually(client, ALL_RESOURCES_PATIENT_REFERENCE).then(bundle => applyMapping(bundle));\n      }\n    }\n  });\n}\n\n/**\n * Uses the $everything operation.  The server takes care of constructing the bundle that gets returned, so\n * it is generally not possible to know how it is deciding what resources to send.\n */\nfunction getEverything(client) {\n  return client.request(`/Patient/${client.patient.id}/$everything`, { flat: true, pageLimit: 0 }).then(bundle => {\n    return bundle;\n  });\n}\n\n/**\n * Uses regular FHIR search queries on every resource that is supported and can refer to a patient.\n * Which resources it queries is dependent on info available in the Capability Statement, and\n * it only provides a one layer deep search, so the results might be different from $everything.\n */\nfunction getEverythingManually(client, supportedResources) {\n  supportedResources.push('Patient:_id');\n  const requests = [];\n  supportedResources.forEach(resource => {\n    resource = resource.split(':');\n    const request = client\n      .request(`${resource[0]}?${resource[1]}=${client.patient.id}`, { flat: true, pageLimit: 0 })\n      .then(result => {\n        if (result.length > 0) {\n          return result;\n        }\n      })\n      .catch(error => {\n        console.log(`failed to fetch ${resource}`);\n        console.error(error);\n      });\n    requests.push(request);\n  });\n\n  return Promise.all(requests).then(results => {\n    const bundle = results\n      .filter(x => {\n        return x;\n      })\n      .flat();\n    return bundle;\n  });\n}\n\n/**\n * Uses the _revinclude FHIR search parameter to request the patient resource and any resource that refers to it.\n * The list of resources it checks is retrieved from the Capability Statement.  It is slightly better than the manual\n * method since it does everything in one request.\n */\nfunction getEverythingRevInclude(client, supportedResources, onError) {\n  const query = supportedResources.join('&_revinclude=');\n  return client\n    .request(`/Patient?_id=${client.patient.id}&_revinclude=${query}`, { flat: true })\n    .then(result => {\n      return result;\n    })\n    .catch(error => {\n      console.log('Reverse Include query failed, manually fetching resources instead.');\n      console.error(error);\n      onError(client, supportedResources);\n    });\n}\n\nexport { getPatientRecord };\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwaysClient } from 'pathways-client';\n\ninterface FHIRClientProviderProps {\n  client: PathwaysClient; // TODO: fhirclient.Client\n  children: ReactNode;\n}\n\nexport const FHIRClientContext = createContext({ patient: {} });\n\nexport const FHIRClientProvider: FC<FHIRClientProviderProps> = ({ client, children }) => (\n  <FHIRClientContext.Provider value={client}>{children}</FHIRClientContext.Provider>\n);\n\nexport const useFHIRClient = (): PathwaysClient => useContext(FHIRClientContext);\n","import { Pathway, PathwayNode } from 'pathways-model';\n\nexport interface CqlObject {\n  main: string;\n  libraries: Library;\n}\n\nexport interface Library {\n  [name: string]: string; // should probably have an object for expected ELM structure.\n}\nexport function getFixture(filename: string): Promise<string> {\n  return fetch(`./static/cql/${filename}`).then(cql => cql.text());\n}\n\n/**\n * Function to format each block from the pathway in CQL format\n * @param cqlBlock - block of CQL code from the pathway\n * @param resourceName - Name of the CQL resource block to be defined\n * @return the CQL code formatted pretty with the define line\n */\nfunction cqlFormat(cqlBlock: string, resourceName: string): string {\n  let formattedBlock = '';\n\n  // Definition of CQL block\n  const line1 = 'define \"' + resourceName + '\":\\n\\t';\n\n  // Build the formatted block\n  formattedBlock = line1.concat(cqlBlock);\n  return formattedBlock;\n}\n\n/**\n * Helper function to add the cql block to the completed cql\n * with the correct formatting\n * @param cql - complete cql string\n * @param cqlBlock - current cql block to append to the cql\n * @return the cql with the cql block appended correctly\n */\nfunction cqlAdd(cql: string, cqlBlock: string): string {\n  return cql.concat('\\n', '\\n', cqlBlock);\n}\n\n/**\n * Helper function to determine if a node has a conditional transition\n * @param node - the JSON object of the desired node on the pathway\n * @return true if node is a conditional transition and false\n *                   otherwise\n */\nfunction isConditional(node: PathwayNode): boolean {\n  if ('transitions' in node) {\n    return node.transitions.length > 1 ? true : false;\n  } else return false;\n}\n\n/**\n * Function to extract the CQL code from each node in the pathway and build\n * the CQL code to execute\n * @param pathway - the JSON object of the entire pathway\n * @return a string of the CQL code for the navigational nodes in the pathway\n */\nexport function extractNavigationCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const nodeKey in pathway.nodes) {\n      const node = pathway.nodes[nodeKey];\n      if ('cql' in node) {\n        const cqlBlock1 = node.cql;\n        const nextBlock1 = cqlFormat(cqlBlock1, nodeKey);\n        cql = cqlAdd(cql, nextBlock1);\n      } else if (isConditional(node)) {\n        for (const transition of node.transitions) {\n          const condition = transition.condition;\n          if (condition) {\n            const nextBlock2 = cqlFormat(condition.cql, condition.description);\n            cql = cqlAdd(cql, nextBlock2);\n          }\n        }\n      }\n    }\n\n    return cql;\n  });\n}\n\n/**\n * Extract the CQL statements from the `preconditions` section of the pathway\n * into a snippet ready to be converted to ELM.\n * @param pathway - the entire pathway object\n * @return a string of the CQL for the preconditions in the pathway\n */\nexport function extractPreconditionCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const precondition of pathway.preconditions) {\n      const cqlBlock1 = precondition.cql;\n      const nextBlock1 = cqlFormat(cqlBlock1, precondition.elementName);\n      cql = cqlAdd(cql, nextBlock1);\n    }\n\n    return cql;\n  });\n}\n","// sample header= \"multipart/form-data;boundary=Boundary_1\"\n// get the part after \"boundary=\" and before any subsequent ;\nexport const extractMultipartBoundary = /.*;boundary=(Boundary.*);?.*/g;\n\nexport const extractMultipartFileName = /Content-Disposition: form-data; name=\"([^\"]+)\"/;\n\n// eveything between { } including newlines. [^] is like . but matches newline\nexport const extractJSONContent = /(\\{[^]*\\})/;\n\nexport const extractCQLInclude = /include .* called (.*)/g;\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","/* eslint-disable max-len */\nimport { ElmResults } from 'pathways-model';\nimport { Library, Executor, Repository } from 'cql-execution';\nimport { PatientSource } from 'cql-exec-fhir';\nimport { Bundle } from 'fhir-objects';\n/**\n * Engine function that takes in a patient file (JSON) and an ELM file, running the patient against the ELM file\n * @param patientRecord - FHIR bundle containing patient's record\n * @param elm - ELM structure (previosuly converted from CQL) on which the patient will be run.\n * @return returns a JSON object which is the result of analyzing the patient against the elm file\n */\nexport default function executeElm(\n  patientRecord: Bundle,\n  elm: object,\n  libraries?: object\n): ElmResults {\n  let lib;\n  if (libraries) {\n    lib = new Library(elm, new Repository(libraries));\n  } else {\n    lib = new Library(elm);\n  }\n\n  const executor = new Executor(lib);\n  const psource = new PatientSource.FHIRv400(patientRecord);\n  psource.loadBundles(patientRecord);\n  const result = executor.exec(psource);\n  return result;\n}\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport {\n  Pathway,\n  PathwayResults,\n  PatientData,\n  PreconditionResult,\n  DocumentationResource,\n  PathwayNode,\n  ActionNode,\n  PreconditionResultItem,\n  Documentation\n} from 'pathways-model';\nimport { DocumentReference, DomainResource } from 'fhir-objects';\nimport { retrieveNote } from 'utils/fhirUtils';\n\ninterface NodeData {\n  documentation: Documentation;\n  nextNodes: string[];\n  status: string;\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the patient's pathway\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns PathwayResults describing\n */\nexport function pathwayData(\n  pathway: Pathway,\n  patientData: PatientData,\n  resources: DomainResource[]\n): PathwayResults {\n  const startNode = 'Start';\n  const patientDocumentation: { [key: string]: Documentation } = {};\n\n  let currentNodes = [startNode];\n  let nodeData = nextNode(pathway, patientData, startNode, resources);\n  while (nodeData !== null) {\n    if (nodeData.documentation === null) break;\n    const documentation = nodeData.documentation;\n    documentation.onPath = true;\n    (documentation as DocumentationResource).resource = retrieveResource(\n      nodeData.documentation,\n      resources\n    );\n    patientDocumentation[nodeData.documentation.node] = { ...documentation };\n    if (nodeData.nextNodes.length === 0) break;\n    else if (nodeData.nextNodes.length === 1) {\n      currentNodes = nodeData.nextNodes;\n      nodeData = nextNode(pathway, patientData, nodeData.nextNodes[0], resources);\n    } else {\n      // There are multiple transitions\n      // Check if any of them have been done\n      currentNodes = [];\n      const completedNodes: string[] = [];\n      for (const nodeKey of nodeData.nextNodes) {\n        const documentReference = retrieveNote(pathway.nodes[nodeKey].label, resources);\n        if (!documentReference && (!patientData[nodeKey] || !patientData[nodeKey].length)) {\n          currentNodes.push(nodeKey);\n        } else {\n          completedNodes.push(nodeKey);\n        }\n      }\n\n      if (completedNodes.length !== 0) {\n        currentNodes = completedNodes;\n      } else if (currentNodes.length === 0) {\n        currentNodes = nodeData.nextNodes;\n        break;\n      }\n\n      // TODO: there is a possibility multiple nodes match\n      const currentNodeKey = completedNodes.length ? completedNodes[0] : currentNodes[0];\n      nodeData = nextNode(pathway, patientData, currentNodeKey, resources);\n    }\n  }\n  return {\n    patientId: patientData.Patient.id.value,\n    currentNodes: currentNodes,\n    documentation: getAllDocumentation(pathway, patientData, resources, patientDocumentation)\n  };\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the pathway preconditions\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns PreconditionResult containing the expected and actual value for one data element\n */\nexport function preconditionData(pathway: Pathway, patientData: PatientData): PreconditionResult {\n  const resultItems: PreconditionResultItem[] = [];\n\n  let matches = 0;\n  pathway.preconditions.forEach(precondition => {\n    let evaluationResult = patientData[precondition.elementName];\n    if (Array.isArray(evaluationResult)) {\n      evaluationResult = evaluationResult[0]; // TODO: add functionality for multiple resources\n    }\n    let actual = 'unknown';\n    let match = false;\n\n    if (evaluationResult) {\n      actual = evaluationResult['value'];\n      match = evaluationResult['match'];\n    }\n\n    if (match) matches += 1;\n\n    const preconditionResultItem = {\n      elementName: precondition.elementName,\n      expected: precondition.expected,\n      actual,\n      match\n    };\n\n    resultItems.push(preconditionResultItem);\n  });\n\n  return {\n    pathwayName: pathway.name,\n    matches: matches,\n    preconditionResultItems: resultItems\n  };\n}\n\n/**\n * Helper function to obtain documentation for any nodes not on the path\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient\n * @param resources - the patient resources\n * @param patientDocumentation - the documentation dictionary from nodes on the patient path\n */\nfunction getAllDocumentation(\n  pathway: Pathway,\n  patientData: PatientData,\n  resources: DomainResource[],\n  patientDocumentation: { [key: string]: Documentation }\n): { [key: string]: Documentation } {\n  const nodesWithDocumentation = Object.values(patientDocumentation)\n    .filter(doc => doc.onPath)\n    .map(doc => doc.node);\n  for (const [nodeKey, node] of Object.entries(pathway.nodes)) {\n    if (!nodesWithDocumentation.includes(nodeKey)) {\n      if ('action' in node) {\n        // If action check for resource\n        if (patientData[nodeKey] && patientData[nodeKey].length) {\n          const documentation = patientData[nodeKey][0];\n          documentation.node = nodeKey;\n          documentation.onPath = false;\n          (documentation as DocumentationResource).resource = retrieveResource(\n            documentation,\n            resources\n          );\n          patientDocumentation[nodeKey] = { ...documentation };\n        }\n      } else {\n        // Tranisition element must check each transition in patient data for existence\n        for (const transition of (node as PathwayNode).transitions) {\n          if (!transition.condition) continue;\n\n          if (\n            patientData[transition.condition.description] &&\n            patientData[transition.condition.description].length\n          ) {\n            const documentation = patientData[transition.condition.description][0];\n            documentation.node = nodeKey;\n            documentation.onPath = false;\n            (documentation as DocumentationResource).resource = retrieveResource(\n              documentation,\n              resources\n            );\n            patientDocumentation[nodeKey] = { ...documentation };\n          } else {\n            // Check for document reference note\n            const documentReference = retrieveNote(transition.condition.description, resources);\n            if (documentReference) {\n              const documentation = {\n                resourceType: 'DocumentReference',\n                status: documentReference.status,\n                id: documentReference.id,\n                node: nodeKey,\n                onPath: false,\n                resource: documentReference\n              };\n              patientDocumentation[nodeKey] = { ...documentation };\n            }\n          }\n        }\n      }\n    }\n  }\n  return patientDocumentation;\n}\n\n/**\n * Helper function to format the documentation and include the related node\n * @param resource - the resource returned by the CQL execution\n * @param node - the current node name\n * @return the JSON resource with the node property set\n */\nfunction formatDocumentation(resource: DocumentationResource, node: string): DocumentationResource {\n  resource.node = node;\n  return resource;\n}\n\n/**\n * Helper function to determine whether the action represented by\n * the given resource has been \"completed\", and the pathway execution should advance.\n * @param resource - the FHIR resource for a given action\n * @return boolean as to whether this resource is complete\n */\nfunction isComplete(resource: DocumentationResource): boolean {\n  // placeholder for more complex logic if needed.\n  // as of today MedicationRequest and ServiceRequest should both be \"completed\"\n  // (MedicationRequest can also be \"stopped\" though that indicates\n  // \"Actions implied by the prescription are to be permanently halted, **before all of them occurred.**\")\n  return resource.status === 'completed';\n}\n\n/**\n * Helper function to determine whether current node should be skipped and pathway execution should advance\n * Checks for DocumentReference resource with node label and advance\n * @param currentNode current node\n * @param resources list of patient resources\n * @return boolean as to whether pathway execution should advance\n */\nfunction shouldAdvance(currentNode: PathwayNode, resources: DomainResource[]): boolean {\n  return resources.some(r => {\n    if (r.resourceType !== 'DocumentReference') return false;\n    const content = (r as DocumentReference).content[0].attachment.data;\n    if (content) {\n      const convertedContent = atob(content);\n      return convertedContent === `${currentNode.label} - Advance`;\n    }\n\n    return false;\n  });\n}\n\n/**\n * Helper function to select the transition node\n * @param resource - the resource returned by the CQL execution\n * @param currentNode - the current node\n * @param resources list of patient resources\n * @return the next node name or null\n */\nfunction formatNextNode(\n  resource: DocumentationResource,\n  currentNode: PathwayNode,\n  resources: DomainResource[]\n): string[] {\n  return (shouldAdvance(currentNode, resources) || isComplete(resource)) &&\n    currentNode.transitions.length !== 0\n    ? [currentNode.transitions[0].transition]\n    : [];\n}\n\n/**\n * Determine the nextNode in a conditional transition node\n * @param patientData - JSON object representing the data on a patient\n * @param currentNode - the current node\n * @param currentNodeKey - the name of the current node\n * @return the next node\n */\nfunction getConditionalNextNode(\n  patientData: PatientData,\n  currentNode: PathwayNode,\n  currentNodeKey: string,\n  resources: DomainResource[]\n): NodeData | null {\n  const documentation: DocumentationResource[] = [];\n  const nextNodes: string[] = [];\n  for (const transition of currentNode.transitions) {\n    if (transition.condition) {\n      let currentTransitionDocumentation: DocumentationResource | null = null;\n      if (patientData[transition.condition.description]?.length)\n        // TODO: add functionality for multiple resources\n        currentTransitionDocumentation = patientData[transition.condition.description][0];\n      else {\n        const documentReference = retrieveNote(transition.condition.description, resources);\n        if (documentReference) {\n          currentTransitionDocumentation = {\n            resourceType: 'DocumentReference',\n            id: documentReference.id ? documentReference.id : 'unknown',\n            status: documentReference.status,\n            node: currentNodeKey,\n            resource: documentReference,\n            onPath: true\n          };\n        }\n      }\n\n      if (currentTransitionDocumentation) {\n        nextNodes.push(transition.transition);\n        documentation.push(currentTransitionDocumentation);\n      }\n    }\n  }\n\n  if (nextNodes.length && documentation.length)\n    return {\n      nextNodes: nextNodes,\n      documentation: formatDocumentation(documentation[0], currentNodeKey),\n      status: documentation[0].status\n    };\n  else return null;\n}\n\n/**\n * Helper function to traverse the pathway and determine the next node in a patients pathway.\n * For actions this function will also verify the move is valid by the resource status\n * @param pathway - JSON object representing the complete pathway\n * @param patientData - JSON object representing the data on a patient\n * @param currentNodeKey - the name of the current node in the traversal\n * @return returns object with the next node, the status, and the evidenvce\n */\nfunction nextNode(\n  pathway: Pathway,\n  patientData: PatientData,\n  currentNodeKey: string,\n  resources: DomainResource[]\n): NodeData | null {\n  const currentNode: PathwayNode | ActionNode = pathway.nodes[currentNodeKey];\n  if ('action' in currentNode) {\n    let resource = patientData[currentNodeKey];\n    if (resource?.length) {\n      resource = resource[0]; // TODO: add functionality for multiple resources\n      return {\n        nextNodes: formatNextNode(resource, currentNode, resources),\n        documentation: formatDocumentation(resource, currentNodeKey),\n        status: 'status' in resource ? resource.status : 'unknown'\n      };\n    } else {\n      // Check for note posted on decline\n      const documentReference = retrieveNote(currentNode.label, resources);\n      if (documentReference) {\n        const doc = {\n          resourceType: 'DocumentReference',\n          id: documentReference.id ? documentReference.id : 'unknown',\n          status: 'status' in documentReference ? documentReference.status : 'unknown',\n          node: currentNodeKey,\n          resource: documentReference,\n          onPath: true\n        };\n        return {\n          nextNodes: formatNextNode(doc, currentNode, resources),\n          documentation: formatDocumentation(doc, currentNodeKey),\n          status: doc.status\n        };\n      }\n      // Action exists but has no matching resource in patientData\n      return null;\n    }\n  } else if (currentNode.transitions.length === 1) {\n    return {\n      nextNodes: [currentNode.transitions[0].transition],\n      documentation: { node: currentNodeKey, onPath: true },\n      status: 'completed'\n    };\n  } else if (currentNode.transitions.length > 1) {\n    return getConditionalNextNode(patientData, currentNode, currentNodeKey, resources);\n  } else return null;\n}\n\n/**\n * Helper function to retrieve a resource for documentation if one exists.\n * @param doc - the docuumentation to find a resource for\n * @param resources - the list of patient resources\n * @return DomainResource for the documentation or undefined if none found\n */\nfunction retrieveResource(\n  doc: Documentation,\n  resources: DomainResource[]\n): DomainResource | undefined {\n  let resource: DomainResource | undefined = undefined;\n  if ('resourceType' in doc && resources) {\n    resource = resources.find(resource => {\n      return (\n        resource.resourceType === (doc as DocumentationResource).resourceType &&\n        resource.id === (doc as DocumentationResource).id\n      );\n    });\n  }\n\n  return resource;\n}\n","import { extractNavigationCQL, extractPreconditionCQL, CqlObject, Library } from './cql-extractor';\nimport convertCQL, { convertBasicCQL, ElmObject } from './cql-to-elm';\nimport executeElm from './elm-executor';\nimport { pathwayData, preconditionData } from './output-results';\nimport {\n  Pathway,\n  PatientData,\n  PathwayResults,\n  ElmResults,\n  PreconditionResult\n} from 'pathways-model';\nimport { getFixture } from './cql-extractor';\nimport { extractCQLInclude } from 'utils/regexes';\nimport { DomainResource, Bundle } from 'fhir-objects';\nfunction instanceOfElmObject(object: object): object is ElmObject {\n  return 'main' in object;\n}\n\n/**\n * Function to run each of the engine files in series to execute\n * the automated pathway\n * @param patientRecord - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return Information on the patient's current status within the\n *                  clinical pathway\n */\nexport function evaluatePatientOnPathway(\n  patientRecord: Bundle,\n  pathway: Pathway,\n  resources: DomainResource[]\n): Promise<PathwayResults> {\n  const patientDataPromise = pathway.elm?.navigational\n    ? processELMCommon(patientRecord, pathway.elm.navigational)\n    : extractNavigationCQL(pathway).then(cql => processCQLCommon(patientRecord, cql));\n\n  return patientDataPromise.then(patientData => pathwayData(pathway, patientData, resources));\n}\n\n/**\n * Evaluate the pathway preconditions against the given patient.\n * @param patientRecord - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return a list of PreconditionResults, each containing\n *         the expected value and actual value for one precondition item\n */\nexport function evaluatePathwayPreconditions(\n  patientRecord: Bundle,\n  pathway: Pathway\n): Promise<PreconditionResult> {\n  const patientDataPromise = pathway.elm?.preconditions\n    ? processELMCommon(patientRecord, pathway.elm.preconditions)\n    : extractPreconditionCQL(pathway).then(cql => processCQLCommon(patientRecord, cql));\n\n  return patientDataPromise.then(patientData => preconditionData(pathway, patientData));\n}\n\n/**\n * Common logic to execute the given CQL against the given Patient.\n * @param patientRecord - Patient's record as FHIR data\n * @param cql - aggregated CQL from a pathway\n * @return the raw, unprocessed patientResults\n *         derived from executing the CQL against the given patient\n */\nfunction processCQLCommon(patientRecord: Bundle, cql: string): Promise<PatientData> {\n  // Likely need an intermediary step that gathers the CQL files needed\n  // example function gatherCQL\n  return gatherCQL(cql)\n    .then(result => {\n      if (Object.keys(result).length > 0) {\n        // non-empty library\n        const cqlObject: CqlObject = {\n          main: cql,\n          libraries: result\n        };\n        return convertCQL(cqlObject);\n      } else {\n        return convertBasicCQL(cql);\n      }\n    })\n    .then(elm => processELMCommon(patientRecord, elm));\n}\n\n/**\n * Common logic to execute the given ELM against the given Patient.\n * @param patientRecord - Patient's record as FHIR data\n * @param elm - resulting ELM from converting the CQL in a pathway\n * @return the raw, unprocessed patientResults\n *         derived from executing the ELM against the given patient\n */\nfunction processELMCommon(patientRecord: Bundle, elm: object): Promise<PatientData> {\n  // this is not inherently async,\n  // but we wrap it in a promise to make the code cleaner elsewhere\n  return new Promise((resolve, reject) => {\n    let elmResults: ElmResults;\n    if (instanceOfElmObject(elm)) {\n      elmResults = executeElm(patientRecord, elm.main, elm.libraries);\n    } else {\n      elmResults = executeElm(patientRecord, elm);\n    }\n\n    // TODO - update pathwaysData to take multiple patients\n    const patientIds = Object.keys(elmResults.patientResults);\n    const patientData = elmResults.patientResults[patientIds[0]];\n    resolve(patientData);\n  });\n}\n\n// example function that would gather library CQL files\nfunction gatherCQL(cql: string): Promise<Library> {\n  const lib = extractCQLInclude.exec(cql);\n  if (lib) {\n    return getFixture(`${lib[1]}.cql`).then(result => {\n      return new Promise(function(resolve, reject): void {\n        setTimeout(function() {\n          resolve({ FHIRHelpers: result });\n        }, 300);\n      });\n    });\n  } else {\n    return new Promise(function(resolve, reject): void {\n      resolve({});\n    });\n  }\n}\n","import React, { FC, useState, useEffect, useRef, RefObject } from 'react';\nimport { usePatient } from 'components/PatientProvider';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport {\n  AllergiesVisualizer,\n  CarePlansVisualizer,\n  ConditionsVisualizer,\n  EncountersVisualizer,\n  ImmunizationsVisualizer,\n  MedicationsVisualizer,\n  ObservationsVisualizer,\n  PatientVisualizer,\n  ProceduresVisualizer,\n  ReportsVisualizer\n} from 'fhir-visualizers';\nimport { DomainResource } from 'fhir-objects';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faNotesMedical,\n  faChevronLeft,\n  faChevronUp,\n  faChevronDown\n} from '@fortawesome/free-solid-svg-icons';\nimport styles from './PatientRecord.module.scss';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { PreconditionResult } from 'pathways-model';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { evaluatePathwayPreconditions } from 'engine';\nimport { McodeElements } from 'mcode';\n\nconst recordSections = [\n  'Pathway',\n  'Mcode',\n  'Patient',\n  'Condition',\n  'Observation',\n  'DiagnosticReport',\n  'MedicationRequest',\n  'AllergyIntolerance',\n  'CarePlan',\n  'Procedure',\n  'Encounter',\n  'Immunization'\n];\n\nconst groupResourceByType = (\n  patientRecord: ReadonlyArray<DomainResource>\n): ReadonlyMap<string, ReadonlyArray<DomainResource>> => {\n  const map: Map<string, DomainResource[]> = new Map();\n  patientRecord.forEach(resource => {\n    const resourceType = resource.resourceType ?? '';\n    if (recordSections.includes(resourceType)) {\n      const collection = map.get(resourceType);\n      if (!collection) map.set(resourceType, [resource]);\n      else collection.push(resource);\n    }\n  });\n  return map;\n};\n\nconst getResourcesByType = (\n  resourceType: string,\n  groupedResources: ReadonlyMap<string, ReadonlyArray<DomainResource>>\n): ReadonlyArray<DomainResource> => {\n  return groupedResources.get(resourceType) ?? [];\n};\n\ninterface PatientRecordProps {\n  headerElement: RefObject<HTMLDivElement>;\n}\n\ninterface PatientRecordElementProps {\n  recordSection: string;\n  resources: ReadonlyArray<DomainResource>;\n}\n\ninterface VisualizerProps {\n  recordSection: string;\n  resourcesByType: ReadonlyArray<DomainResource>;\n}\n\nconst PatientRecord: FC<PatientRecordProps> = ({ headerElement }) => {\n  const { patientRecords } = usePatientRecords();\n  const recordContainerElement = useRef<HTMLDivElement>(null);\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  const groupedResources = groupResourceByType(patientRecords);\n\n  const expand = (): void => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Set the height of the patient record container\n  useEffect(() => {\n    if (recordContainerElement?.current && headerElement?.current)\n      recordContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  if (isExpanded) {\n    return (\n      <div className={styles.record} ref={recordContainerElement}>\n        <div className={styles.sidebar}>\n          {recordSections.map(recordSection => (\n            <PatientRecordElement\n              recordSection={recordSection}\n              resources={getResourcesByType(recordSection, groupedResources)}\n              key={recordSection}\n            />\n          ))}\n        </div>\n\n        <div className={styles.recordToggle} onClick={expand}>\n          <FontAwesomeIcon icon={faChevronLeft} />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles.record}>\n        <div className={styles.recordToggle} onClick={expand}>\n          <FontAwesomeIcon icon={faNotesMedical} />\n        </div>\n      </div>\n    );\n  }\n};\n\nconst PatientRecordElement: FC<PatientRecordElementProps> = ({ recordSection, resources }) => {\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  const chevron: IconProp = isExpanded ? faChevronUp : faChevronDown;\n  const resourceCount: string = !['Patient', 'Pathway', 'Mcode'].includes(recordSection)\n    ? `(${resources.length})`\n    : '';\n\n  return (\n    <div className={styles.element}>\n      <div className={styles.title} onClick={(): void => setIsExpanded(!isExpanded)}>\n        <div>\n          {recordSection} {resourceCount}\n        </div>\n        <div className={styles.expand}>\n          <FontAwesomeIcon icon={chevron} />\n        </div>\n      </div>\n\n      {isExpanded && (\n        <div className={styles.visualizerContainer}>\n          <Visualizer recordSection={recordSection} resourcesByType={resources} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst Visualizer: FC<VisualizerProps> = ({ recordSection, resourcesByType }) => {\n  const patient = usePatient().patient as fhir.Patient;\n\n  if (recordSection === 'Pathway') return <PathwayVisualizer />;\n  else if (recordSection === 'Mcode') return <McodeVisualizer />;\n  else if (recordSection === 'Patient') return <PatientVisualizer patient={patient} />;\n  else if (recordSection === 'Condition') return <ConditionsVisualizer rows={resourcesByType} />;\n  else if (recordSection === 'Observation')\n    return <ObservationsVisualizer rows={resourcesByType} />;\n  else if (recordSection === 'DiagnosticReport')\n    return <ReportsVisualizer rows={resourcesByType} />;\n  else if (recordSection === 'MedicationRequest')\n    return <MedicationsVisualizer rows={resourcesByType} />;\n  else if (recordSection === 'AllergyIntolerance')\n    return <AllergiesVisualizer rows={resourcesByType} />;\n  else if (recordSection === 'CarePlan') return <CarePlansVisualizer rows={resourcesByType} />;\n  else if (recordSection === 'Procedure') return <ProceduresVisualizer rows={resourcesByType} />;\n  else if (recordSection === 'Encounter') return <EncountersVisualizer rows={resourcesByType} />;\n  else if (recordSection === 'Immunization')\n    return <ImmunizationsVisualizer rows={resourcesByType} />;\n  else return <div>Unsupported Resource</div>;\n};\n\nconst PathwayVisualizer: FC = () => {\n  const { patientRecords } = usePatientRecords();\n  const { evaluatedPathway } = usePathwayContext();\n  const [preconditions, setPreconditions] = useState<PreconditionResult | null>(null);\n\n  useEffect(() => {\n    // Create a Bundle for the CQL engine and check if patientPath needs to be evaluated\n    const patient = {\n      resourceType: 'Bundle',\n      type: 'searchset',\n      entry: patientRecords.map((r: fhir.Resource) => ({ resource: r }))\n    };\n\n    // Evaluate pathway preconditions\n    if (evaluatedPathway) {\n      evaluatePathwayPreconditions(patient, evaluatedPathway.pathway).then(preconditionResult =>\n        setPreconditions(preconditionResult)\n      );\n    }\n  }, [evaluatedPathway, patientRecords]);\n\n  return (\n    <table>\n      <tbody>\n        {preconditions?.preconditionResultItems.map(c => (\n          <tr key={c.elementName}>\n            <td>{c.elementName}</td>\n            <td>{c.actual}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst McodeVisualizer: FC = () => {\n  const { mcodeRecords } = usePatientRecords();\n  type mcodeKey = keyof McodeElements & string;\n  const keysArray: mcodeKey[] = [];\n  for (const key in mcodeRecords) {\n    keysArray.push(key as mcodeKey);\n  }\n  return (\n    <table>\n      <tbody>\n        {keysArray.map(key => {\n          return (\n            <tr key={key}>\n              <td>{key}</td>\n              <td>{mcodeRecords[key] ? mcodeRecords[key] : '-'}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PatientRecord;\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, PathwayNode } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeKeys = Object.keys(pathway.nodes);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeKeys.forEach(nodeKey => {\n    const node: PathwayNode = pathway.nodes[nodeKey];\n    const nodeDimension = nodeDimensions[nodeKey];\n\n    if (nodeDimension) {\n      g.setNode(nodeKey, {\n        label: node.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(nodeKey, {\n        label: node.label,\n        width: node.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    node.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(nodeKey, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeKey of nodeKeys) {\n    const node = g.node(nodeKey);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeKey] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeKey of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeKey], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeKey in nodes) {\n      const node = nodes[nodeKey];\n      coordinates[nodeKey] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeKey the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeKey of graph[rank]) {\n      const node = nodes[nodeKey];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by nodeKey the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeKey - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeKey: string, rank: number): void {\n    try {\n      graph[rank].push(nodeKey);\n    } catch (err) {\n      graph[rank] = [nodeKey];\n    } finally {\n      nodes[nodeKey].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let nodeKey: string;\n    for (nodeKey in pathway.nodes) {\n      nodes[nodeKey] = {\n        label: nodeKey,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.nodes).forEach(nodeKey => {\n      const node: PathwayNode = pathway.nodes[nodeKey];\n\n      node.transitions.forEach(transition => {\n        if (!nodes[nodeKey].children.includes(transition.transition))\n          nodes[nodeKey].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(nodeKey))\n          nodes[transition.transition].parents.push(nodeKey);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant={type === 'decline' ? 'text' : 'contained'}\n      color={type === 'decline' ? 'secondary' : 'primary'}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </Button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { usePatient } from 'components/PatientProvider';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { useFHIRClient } from 'components/FHIRClient';\nimport { createActionDocumentReference, createNoteContent } from 'utils/fhirUtils';\nimport { useNote } from 'components/NoteDataProvider';\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const patient = usePatient().patient as fhir.Patient;\n  const client = useFHIRClient();\n  const { patientRecords, setPatientRecords } = usePatientRecords();\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n  const { note } = useNote();\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n              // Create DocumentReference with selected value and add to patient record\n              if (note) {\n                const noteString = createNoteContent(note, patientRecords, 'completed', selected);\n                const documentReference = createActionDocumentReference(\n                  noteString,\n                  selected,\n                  patient\n                );\n                setPatientRecords([...patientRecords, documentReference]);\n                client?.create?.(documentReference);\n              }\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import React, { FC, ReactNode } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types';\nimport styles from './ReportSection.module.scss';\nimport shortid from 'shortid';\n\ninterface ReportSectionProps {\n  icon: IconDefinition;\n  fields: { name: ReactNode; value: ReactNode }[];\n}\n\nconst ReportSection: FC<ReportSectionProps> = ({ icon, fields }) => {\n  return (\n    <div className={styles.sectionContainer}>\n      <div className={styles.sectionIconContainer}>\n        <FontAwesomeIcon icon={icon} className={styles.icon} />\n      </div>\n      <div className={styles.fieldContainer}>\n        {fields\n          .filter(field => field.name)\n          .map(field => (\n            <ReportField sectionTitle={field.name} value={field.value} key={shortid.generate()} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\ninterface ReportFieldProps {\n  sectionTitle: ReactNode;\n  value: ReactNode;\n}\n\nconst ReportField: FC<ReportFieldProps> = ({ sectionTitle, value }) => {\n  return (\n    <div className={styles.field}>\n      <b>{sectionTitle}: </b>\n      <span>{value}</span>\n    </div>\n  );\n};\n\ninterface PhysicianNotesProps {\n  icon: IconDefinition;\n  notes: string;\n}\n\nconst PhysicianNotesSection: FC<PhysicianNotesProps> = ({ icon, notes }) => {\n  return (\n    <div className={styles.sectionContainer}>\n      <div className={styles.sectionIconContainer}>\n        <FontAwesomeIcon icon={icon} className={styles.icon} />\n      </div>\n      <div className={styles.notesField}>\n        <b>Physician Notes: </b>\n        <div>{notes}</div>\n      </div>\n    </div>\n  );\n};\n\nexport { PhysicianNotesSection };\nexport default ReportSection;\n","import React, { FC } from 'react';\nimport { useNote } from 'components/NoteDataProvider';\nimport ReportSection, { PhysicianNotesSection } from './ReportSection';\nimport styles from './ReportModal.module.scss';\nimport { faUser, faNotesMedical, faRoute, faStickyNote } from '@fortawesome/free-solid-svg-icons';\nimport ActionButton from 'components/ActionButton';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { getTNM } from 'utils/fhirUtils';\n\ninterface ReportModalInterface {\n  onConfirm: () => void;\n  onDecline: () => void;\n}\n\nconst ReportModal: FC<ReportModalInterface> = ({ onConfirm, onDecline }) => {\n  const { note } = useNote();\n  const { mcodeRecords } = usePatientRecords();\n  const reportName = 'Pathway Report';\n  const patientSection = [\n    { name: 'Date', value: note?.date },\n    { name: 'Patient', value: note?.patient },\n    { name: 'Date of Birth', value: note?.birthdate },\n    { name: 'Physician', value: note?.physician }\n  ];\n\n  const observationField = [\n    { name: 'Primary Cancer', value: mcodeRecords['Primary Cancer'] ?? 'Unknown' },\n    { name: 'Laterality', value: mcodeRecords.Laterality ?? 'Unknown' },\n    { name: 'Clinical TNM', value: getTNM(mcodeRecords) },\n    { name: 'Estrogen Receptor', value: mcodeRecords['Estrogen Receptor'] ?? 'Unknown' },\n    { name: 'Progesterone Receptor', value: mcodeRecords['Progesterone Receptor'] ?? 'Unknown' },\n    { name: 'HER2 Receptor', value: mcodeRecords['HER2 Receptor'] ?? 'Unknown' }\n  ];\n\n  const pathwaySection = [\n    { name: 'Pathway Selected', value: note?.pathway },\n    { name: 'Recommendation', value: note?.node },\n    { name: 'Pathway Status', value: note?.status }\n  ];\n  return (\n    <div className={styles.reportModal}>\n      <h1>{reportName}</h1>\n      <div className={styles.sectionContainer}>\n        <ReportSection icon={faUser} fields={patientSection} />\n        <ReportSection icon={faNotesMedical} fields={observationField} />\n        <ReportSection icon={faRoute} fields={pathwaySection} />\n        {note?.notes && <PhysicianNotesSection icon={faStickyNote} notes={note?.notes} />}\n      </div>\n      <div className={styles.confirmationSection}>\n        <i>\n          The above note will be written into the EHR and any procedure requests will be submitted.\n        </i>\n        <div className={styles.confirmationButtonGroup}>\n          <ActionButton size=\"medium\" type=\"accept\" onClick={onConfirm} />\n          <ActionButton size=\"medium\" type=\"decline\" onClick={onDecline} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportModal;\n","import { PathwayNode, ActionNode } from 'pathways-model';\n\nexport function isActionNode(node: PathwayNode): boolean {\n  const { action } = node as ActionNode;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchNode(node: PathwayNode): boolean {\n  return !isActionNode(node) && node.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, useState, memo } from 'react';\nimport { ActionNode, DocumentationResource, PathwayNode, Action } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport ActionButton from 'components/ActionButton';\nimport ReportModal from 'components/ReportModal';\nimport { isBranchNode } from 'utils/nodeUtils';\nimport { useFHIRClient } from 'components/FHIRClient';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { usePatient } from 'components/PatientProvider';\nimport {\n  translatePathwayRecommendation,\n  createActionDocumentReference,\n  createDocumentReference,\n  createNoteContent\n} from 'utils/fhirUtils';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\nimport { useNote } from 'components/NoteDataProvider';\nimport {\n  Resource,\n  DocumentReference,\n  Observation,\n  Procedure,\n  Identifier,\n  MedicationRequest,\n  ServiceRequest,\n  CarePlan\n} from 'fhir-objects';\nimport { retrieveNote } from 'utils/fhirUtils';\n\ninterface ExpandedNodeProps {\n  actionNode: ActionNode;\n  isActionable: boolean;\n  isCurrentNode: boolean;\n  isAction: boolean;\n  documentation: DocumentationResource | undefined;\n  isAccepted: boolean | null;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(\n  ({ actionNode, isActionable, isCurrentNode, isAction, documentation, isAccepted }) => {\n    const { note, setNote } = useNote();\n    const [showReport, setShowReport] = useState<boolean>(false);\n    const { patientRecords, setPatientRecords } = usePatientRecords();\n    const client = useFHIRClient();\n    const setComments = (nc: string): void => {\n      setNote(prevNote => {\n        return { ...prevNote, notes: nc };\n      });\n    };\n    const patient = usePatient().patient as fhir.Patient;\n    if (note) note.node = actionNode.label;\n\n    const onConfirm = (action?: Action[]): void => {\n      const newPatientRecords = [...patientRecords];\n\n      // Create DocumentReference and add to patient record(and post to FHIR server)\n      if (note) {\n        const noteString = createNoteContent(\n          note,\n          patientRecords,\n          note.status,\n          note?.notes ?? '',\n          actionNode\n        );\n        const documentReference = createActionDocumentReference(\n          noteString,\n          actionNode.label,\n          patient\n        );\n\n        newPatientRecords.push(documentReference);\n        client?.create?.(documentReference);\n      }\n\n      // Translate pathway recommended resource and add to patient record\n      if (note?.status === 'Accepted' && action && action.length > 0) {\n        const resource: Resource = translatePathwayRecommendation(\n          action[0].resource,\n          patient.id as string\n        );\n\n        newPatientRecords.push(resource);\n        client?.create?.(resource);\n      }\n\n      setPatientRecords(newPatientRecords);\n      setShowReport(false);\n    };\n\n    const onAdvance = (): void => {\n      const content = `${actionNode.label} - Advance`;\n      const documentReference = createDocumentReference(content, patient);\n\n      client?.create?.(documentReference);\n      setPatientRecords([...patientRecords, documentReference]);\n    };\n\n    return (\n      <>\n        <ExpandedNodeMemo\n          isAction={isAction}\n          isActionable={isActionable}\n          isCurrentNode={isCurrentNode}\n          actionNode={actionNode}\n          documentation={documentation}\n          setComments={setComments}\n          comments={note?.notes ?? ''}\n          onAccept={(): void => {\n            setNote(prevNote => {\n              return { ...prevNote, status: 'Accepted' };\n            });\n            setShowReport(true);\n          }}\n          onDecline={(): void => {\n            setNote(prevNote => {\n              return { ...prevNote, status: 'Declined' };\n            });\n            setShowReport(true);\n          }}\n          isAccepted={isAccepted}\n          onAdvance={onAdvance}\n        />\n        {showReport && (\n          <ReportModal\n            onConfirm={(): void => onConfirm(actionNode.action)}\n            onDecline={(): void => setShowReport(false)}\n          />\n        )}\n      </>\n    );\n  }\n);\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\ntype StatusFieldProps = {\n  documentation: DocumentationResource | undefined;\n  isAccepted: boolean | null;\n};\n\nconst StatusField: FC<StatusFieldProps> = ({ documentation, isAccepted }) => {\n  if (!documentation?.resource) {\n    return null;\n  }\n  const status = documentation.status;\n  const rawDate = documentation.resource?.meta?.lastUpdated;\n  if (rawDate) {\n    const date = new Date(rawDate).toLocaleString('en-us');\n    let titleText = '';\n    if (isAccepted) {\n      titleText = status.charAt(0).toUpperCase() + status.slice(1);\n    } else if (isAccepted === null) {\n      titleText = 'Status';\n    } else {\n      titleText = 'Declined';\n    }\n    return (\n      <ExpandedNodeField\n        key=\"Status\"\n        title={titleText}\n        description={isAccepted ? date : date.concat(' by Dr. Example')}\n      />\n    );\n  }\n  return null;\n};\n\nfunction renderBranch(\n  documentation: DocumentationResource | undefined,\n  pathwayNode: PathwayNode,\n  isAccepted: boolean | null\n): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Observation': {\n        const observation = documentation.resource as Observation;\n\n        const valueCoding = observation.valueCodeableConcept?.coding;\n        if (valueCoding) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"ValueSystem\"\n              title=\"System\"\n              description={\n                <>\n                  {valueCoding[0].system}\n                  <a href={valueCoding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n                  </a>\n                </>\n              }\n            />,\n            <ExpandedNodeField key=\"ValueCode\" title=\"Code\" description={valueCoding[0].code} />,\n            <ExpandedNodeField\n              key=\"ValueDisplay\"\n              title=\"Display\"\n              description={valueCoding[0].display}\n            />\n          );\n        }\n\n        const date = observation.effectiveDateTime;\n        if (date) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Date\"\n              title=\"Date\"\n              description={new Date(date).toLocaleString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n      case 'DocumentReference': {\n        const documentReference = documentation.resource as DocumentReference;\n        const subject = documentReference.subject;\n        if (subject)\n          returnElements.push(\n            <ExpandedNodeField key=\"subject\" title=\"Subject\" description={subject.reference} />\n          );\n\n        // Display missing data value if it is available, otherwise display note content\n        const identifierArray: Identifier[] | undefined = documentReference.identifier;\n        const documentReferenceIdentifier = identifierArray?.find(\n          i => i.system === 'pathways.documentreference'\n        );\n\n        if (documentReferenceIdentifier) {\n          const value = atob(documentReferenceIdentifier.value as string);\n          returnElements.push(<ExpandedNodeField key=\"value\" title=\"Value\" description={value} />);\n        } else {\n          const note = documentReference.content[0].attachment.data;\n          if (note)\n            returnElements.push(\n              <ExpandedNodeField key=\"note\" title=\"Note\" description={atob(note)} />\n            );\n        }\n        break;\n      }\n      default: {\n        returnElements.push(\n          <ExpandedNodeField key=\"error\" title=\"Error\" description=\"Unsupported Resource Type\" />\n        );\n      }\n    }\n  } else {\n    const values: string[] = pathwayNode.transitions\n      .map(transition => {\n        const description = transition.condition?.description;\n        return description ? description : '';\n      })\n      // Remove duplicate values\n      .filter((v, i, arr) => arr.indexOf(v) === i);\n\n    returnElements.push(\n      <ExpandedNodeField\n        key=\"value\"\n        title=\"Value\"\n        description={<MissingDataPopup values={values} />}\n      />\n    );\n  }\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderAction(\n  actionNode: ActionNode,\n  documentation: DocumentationResource | undefined,\n  isAccepted: boolean | null\n): ReactElement[] {\n  const resource = actionNode.action[0].resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Description\"\n      title=\"Description\"\n      description={actionNode.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />\n  ];\n\n  if (coding) {\n    const elements = [\n      <ExpandedNodeField\n        key=\"System\"\n        title=\"System\"\n        description={\n          <>\n            {coding && coding[0].system}\n            <a href={coding && coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n              <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n            </a>\n          </>\n        }\n      />,\n      <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n      <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />\n    ];\n    returnElements.push(...elements);\n  }\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Procedure': {\n        const procedure = documentation.resource as Procedure;\n        const start =\n          (procedure.performedPeriod && procedure.performedPeriod.start) ||\n          procedure.performedDateTime;\n        const end = procedure.performedPeriod && procedure.performedPeriod.end;\n        if (start) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Start\"\n              title=\"Start\"\n              description={new Date(start).toLocaleString('en-us')}\n            />\n          );\n        }\n\n        if (end) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"End\"\n              title=\"End\"\n              description={new Date(end).toLocaleString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n      case 'CarePlan': {\n        const plan = documentation.resource as CarePlan;\n        const title = plan.title;\n        if (title) {\n          returnElements.push(<ExpandedNodeField key=\"Title\" title=\"Title\" description={title} />);\n        }\n      }\n    }\n  }\n  return returnElements;\n}\n\ninterface ExpandedNodeMemoProps {\n  documentation: DocumentationResource | undefined;\n  actionNode: ActionNode;\n  isAction: boolean;\n  isActionable: boolean;\n  isCurrentNode: boolean;\n  comments: string;\n  setComments: (value: string) => void;\n  onAccept: () => void;\n  onDecline: () => void;\n  isAccepted: boolean | null;\n  onAdvance: () => void;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(\n  ({\n    documentation,\n    actionNode,\n    isAction,\n    isActionable,\n    isCurrentNode,\n    comments,\n    setComments,\n    onAccept,\n    onDecline,\n    isAccepted,\n    onAdvance\n  }) => {\n    const { patientRecords } = usePatientRecords();\n    const action = isAction && renderAction(actionNode, documentation, isAccepted);\n    const branch = isBranchNode(actionNode) && renderBranch(documentation, actionNode, isAccepted);\n    const defaultText =\n      'The patient and I discussed the treatment plan, risks, benefits and alternatives.  The patient expressed understanding and wants to proceed.';\n\n    let notes;\n    const documentReference = retrieveNote(actionNode.label, patientRecords);\n    if (documentReference) {\n      const content = documentReference.content[0].attachment?.data;\n      if (content) {\n        notes = atob(content);\n        notes = notes.slice(notes.indexOf('Notes: ') + 7);\n      }\n    }\n\n    return (\n      <div className={indexStyles.expandedNode}>\n        <table className={styles.infoTable}>\n          <tbody>\n            <StatusField documentation={documentation} isAccepted={isAccepted} />\n            {action || branch}\n            {!isActionable && notes && /\\S/.test(notes) && (\n              <ExpandedNodeField key=\"Comments\" title=\"Comments\" description={notes} />\n            )}\n          </tbody>\n        </table>\n        {/* Node is advanceable if it has been accepted or declined */}\n        {actionNode.transitions.length > 0 && !isActionable && isAction && isCurrentNode && (\n          <Button\n            className={`${indexStyles.button} ${styles.button}`}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onAdvance}\n          >\n            Advance\n          </Button>\n        )}\n        {isActionable && isAction && (\n          <form className={styles.commentsForm}>\n            <div>\n              <label>Comments:</label>\n              <Button\n                className={`${indexStyles.button} ${styles.button}`}\n                onClick={(e): void => {\n                  e.preventDefault();\n                  if (!comments.includes(defaultText)) setComments(comments + defaultText);\n                }}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Use Default Text\n              </Button>\n            </div>\n            <textarea\n              className={styles.comments}\n              value={comments}\n              onChange={(e): void => setComments(e.target.value)}\n            ></textarea>\n            <div className={styles.footer}>\n              <ActionButton type=\"accept\" size=\"large\" onClick={onAccept} />\n            </div>\n            <div className={styles.footer}>\n              <ActionButton type=\"decline\" size=\"large\" onClick={onDecline} />\n            </div>\n          </form>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { ActionNode, PathwayNode, DocumentationResource } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport nodeStyles from 'styles/index.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isActionNode } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'not-on-patient-path': {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    },\n    'child-not-on-patient-path': {\n      borderColor: theme.palette.background.default\n    }\n  }),\n  { name: 'Node' }\n);\n\ninterface NodeProps {\n  pathwayNode: PathwayNode;\n  documentation: DocumentationResource | undefined;\n  isOnPatientPath: boolean;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClickHandler?: () => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      {\n        pathwayNode,\n        documentation,\n        isOnPatientPath,\n        isCurrentNode,\n        xCoordinate,\n        yCoordinate,\n        expanded = false,\n        onClickHandler\n      },\n      ref\n    ) => {\n      const { label } = pathwayNode;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n      const classes = useStyles();\n      const backgroundColorClass = isOnPatientPath\n        ? styles.onPatientPath\n        : clsx(styles.notOnPatientPath, classes['not-on-patient-path']);\n      const isActionable = isCurrentNode && !documentation;\n      const topLevelClasses = [styles.node, backgroundColorClass];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push(nodeStyles.expanded);\n      if (isActionable) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = isOnPatientPath\n          ? styles.childOnPatientPath\n          : clsx(styles.childNotOnPatientPath, classes['child-not-on-patient-path']);\n      }\n\n      const isAction = isActionNode(pathwayNode);\n      // TODO: how do we determine whether a node has been accepted or declined?\n      // for now:\n      // if it's a non-actionable action node on the path: accepted == has documentation\n      // if it's actionable, not action or not on the path: null\n      const wasActionTaken = isOnPatientPath && isAction && !isActionable;\n      const isAccepted = wasActionTaken\n        ? documentation?.resourceType !== 'DocumentReference'\n        : null;\n      if (isAccepted === false) {\n        topLevelClasses.push(styles.declined);\n        if (expanded) expandedNodeClass = styles.childDeclined;\n      }\n      let status = null;\n      if ('action' in pathwayNode) {\n        if (isOnPatientPath) status = isAccepted;\n        else status = isAction && documentation ? true : null;\n      } else if (!isCurrentNode && documentation) {\n        status = true;\n      }\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div\n            className={`${nodeStyles.nodeTitle} ${onClickHandler && nodeStyles.clickable}`}\n            onClick={onClickHandler}\n          >\n            <div className={nodeStyles.iconAndLabel}>\n              <NodeIcon pathwayNode={pathwayNode} isAction={isAction} />\n              {label}\n            </div>\n            <StatusIcon status={status} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                actionNode={pathwayNode as ActionNode}\n                isActionable={isActionable}\n                isAction={isAction}\n                documentation={documentation}\n                isAccepted={isAccepted}\n                isCurrentNode={isCurrentNode}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayNode: PathwayNode;\n  isAction: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayNode, isAction }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayNode.label === 'Start') icon = faPlay;\n  if (isAction) {\n    const actionNode = pathwayNode as ActionNode;\n    if (actionNode.action.length > 0) {\n      const resourceType = actionNode.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'ServiceRequest') icon = faSyringe;\n      else if (resourceType === 'CarePlan') icon = faBookMedical;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status === null) return null;\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return <FontAwesomeIcon icon={icon} className={styles.statusIcon} />;\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  isOnPatientPath: boolean;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, isOnPatientPath, widthOffset }) => {\n  const className = isOnPatientPath ? styles.arrowOnPatientPath : styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { evaluatePatientOnPathway } from 'engine';\nimport {\n  EvaluatedPathway,\n  PathwayResults,\n  DocumentationResource,\n  Pathway,\n  Documentation\n} from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges, Edge } from 'graph-model';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { DomainResource } from 'fhir-objects';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\nimport { NoteDataProvider } from 'components/NoteDataProvider';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\ninterface GraphProps {\n  evaluatedPathway?: EvaluatedPathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n}\n\nconst getPath = (pathwayResults: PathwayResults): string[] => {\n  return Object.values(pathwayResults.documentation)\n    .filter(doc => doc.onPath)\n    .map(doc => doc.node);\n};\n\nconst isEdgeOnPatientPath = (pathwayResults: PathwayResults, edge: Edge): boolean => {\n  const path = getPath(pathwayResults);\n  const startIndex = path.indexOf(edge.start);\n  const endIndex = path.indexOf(edge.end);\n  if (startIndex !== -1 && endIndex !== -1 && startIndex + 1 === endIndex) return true;\n  else if (startIndex === path.length - 1 && pathwayResults.currentNodes.includes(edge.end))\n    return true;\n  else return false;\n};\n\nconst Graph: FC<GraphProps> = memo(\n  ({ evaluatedPathway, interactive = true, expandCurrentNode = true }) => {\n    const pathwayCtx = usePathwayContext();\n    if (!evaluatedPathway) {\n      if (!pathwayCtx.evaluatedPathway) return <div>No Pathway Loaded</div>;\n      else evaluatedPathway = pathwayCtx.evaluatedPathway;\n    }\n\n    const patientRecords = usePatientRecords();\n    const resources = patientRecords.patientRecords;\n    const pathway = evaluatedPathway.pathway;\n    const graphElement = useRef<HTMLDivElement>(null);\n    const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n    const [parentWidth, setParentWidth] = useState<number>(\n      graphElement?.current?.parentElement?.clientWidth ?? 0\n    );\n\n    const setPath = useCallback(\n      (value: PathwayResults): void => {\n        patientRecords.setEvaluatePath(false);\n        pathwayCtx.updateEvaluatedPathways({\n          pathway: pathway,\n          pathwayResults: value\n        });\n      },\n      [pathway, pathwayCtx, patientRecords]\n    );\n\n    // Get the layout of the graph\n    const getGraphLayout = useCallback((): Layout => {\n      const nodeDimensions: NodeDimensions = {};\n\n      // Retrieve dimensions from nodeRefs\n      if (nodeRefs?.current) {\n        Object.keys(nodeRefs.current).forEach(key => {\n          const nodeElement = nodeRefs.current[key];\n          const width = nodeElement.clientWidth;\n          // nodeElement can have multiple children so calculate the sum to get the node height\n          const height = Array.from(nodeElement.children).reduce(\n            (acc, child) => acc + child.clientHeight,\n            0\n          );\n\n          nodeDimensions[key] = { width, height };\n        });\n      }\n\n      return graphLayout(pathway, nodeDimensions);\n    }, [pathway]);\n\n    const [layout, setLayout] = useState(getGraphLayout());\n    const { nodeCoordinates, edges } = layout;\n    const maxHeight = useMemo(() => {\n      return nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.y)\n            .reduce((a, b) => Math.max(a, b))\n        : 0;\n    }, [nodeCoordinates]);\n\n    // If a node has a negative x value, shift nodes and edges to the right by that value\n    const minX =\n      nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.x + parentWidth / 2)\n            .reduce((a, b) => Math.min(a, b))\n        : 0;\n\n    if (minX < 0) {\n      const toAdd = minX * -1;\n      Object.keys(nodeCoordinates).forEach(key => {\n        const node = nodeCoordinates[key];\n        node.x += toAdd;\n      });\n\n      Object.keys(edges).forEach(key => {\n        const edge = edges[key];\n\n        edge.points.forEach(p => (p.x += toAdd));\n        if (edge.label) edge.label.x += toAdd;\n      });\n    }\n    const layoutKeys = Object.keys(layout).toString();\n    const initialExpandedNode = useMemo(() => {\n      return layoutKeys.split(',').reduce((acc: { [key: string]: boolean }, curr: string) => {\n        acc[curr] = false;\n        return acc;\n      }, {});\n    }, [layoutKeys]);\n\n    const [expanded, _setExpanded] = useState<{ [key: string]: boolean | undefined }>(\n      initialExpandedNode\n    );\n\n    const setExpanded = useCallback((key: string, expand?: boolean): void => {\n      _setExpanded(prevState => {\n        return { ...prevState, [key]: expand ?? !prevState[key] };\n      });\n    }, []);\n\n    // Evaluate patient on the pathway\n    useEffect(() => {\n      // Keeps track of whether the current useEffect cycle has ended\n      let cancel = false;\n\n      if (\n        resources.length > 0 &&\n        (!evaluatedPathway?.pathwayResults || patientRecords.evaluatePath)\n      ) {\n        // Create a Bundle for the CQL engine and check if patientPath needs to be evaluated\n        const patient = {\n          resourceType: 'Bundle',\n          type: 'searchset',\n          entry: resources.map((r: DomainResource) => ({ resource: r }))\n        };\n        evaluatePatientOnPathway(patient, pathway, resources).then(pathwayResults => {\n          if (!cancel) setPath(pathwayResults);\n        });\n\n        return (): void => {\n          cancel = true;\n        };\n      }\n    }, [pathway, resources, evaluatedPathway, setPath, patientRecords]);\n\n    // Expand all the current nodes by default if allowed\n    useEffect(() => {\n      if (evaluatedPathway?.pathwayResults) {\n        for (const currentNode of evaluatedPathway.pathwayResults.currentNodes) {\n          if (expandCurrentNode) {\n            if (currentNode) setExpanded(currentNode, true);\n          }\n        }\n      }\n    }, [expandCurrentNode, evaluatedPathway, setExpanded]);\n\n    // Recalculate graph layout if graph container size changes\n    useEffect(() => {\n      if (graphElement.current?.parentElement) {\n        new ResizeSensor(graphElement.current.parentElement, function() {\n          setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n          setLayout(getGraphLayout());\n        });\n      }\n    }, [getGraphLayout]);\n\n    // Recalculate graph layout if a node is expanded\n    useEffect(() => {\n      setLayout(getGraphLayout());\n    }, [expanded, getGraphLayout]);\n\n    // maxWidth finds the edge label that is farthest to the right\n    const maxWidth: number =\n      edges !== undefined\n        ? Object.values(edges)\n            .map(e => e.label)\n            .map(l => (l ? l.x + l.text.length * 10 + parentWidth / 2 : 0))\n            .reduce((a, b) => Math.max(a, b), 0)\n        : parentWidth;\n\n    const documentation = evaluatedPathway.pathwayResults\n      ? evaluatedPathway.pathwayResults.documentation\n      : {};\n\n    return (\n      <GraphMemo\n        graphElement={graphElement}\n        interactive={interactive}\n        maxHeight={maxHeight}\n        nodeCoordinates={nodeCoordinates}\n        documentation={documentation}\n        edges={edges}\n        evaluatedPathway={evaluatedPathway}\n        nodeRefs={nodeRefs}\n        parentWidth={parentWidth}\n        maxWidth={maxWidth}\n        pathway={pathway}\n        expanded={expanded}\n        setExpanded={setExpanded}\n      />\n    );\n  }\n);\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  documentation: { [key: string]: Documentation };\n  edges: Edges;\n  evaluatedPathway: EvaluatedPathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  pathway: Pathway;\n  expanded: {\n    [key: string]: boolean | undefined;\n  };\n  setExpanded: (key: string, expand?: boolean | undefined) => void;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    documentation,\n    edges,\n    evaluatedPathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    pathway,\n    expanded,\n    setExpanded\n  }) => {\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeKey => {\n              const docResource = documentation[nodeKey] as DocumentationResource;\n              const onClickHandler = useCallback(() => {\n                return interactive ? setExpanded(nodeKey) : undefined;\n              }, [nodeKey]);\n              return (\n                <NoteDataProvider date={new Date(Date.now())} key={nodeKey}>\n                  <Node\n                    key={nodeKey}\n                    documentation={docResource}\n                    ref={(node: HTMLDivElement): void => {\n                      nodeRefs.current[nodeKey] = node;\n                    }}\n                    pathwayNode={pathway.nodes[nodeKey]}\n                    isOnPatientPath={\n                      evaluatedPathway.pathwayResults\n                        ? getPath(evaluatedPathway.pathwayResults).includes(nodeKey) ||\n                          evaluatedPathway.pathwayResults.currentNodes.includes(nodeKey)\n                        : false\n                    }\n                    isCurrentNode={\n                      evaluatedPathway.pathwayResults\n                        ? evaluatedPathway.pathwayResults.currentNodes.includes(nodeKey)\n                        : false\n                    }\n                    xCoordinate={nodeCoordinates[nodeKey].x + parentWidth / 2}\n                    yCoordinate={nodeCoordinates[nodeKey].y}\n                    expanded={expanded[nodeKey]}\n                    onClickHandler={onClickHandler}\n                  />\n                </NoteDataProvider>\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            // Adding 5 pixels to maxWidth so that the rightmost edge label is not cut off\n            width: maxWidth + 5,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    isOnPatientPath={\n                      evaluatedPathway.pathwayResults\n                        ? isEdgeOnPatientPath(evaluatedPathway.pathwayResults, edge)\n                        : false\n                    }\n                    widthOffset={parentWidth / 2}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import React, { FC, ReactNode, useState, RefObject } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Service } from 'pathways-objects';\nimport { Pathway, EvaluatedPathway, PreconditionResult } from 'pathways-model';\n\nimport styles from './PathwaysList.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Graph from 'components/Graph';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { evaluatePathwayPreconditions } from 'engine';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { getAssignedPathways } from 'utils/fhirUtils';\nimport {\n  faEye,\n  faPlay,\n  faPlus,\n  faMinus,\n  faChevronUp,\n  faChevronDown,\n  faCaretDown,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'pathway-element': {\n      backgroundColor: theme.palette.background.default\n    },\n    'assigned-pathway-element': {\n      backgroundColor: theme.palette.primary.main\n    },\n    title: {\n      color: theme.palette.text.primary\n    },\n    'assigned-title': {\n      color: theme.palette.common.white\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n\ninterface PathwaysListElementProps {\n  evaluatedPathway: EvaluatedPathway;\n  preconditions?: PreconditionResult;\n  callback: Function;\n  assigned: boolean;\n}\n\ninterface PathwaysListProps {\n  evaluatedPathways: EvaluatedPathway[];\n  callback: Function;\n  service: Service<Array<Pathway>>;\n  headerElement: RefObject<HTMLDivElement>;\n}\n\nconst PathwaysList: FC<PathwaysListProps> = ({\n  evaluatedPathways,\n  callback,\n  service,\n  headerElement\n}) => {\n  const { patientRecords } = usePatientRecords();\n  const [preconditions, setPreconditions] = useState<PreconditionResult[] | null>(null);\n\n  if (\n    !preconditions &&\n    evaluatedPathways.length > 0 &&\n    patientRecords &&\n    patientRecords.length > 0\n  ) {\n    // Create a Bundle for the CQL engine and check if patientPath needs to be evaluated\n    const patient = {\n      resourceType: 'Bundle',\n      type: 'searchset',\n      entry: patientRecords.map((r: fhir.Resource) => ({ resource: r }))\n    };\n\n    // Evaluate pathway preconditions for each pathway\n    const preconditionPromises = evaluatedPathways.map(pathway =>\n      evaluatePathwayPreconditions(patient, pathway.pathway)\n    );\n    Promise.all(preconditionPromises).then(preconditionResults => {\n      setPreconditions(preconditionResults.sort((a, b) => b.matches - a.matches));\n    });\n  }\n\n  function renderList(): ReactNode {\n    return (\n      <div>\n        {preconditions ? (\n          preconditions.map(c => {\n            const evaluatedPathway = evaluatedPathways.find(p => p.pathway.name === c.pathwayName);\n            if (evaluatedPathway) {\n              const pathwayName = evaluatedPathway.pathway.name;\n              return (\n                <PathwaysListElement\n                  evaluatedPathway={evaluatedPathway}\n                  callback={callback}\n                  preconditions={c}\n                  assigned={assignedPathways.includes(pathwayName)}\n                  key={pathwayName}\n                />\n              );\n            } else\n              return (\n                <div>An error occured evaluating the pathway preconditions. Please try again.</div>\n              );\n          })\n        ) : (\n          <div>Loading Pathways...</div>\n        )}\n      </div>\n    );\n  }\n\n  const assignedPathways = getAssignedPathways(patientRecords, evaluatedPathways);\n  const style = { height: '100%' };\n  if (headerElement?.current) {\n    style.height = window.innerHeight - headerElement.current.clientHeight + 'px';\n  }\n  return (\n    <div className={styles.pathways_list} style={style}>\n      {service.status === 'loading' ? (\n        <div>Loading...</div>\n      ) : service.status === 'loaded' ? (\n        <div className={styles.container}>\n          <div className={styles.pathwayListHeaderContainer}>\n            <div className={styles.header_title}>\n              <div className={styles.header_title__header}>Explore Pathways</div>\n              <div className={styles.header_title__note}>Select pathway below to view details</div>\n            </div>\n            <div className={styles.matchedElementsLabel}>\n              <i>\n                mCODE\n                <br />\n                elements\n                <br />\n                matched\n              </i>\n              <FontAwesomeIcon icon={faCaretDown} />\n            </div>\n          </div>\n\n          {preconditions?.length !== 0 && renderList()}\n        </div>\n      ) : (\n        <div>ERROR</div>\n      )}\n    </div>\n  );\n};\n\nconst PathwaysListElement: FC<PathwaysListElementProps> = ({\n  evaluatedPathway,\n  preconditions,\n  callback,\n  assigned\n}) => {\n  const classes = useStyles();\n  const pathway = evaluatedPathway.pathway;\n  const { setEvaluatedPathway, assignPathway, unassignPathway } = usePathwayContext();\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const chevron: IconProp = isVisible ? faChevronUp : faChevronDown;\n\n  function toggleVisible(): void {\n    setIsVisible(!isVisible);\n  }\n\n  const pathwayElementClass = clsx(\n    assigned && styles.assignedPathwayElement,\n    assigned && classes['assigned-pathway-element'],\n    !assigned && styles.pathwayElement,\n    !assigned && classes['pathway-element']\n  );\n\n  const titleClass = clsx(\n    styles.title,\n    assigned && classes['assigned-title'],\n    !assigned && classes.title\n  );\n\n  return (\n    <div className={pathwayElementClass} role={'list'} key={pathway.name}>\n      <div\n        className={titleClass}\n        role={'listitem'}\n        onClick={(e): void => {\n          setEvaluatedPathway(evaluatedPathway, true);\n          toggleVisible();\n        }}\n      >\n        <div>{pathway.name}</div>\n        {assigned && <FontAwesomeIcon icon={faCheckCircle} />}\n        <div className={styles.expand}>\n          <FontAwesomeIcon icon={chevron} />\n        </div>\n        <div className={styles.numElements}>{preconditions?.matches}</div>\n      </div>\n\n      {isVisible && (\n        <div className={styles.infoContainer}>\n          <div className={styles.details}>\n            <p>{pathway.description}</p>\n            <table>\n              <tbody>\n                <tr>\n                  <th></th>\n                  <th>mCODE elements</th>\n                  <th>patient elements</th>\n                </tr>\n                {preconditions?.preconditionResultItems.map(c => (\n                  <tr key={c.elementName}>\n                    <td>{c.elementName}</td>\n                    <td>{c.expected}</td>\n                    <td className={c.match ? styles.matchingElement : undefined}>{c.actual}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <Button\n              onClick={(): void => {\n                assigned ? unassignPathway(pathway.name) : assignPathway(pathway.name);\n              }}\n              variant=\"contained\"\n              color={assigned ? 'secondary' : 'primary'}\n              startIcon={<FontAwesomeIcon icon={assigned ? faTimesCircle : faCheckCircle} />}\n            >\n              {assigned ? 'Unassign' : 'Assign'}\n            </Button>\n            <Button\n              onClick={(): void => {\n                callback(evaluatedPathway);\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<FontAwesomeIcon icon={faEye} />}\n            >\n              View\n            </Button>\n          </div>\n          <div className={styles.pathway}>\n            <div style={{ height: '100%', overflow: 'scroll' }}>\n              <Graph\n                evaluatedPathway={evaluatedPathway}\n                interactive={false}\n                expandCurrentNode={false}\n              />\n            </div>\n            <div className={styles.controls}>\n              <FontAwesomeIcon icon={faPlay} />\n              <FontAwesomeIcon icon={faPlus} />\n              <FontAwesomeIcon icon={faMinus} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PathwaysList;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Array<Pathway>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<Array<string>>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import { Resource } from 'fhir-objects';\nclass MockedFHIRClient {\n  patient = {};\n\n  async create(): Promise<Resource> {\n    console.log('Mocked create');\n    return Promise.resolve({});\n  }\n\n  async delete(): Promise<Resource> {\n    console.log('Mocked delete');\n    return Promise.resolve({});\n  }\n}\n\nexport { MockedFHIRClient };\n","import React, { FC, useState, useEffect, useCallback, useMemo, useRef, RefObject } from 'react';\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport { PathwaysClient } from 'pathways-client';\nimport logo from 'camino-logo-dark.png';\nimport { getPatientRecord } from 'utils/fhirExtract';\nimport { FHIRClientProvider } from './FHIRClient';\nimport { PatientProvider } from './PatientProvider';\nimport { PatientRecordsProvider } from './PatientRecordsProvider';\nimport PatientRecord from './PatientRecord/PatientRecord';\nimport Graph from './Graph';\nimport config from 'utils/ConfigManager';\nimport PathwaysList from './PathwaysList';\nimport { PathwayProvider } from './PathwayProvider';\nimport ThemeProvider from './ThemeProvider';\nimport { EvaluatedPathway } from 'pathways-model';\nimport useGetPathwaysService from './PathwaysService/PathwaysService';\nimport FHIR from 'fhirclient';\nimport { MockedFHIRClient } from 'utils/MockedFHIRClient';\nimport { getHumanName, createCarePlan } from 'utils/fhirUtils';\nimport { DomainResource, Practitioner, CarePlan } from 'fhir-objects';\nimport styles from './App.module.scss';\nimport { UserProvider } from './UserProvider';\nimport { McodeElements } from 'mcode';\nimport { getFixture } from 'engine/cql-extractor';\nimport executeElm from 'engine/elm-executor';\ninterface AppProps {\n  demoId?: string;\n}\n\nconst App: FC<AppProps> = ({ demoId }) => {\n  const [patient, setPatient] = useState<fhir.Patient | null>(null);\n  const [patientRecords, _setPatientRecords] = useState<DomainResource[]>([]);\n  const [mcodeRecords, _setMcodeRecords] = useState<McodeElements>({});\n  const [currentPathway, setCurrentPathway] = useState<EvaluatedPathway | null>(null);\n  const [selectPathway, setSelectPathway] = useState<boolean>(true);\n  const [evaluatePath, setEvaluatePath] = useState<boolean>(false);\n  const [evaluatedPathways, setEvaluatedPathways] = useState<EvaluatedPathway[]>([]);\n  const [client, setClient] = useState<PathwaysClient | null>(null);\n  const [user, setUser] = useState<string>('');\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n\n  const setPatientRecords = useCallback((value: DomainResource[]): void => {\n    _setPatientRecords(value);\n    setEvaluatePath(true);\n  }, []);\n\n  const setMcodeRecords = useCallback((resources: DomainResource[]): void => {\n    // Create a Bundle for the CQL engine\n    const bundle = {\n      resourceType: 'Bundle',\n      type: 'searchset',\n      entry: resources.map((r: DomainResource) => ({ resource: r }))\n    };\n    getFixture('elm/mCODE.elm.json').then(elmString => {\n      const elm = JSON.parse(elmString);\n      const elmResults = executeElm(bundle, elm);\n      const patientIds = Object.keys(elmResults.patientResults);\n      const mcodeData = elmResults.patientResults[patientIds[0]];\n      const mcodeElements: McodeElements = {\n        'Primary Cancer': mcodeData['Primary Cancer Condition Value'][0] ?? undefined,\n        Laterality: mcodeData['Primary Cancer Condition Body Location Value'][0] ?? undefined,\n        'Tumor Category':\n          mcodeData['TNM Clinical Primary Tumor Category Data Value (T Category)'][0] ?? undefined,\n        'Node Category':\n          mcodeData['TNM Clinical Regional Nodes Category Data Value (N Category)'][0] ?? undefined,\n        'Metastases Category':\n          mcodeData['TNM Clinical Distant Metastases Category Data Value (M Category)'][0] ??\n          undefined,\n        'Estrogen Receptor': mcodeData['Estrogen Receptor Value'][0] ?? undefined,\n        'Progesterone Receptor': mcodeData['Progesterone Receptor Value'][0] ?? undefined,\n        'HER2 Receptor': mcodeData['HER2 Receptor Value'][0] ?? undefined\n      };\n\n      _setMcodeRecords(mcodeElements);\n    });\n  }, []);\n\n  const providerProps = useMemo(\n    () => ({\n      patientRecords,\n      setPatientRecords,\n      evaluatePath,\n      setEvaluatePath,\n      mcodeRecords,\n      setMcodeRecords\n    }),\n    [\n      patientRecords,\n      setPatientRecords,\n      evaluatePath,\n      setEvaluatePath,\n      mcodeRecords,\n      setMcodeRecords\n    ]\n  );\n\n  useEffect(() => {\n    if (!demoId) {\n      FHIR.oauth2\n        .init({\n          clientId: 'Input client id you get when you register the app',\n          scope: 'launch/patient openid profile'\n        })\n        .then(client => {\n          // TODO: MockedFHIRClient has not mocked out requests for resources yet\n          getPatientRecord(client).then((records: DomainResource[]) => {\n            // filters out values that are empty\n            // the server might return deleted\n            // resources that only include an\n            // id, meta, and resourceType\n            const values = ['id', 'meta', 'resourceType'];\n            records = records.filter(resource => {\n              return !Object.keys(resource).every(value => values.includes(value));\n            });\n\n            setPatientRecords(records);\n            setMcodeRecords(records);\n          });\n          client.patient?.read?.().then((resultPatient: fhir.Patient) => setPatient(resultPatient));\n          setClient(client);\n        });\n    } else {\n      setClient(new MockedFHIRClient());\n      const url = config.get('demoPatients') + demoId + '.json';\n      fetch(url)\n        .then(data => data.json())\n        .then(result => {\n          const resultPatient = result.find((r: DomainResource) => r.resourceType === 'Patient');\n          setPatientRecords(result);\n          setMcodeRecords(result);\n          setPatient(resultPatient);\n        });\n    }\n  }, [demoId, setPatientRecords, setMcodeRecords]);\n\n  // gather note info\n  useEffect(() => {\n    client?.user?.read().then((user: Practitioner) => {\n      const name = user.name && getHumanName(user.name);\n      if (name) {\n        setUser(name);\n      }\n    });\n  }, [client]);\n\n  const service = useGetPathwaysService(\n    config.get(demoId ? 'demoPathwaysService' : 'pathwaysService')\n  );\n\n  useEffect(() => {\n    if (service.status === 'loaded' && evaluatedPathways.length === 0)\n      setEvaluatedPathways(\n        service.payload.map(pathway => ({ pathway: pathway, pathwayResults: null }))\n      );\n  }, [service, evaluatedPathways.length, client, patientRecords]);\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current) {\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n    }\n  }, [selectPathway]);\n\n  function setEvaluatedPathwayCallback(\n    value: EvaluatedPathway | null,\n    selectPathway = false\n  ): void {\n    window.scrollTo(0, 0);\n    setSelectPathway(selectPathway);\n    setCurrentPathway(value);\n  }\n\n  const updateEvaluatedPathways = useCallback(\n    (value: EvaluatedPathway) => {\n      const newList = [...evaluatedPathways]; // Create a shallow copy of list\n      for (let i = 0; i < evaluatedPathways.length; i++) {\n        if (evaluatedPathways[i].pathway.name === value.pathway.name) {\n          newList[i] = value;\n          setEvaluatedPathways(newList);\n        }\n      }\n\n      if (currentPathway?.pathway.name === value.pathway.name) {\n        setCurrentPathway(value);\n      }\n    },\n    [currentPathway, evaluatedPathways]\n  );\n\n  const assignPathway = useCallback(\n    (pathwayName: string): void => {\n      if (!patient) return;\n\n      const carePlan = createCarePlan(pathwayName, patient);\n\n      setPatientRecords([...patientRecords, carePlan]);\n      client?.create?.(carePlan);\n    },\n    [patientRecords, patient, client, setPatientRecords]\n  );\n\n  const unassignPathway = useCallback(\n    (pathwayName: string): void => {\n      const newPatientRecords: DomainResource[] = [];\n      patientRecords.forEach(r => {\n        if (r.resourceType === 'CarePlan' && (r as CarePlan).title === pathwayName)\n          client?.delete?.(`CarePlan/${r.id}`);\n        else newPatientRecords.push(r);\n      });\n      setPatientRecords(newPatientRecords);\n    },\n    [patientRecords, setPatientRecords, client]\n  );\n\n  return (\n    <ThemeProvider>\n      <FHIRClientProvider client={client as PathwaysClient}>\n        <UserProvider value={{ user, setUser }}>\n          <PatientProvider value={{ patient, setPatient }}>\n            <PatientRecordsProvider value={providerProps}>\n              <PathwayProvider\n                pathwayCtx={{\n                  updateEvaluatedPathways,\n                  evaluatedPathway: currentPathway,\n                  setEvaluatedPathway: setEvaluatedPathwayCallback,\n                  assignPathway: assignPathway,\n                  unassignPathway: unassignPathway\n                }}\n              >\n                <div ref={headerElement}>\n                  <Header logo={logo} />\n\n                  <Navigation\n                    evaluatedPathways={evaluatedPathways}\n                    selectPathway={selectPathway}\n                    setSelectPathway={setSelectPathway}\n                  />\n                </div>\n\n                {selectPathway ? (\n                  <PathwaysList\n                    evaluatedPathways={evaluatedPathways}\n                    callback={setEvaluatedPathwayCallback}\n                    service={service}\n                    headerElement={headerElement}\n                  />\n                ) : (\n                  <PatientView\n                    key={currentPathway?.pathway.name ?? ''}\n                    headerElement={headerElement}\n                    graphContainerElement={graphContainerElement}\n                  />\n                )}\n              </PathwayProvider>\n            </PatientRecordsProvider>\n          </PatientProvider>\n        </UserProvider>\n      </FHIRClientProvider>\n    </ThemeProvider>\n  );\n};\n\ninterface PatientViewProps {\n  headerElement: RefObject<HTMLDivElement>;\n  graphContainerElement: RefObject<HTMLDivElement>;\n}\n\nconst PatientView: FC<PatientViewProps> = ({ headerElement, graphContainerElement }) => {\n  return (\n    <div className={styles.display}>\n      <PatientRecord headerElement={headerElement} />\n\n      <div ref={graphContainerElement} className={styles.graph}>\n        <Graph expandCurrentNode={true} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './components/App.tsx';\nimport './styles/index.module.scss';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" render={() => <App />}></Route>\n      <Route\n        path=\"/demo/:id\"\n        render={props => <App demoId={props.match.params.id} key={props.match.params.id} />}\n      ></Route>\n      <Route path=\"/demo\" render={() => <App demoId={'Maureen'} />}></Route>\n    </Switch>\n  </Router>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientSnapshot\":\"PatientSnapshot_patientSnapshot__3bGcm\",\"patientSnapshot__info\":\"PatientSnapshot_patientSnapshot__info__2Ry7e\",\"patientName\":\"PatientSnapshot_patientName__ZClJB\",\"patientSnapshot__photo\":\"PatientSnapshot_patientSnapshot__photo__3XI7U\",\"patientSnapshot__list\":\"PatientSnapshot_patientSnapshot__list__5DVC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigation__back\":\"Navigation_navigation__back__2cVZ2\",\"navigation__leftPanel\":\"Navigation_navigation__leftPanel__QjHPF\",\"navigation__rightPanel\":\"Navigation_navigation__rightPanel__1FRD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reportModal\":\"ReportModal_reportModal__2hppG\",\"sectionContainer\":\"ReportModal_sectionContainer__1iIQM\",\"confirmationSection\":\"ReportModal_confirmationSection__2HXo4\",\"confirmationButtonGroup\":\"ReportModal_confirmationButtonGroup__1FN9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\",\"arrowOnPatientPath\":\"Arrow_arrowOnPatientPath__1r5CB\"};","var map = {\n\t\"./alert\": 365,\n\t\"./alert.js\": 365,\n\t\"./alert.js.map\": 1571,\n\t\"./allergyintolerance\": 366,\n\t\"./allergyintolerance.js\": 366,\n\t\"./allergyintolerance.js.map\": 1572,\n\t\"./appointment\": 367,\n\t\"./appointment.js\": 367,\n\t\"./appointment.js.map\": 1573,\n\t\"./appointmentresponse\": 368,\n\t\"./appointmentresponse.js\": 368,\n\t\"./appointmentresponse.js.map\": 1574,\n\t\"./availability\": 369,\n\t\"./availability.js\": 369,\n\t\"./availability.js.map\": 1575,\n\t\"./basic\": 370,\n\t\"./basic.js\": 370,\n\t\"./basic.js.map\": 1576,\n\t\"./binary\": 371,\n\t\"./binary.js\": 371,\n\t\"./binary.js.map\": 1577,\n\t\"./bundle\": 372,\n\t\"./bundle.js\": 372,\n\t\"./bundle.js.map\": 1578,\n\t\"./careplan\": 373,\n\t\"./careplan.js\": 373,\n\t\"./careplan.js.map\": 1579,\n\t\"./claimresponse\": 374,\n\t\"./claimresponse.js\": 374,\n\t\"./claimresponse.js.map\": 1580,\n\t\"./communicationrequest\": 375,\n\t\"./communicationrequest.js\": 375,\n\t\"./communicationrequest.js.map\": 1581,\n\t\"./composition\": 376,\n\t\"./composition.js\": 376,\n\t\"./composition.js.map\": 1582,\n\t\"./conceptmap\": 377,\n\t\"./conceptmap.js\": 377,\n\t\"./conceptmap.js.map\": 1583,\n\t\"./condition\": 378,\n\t\"./condition.js\": 378,\n\t\"./condition.js.map\": 1584,\n\t\"./conformance\": 379,\n\t\"./conformance.js\": 379,\n\t\"./conformance.js.map\": 1585,\n\t\"./contract\": 380,\n\t\"./contract.js\": 380,\n\t\"./contract.js.map\": 1586,\n\t\"./contraindication\": 381,\n\t\"./contraindication.js\": 381,\n\t\"./contraindication.js.map\": 1587,\n\t\"./core\": 21,\n\t\"./core.js\": 21,\n\t\"./core.js.map\": 1588,\n\t\"./coverage\": 382,\n\t\"./coverage.js\": 382,\n\t\"./coverage.js.map\": 1589,\n\t\"./dataelement\": 383,\n\t\"./dataelement.js\": 383,\n\t\"./dataelement.js.map\": 1590,\n\t\"./device\": 384,\n\t\"./device.js\": 384,\n\t\"./device.js.map\": 1591,\n\t\"./devicecomponent\": 385,\n\t\"./devicecomponent.js\": 385,\n\t\"./devicecomponent.js.map\": 1592,\n\t\"./deviceuserequest\": 386,\n\t\"./deviceuserequest.js\": 386,\n\t\"./deviceuserequest.js.map\": 1593,\n\t\"./deviceusestatement\": 387,\n\t\"./deviceusestatement.js\": 387,\n\t\"./deviceusestatement.js.map\": 1594,\n\t\"./diagnosticorder\": 388,\n\t\"./diagnosticorder.js\": 388,\n\t\"./diagnosticorder.js.map\": 1595,\n\t\"./diagnosticreport\": 389,\n\t\"./diagnosticreport.js\": 389,\n\t\"./diagnosticreport.js.map\": 1596,\n\t\"./documentmanifest\": 390,\n\t\"./documentmanifest.js\": 390,\n\t\"./documentmanifest.js.map\": 1597,\n\t\"./documentreference\": 391,\n\t\"./documentreference.js\": 391,\n\t\"./documentreference.js.map\": 1598,\n\t\"./eligibility\": 392,\n\t\"./eligibility.js\": 392,\n\t\"./eligibility.js.map\": 1599,\n\t\"./eligibilityresponse\": 393,\n\t\"./eligibilityresponse.js\": 393,\n\t\"./eligibilityresponse.js.map\": 1600,\n\t\"./encounter\": 394,\n\t\"./encounter.js\": 394,\n\t\"./encounter.js.map\": 1601,\n\t\"./enrollment\": 395,\n\t\"./enrollment.js\": 395,\n\t\"./enrollment.js.map\": 1602,\n\t\"./enrollmentresponse\": 396,\n\t\"./enrollmentresponse.js\": 396,\n\t\"./enrollmentresponse.js.map\": 1603,\n\t\"./explanationofbenefit\": 397,\n\t\"./explanationofbenefit.js\": 397,\n\t\"./explanationofbenefit.js.map\": 1604,\n\t\"./extensiondefinition\": 398,\n\t\"./extensiondefinition.js\": 398,\n\t\"./extensiondefinition.js.map\": 1605,\n\t\"./familyhistory\": 399,\n\t\"./familyhistory.js\": 399,\n\t\"./familyhistory.js.map\": 1606,\n\t\"./group\": 400,\n\t\"./group.js\": 400,\n\t\"./group.js.map\": 1607,\n\t\"./healthcareservice\": 401,\n\t\"./healthcareservice.js\": 401,\n\t\"./healthcareservice.js.map\": 1608,\n\t\"./imagingobjectselection\": 402,\n\t\"./imagingobjectselection.js\": 402,\n\t\"./imagingobjectselection.js.map\": 1609,\n\t\"./imagingstudy\": 403,\n\t\"./imagingstudy.js\": 403,\n\t\"./imagingstudy.js.map\": 1610,\n\t\"./immunization\": 404,\n\t\"./immunization.js\": 404,\n\t\"./immunization.js.map\": 1611,\n\t\"./immunizationrecommendation\": 405,\n\t\"./immunizationrecommendation.js\": 405,\n\t\"./immunizationrecommendation.js.map\": 1612,\n\t\"./list\": 406,\n\t\"./list.js\": 406,\n\t\"./list.js.map\": 1613,\n\t\"./location\": 407,\n\t\"./location.js\": 407,\n\t\"./location.js.map\": 1614,\n\t\"./media\": 408,\n\t\"./media.js\": 408,\n\t\"./media.js.map\": 1615,\n\t\"./medication\": 409,\n\t\"./medication.js\": 409,\n\t\"./medication.js.map\": 1616,\n\t\"./medicationadministration\": 410,\n\t\"./medicationadministration.js\": 410,\n\t\"./medicationadministration.js.map\": 1617,\n\t\"./medicationdispense\": 411,\n\t\"./medicationdispense.js\": 411,\n\t\"./medicationdispense.js.map\": 1618,\n\t\"./medicationprescription\": 412,\n\t\"./medicationprescription.js\": 412,\n\t\"./medicationprescription.js.map\": 1619,\n\t\"./medicationstatement\": 413,\n\t\"./medicationstatement.js\": 413,\n\t\"./medicationstatement.js.map\": 1620,\n\t\"./messageheader\": 414,\n\t\"./messageheader.js\": 414,\n\t\"./messageheader.js.map\": 1621,\n\t\"./models\": 363,\n\t\"./models.js\": 363,\n\t\"./models.js.map\": 1622,\n\t\"./namingsystem\": 415,\n\t\"./namingsystem.js\": 415,\n\t\"./namingsystem.js.map\": 1623,\n\t\"./nutritionorder\": 416,\n\t\"./nutritionorder.js\": 416,\n\t\"./nutritionorder.js.map\": 1624,\n\t\"./observation\": 417,\n\t\"./observation.js\": 417,\n\t\"./observation.js.map\": 1625,\n\t\"./operationdefinition\": 418,\n\t\"./operationdefinition.js\": 418,\n\t\"./operationdefinition.js.map\": 1626,\n\t\"./operationoutcome\": 419,\n\t\"./operationoutcome.js\": 419,\n\t\"./operationoutcome.js.map\": 1627,\n\t\"./oralhealthclaim\": 420,\n\t\"./oralhealthclaim.js\": 420,\n\t\"./oralhealthclaim.js.map\": 1628,\n\t\"./order\": 421,\n\t\"./order.js\": 421,\n\t\"./order.js.map\": 1629,\n\t\"./orderresponse\": 422,\n\t\"./orderresponse.js\": 422,\n\t\"./orderresponse.js.map\": 1630,\n\t\"./organization\": 423,\n\t\"./organization.js\": 423,\n\t\"./organization.js.map\": 1631,\n\t\"./other\": 424,\n\t\"./other.js\": 424,\n\t\"./other.js.map\": 1632,\n\t\"./patient\": 425,\n\t\"./patient.js\": 425,\n\t\"./patient.js.map\": 1633,\n\t\"./paymentnotice\": 426,\n\t\"./paymentnotice.js\": 426,\n\t\"./paymentnotice.js.map\": 1634,\n\t\"./paymentreconciliation\": 427,\n\t\"./paymentreconciliation.js\": 427,\n\t\"./paymentreconciliation.js.map\": 1635,\n\t\"./pendedrequest\": 428,\n\t\"./pendedrequest.js\": 428,\n\t\"./pendedrequest.js.map\": 1636,\n\t\"./practitioner\": 429,\n\t\"./practitioner.js\": 429,\n\t\"./practitioner.js.map\": 1637,\n\t\"./procedure\": 430,\n\t\"./procedure.js\": 430,\n\t\"./procedure.js.map\": 1638,\n\t\"./procedurerequest\": 431,\n\t\"./procedurerequest.js\": 431,\n\t\"./procedurerequest.js.map\": 1639,\n\t\"./profile\": 432,\n\t\"./profile.js\": 432,\n\t\"./profile.js.map\": 1640,\n\t\"./provenance\": 433,\n\t\"./provenance.js\": 433,\n\t\"./provenance.js.map\": 1641,\n\t\"./query\": 434,\n\t\"./query.js\": 434,\n\t\"./query.js.map\": 1642,\n\t\"./questionnaire\": 435,\n\t\"./questionnaire.js\": 435,\n\t\"./questionnaire.js.map\": 1643,\n\t\"./questionnaireanswers\": 436,\n\t\"./questionnaireanswers.js\": 436,\n\t\"./questionnaireanswers.js.map\": 1644,\n\t\"./readjudicate\": 437,\n\t\"./readjudicate.js\": 437,\n\t\"./readjudicate.js.map\": 1645,\n\t\"./referralrequest\": 438,\n\t\"./referralrequest.js\": 438,\n\t\"./referralrequest.js.map\": 1646,\n\t\"./relatedperson\": 439,\n\t\"./relatedperson.js\": 439,\n\t\"./relatedperson.js.map\": 1647,\n\t\"./reversal\": 440,\n\t\"./reversal.js\": 440,\n\t\"./reversal.js.map\": 1648,\n\t\"./riskassessment\": 441,\n\t\"./riskassessment.js\": 441,\n\t\"./riskassessment.js.map\": 1649,\n\t\"./searchparameter\": 442,\n\t\"./searchparameter.js\": 442,\n\t\"./searchparameter.js.map\": 1650,\n\t\"./securityevent\": 443,\n\t\"./securityevent.js\": 443,\n\t\"./securityevent.js.map\": 1651,\n\t\"./slot\": 444,\n\t\"./slot.js\": 444,\n\t\"./slot.js.map\": 1652,\n\t\"./specimen\": 445,\n\t\"./specimen.js\": 445,\n\t\"./specimen.js.map\": 1653,\n\t\"./statusrequest\": 446,\n\t\"./statusrequest.js\": 446,\n\t\"./statusrequest.js.map\": 1654,\n\t\"./statusresponse\": 447,\n\t\"./statusresponse.js\": 447,\n\t\"./statusresponse.js.map\": 1655,\n\t\"./subscription\": 448,\n\t\"./subscription.js\": 448,\n\t\"./subscription.js.map\": 1656,\n\t\"./substance\": 449,\n\t\"./substance.js\": 449,\n\t\"./substance.js.map\": 1657,\n\t\"./supply\": 450,\n\t\"./supply.js\": 450,\n\t\"./supply.js.map\": 1658,\n\t\"./supportingdocumentation\": 451,\n\t\"./supportingdocumentation.js\": 451,\n\t\"./supportingdocumentation.js.map\": 1659,\n\t\"./valueset\": 452,\n\t\"./valueset.js\": 452,\n\t\"./valueset.js.map\": 1660\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 364;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\",\"check\":\"DropDown_check__2pubh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"App_display__2vneK\",\"graph\":\"App_graph__3EP_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathways_list\":\"PathwaysList_pathways_list__2WO5g\",\"header_title\":\"PathwaysList_header_title__7EM8s\",\"header_title__header\":\"PathwaysList_header_title__header__36yqh\",\"header_title__note\":\"PathwaysList_header_title__note__34zC8\",\"container\":\"PathwaysList_container__1SC5K\",\"assignedPathwayElement\":\"PathwaysList_assignedPathwayElement__2xpdU\",\"title\":\"PathwaysList_title__ccVmw\",\"numElements\":\"PathwaysList_numElements__1WAOk\",\"expand\":\"PathwaysList_expand__2v9Wx\",\"infoContainer\":\"PathwaysList_infoContainer__2q0Tn\",\"details\":\"PathwaysList_details__2kSzT\",\"pathway\":\"PathwaysList_pathway__1vqM1\",\"matchingElement\":\"PathwaysList_matchingElement__1SQoM\",\"controls\":\"PathwaysList_controls__vZmz8\",\"pathwayElement\":\"PathwaysList_pathwayElement__34hJh\",\"matchedElementsLabel\":\"PathwaysList_matchedElementsLabel__3cXeX\",\"pathwayListHeaderContainer\":\"PathwaysList_pathwayListHeaderContainer__2l2fi\"};"],"sourceRoot":""}