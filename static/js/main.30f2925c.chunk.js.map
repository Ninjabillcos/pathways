{"version":3,"sources":["components/PatientSnapshot/PatientSnapshot.module.scss","components/Header/Header.tsx","components/FHIRClient.tsx","components/PatientProvider.tsx","components/PatientSnapshot/PatientSnapshot.tsx","components/DropDown/DropDown.tsx","components/PathwayProvider.tsx","components/Navigation/Navigation.tsx","utils/patient.js","utils/fhirExtract.js","components/PatientRecord/PatientRecord.tsx","visualization/layout.ts","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","engine/cql-extractor.ts","utils/regexes.ts","engine/cql-to-elm.ts","engine/elm-executor.ts","engine/output-results.ts","engine/evaluate-patient.ts","components/Graph/Graph.tsx","components/PathwaysList/PathwaysList.tsx","components/PathwaysService/PathwaysService.tsx","components/App.tsx","utils/fontawesomeLibrary.js","index.js","components/Navigation/Navigation.module.scss","components/Header/Header.module.scss","components/Arrow/Arrow.module.scss","../node_modules/cql-execution/lib/fhir sync /^/.//.*$","components/PathwaysList/PathwaysList.module.scss","components/DropDown/DropDown.module.scss","camino-logo-dark.png","styles/index.module.scss","components/ExpandedNode/ExpandedNode.module.scss","components/Node/Node.module.scss","utils/ConfigManager.js"],"names":["module","exports","Header","props","className","classes","header","src","logo","alt","icon","FHIRClientContext","createContext","patient","FHIRClientProvider","client","children","Provider","value","PatientContext","PatientProvider","useContext","useState","currentPatient","setCurrentPatient","useEffect","read","then","usePatient","PatientSnapshot","name","useMemo","entry","find","n","use","given","join","family","getPatientName","address","city","state","filter","item","getPatientAddress","birthDate","gender","DropDown","options","label","id","visible","onChange","selectedValue","setSelectPathway","onChangeCallback","useCallback","dropdown","htmlFor","onClick","classNamePrefix","inputId","aria-label","PathwayContext","evaluatedPathway","setEvaluatedPathway","updateEvaluatedPathways","PathwayProvider","pathwayCtx","usePathwayContext","Navigation","evaluatedPathways","selectPathway","pathway","undefined","pathwayOptions","map","navigation","navigation__back","pathwayOption","ALL_RESOURCES_PATIENT_REFERENCE","mapperName","config","get","MapperClass","mappers","mapperInstance","applyMapping","bundle","execute","getEverythingManually","supportedResources","push","requests","forEach","resource","split","request","flat","pageLimit","result","length","catch","error","console","log","Promise","all","results","x","getEverythingRevInclude","onError","query","getResourceByType","patientRecord","resourceType","PatientRecord","resources","rows","graphLayoutProvider","layout","nodeDimensions","nodeNames","Object","keys","states","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","stateName","expanded","setNode","width","height","transitions","transition","condition","description","setEdge","nodeCoordinates","startNodeShift","node","nodeName","y","edges","e","edge","edgeName","v","w","text","start","end","points","p","layoutDagre","START","nodes","rank","NaN","horizontalPosition","parents","canMove","includes","initializeNodes","graph","HORIZONTAL_OFFSET","NODE_WIDTH","VERTICAL_OFFSET","NODE_HEIGHT","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","produceCoordinates","hPos","isNaN","i","hasOverlap","direction","Math","ceil","parentsOnHigherRank","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","isGuidanceState","action","ExpandedNodeField","title","styles","descTitle","desc","ExpandedNode","pathwayState","isActionable","isGuidance","documentation","comments","setComments","guidance","coding","medicationCodeableConcept","code","returnElements","key","system","href","target","rel","externalLink","display","procedure","performedPeriod","performedDateTime","Date","toLocaleDateString","renderGuidance","branch","observation","valueCoding","valueCodeableConcept","date","effectiveDateTime","toLocaleTimeString","renderBranch","defaultText","indexStyles","expandedNode","infoTable","commentsForm","button","preventDefault","accept","decline","NodeIcon","guidancePathwayState","Node","isOnPatientPath","isCurrentNode","xCoordinate","yCoordinate","onClickHandler","style","top","left","backgroundColorClass","onPatientPath","notOnPatientPath","currentNodeClass","current","expandedNodeClass","childCurrent","childOnPatientPath","childNotOnPatientPath","nodeClasses","nodeTitle","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","arr","d","fill","markerEnd","Arrow","arrowOnPatientPath","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","getFixture","filename","fetch","cql","cqlFormat","cqlBlock","resourceName","concat","cqlAdd","isConditional","extractMultipartBoundary","extractMultipartFileName","extractJSONContent","extractCQLInclude","url","executeElm","elm","libraries","lib","Library","Repository","executor","Executor","psource","PatientSource","FHIRv400","loadBundles","exec","nextStateRecommendation","conditionDescription","formatDocumentation","formatNextState","currentState","status","nextState","patientData","currentStateName","documentationResource","getConditionalNextState","retrieveResource","doc","evaluatePatientOnPathway","library","extractNavigationCQL","processCQLCommon","currentStatus","patientDocumentation","stateData","patientId","Patient","nextRecommendation","path","pathwayData","evaluatePathwayCriteria","criteria","elementName","extractCriteriaCQL","evaluationResult","Array","isArray","actual","match","criteriaResult","expected","criteriaData","resolve","reject","setTimeout","FHIRHelpers","gatherCQL","formdata","FormData","append","main","method","body","headers","boundary","obj","oldArray","line","elmName","JSON","parse","convertCQL","Accept","json","convertBasicCQL","elmResults","patientResults","patientIds","isEdgeOnPatientPath","startIndex","endIndex","interactive","expandCurrentNode","graphElement","useRef","getWidth","window","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","pathwayResults","_setPath","setPath","parentWidth","parentElement","clientWidth","getGraphLayout","graphLayout","setLayout","maxHeight","values","max","initialExpandedState","curr","_setExpanded","setExpanded","expand","prevState","cancel","r","currentNode","heightOffset","maxWidth","l","ref","position","docResource","xmlns","zIndex","overflow","PathwaysListElement","callback","isVisible","setIsVisible","setCriteria","chevron","role","numElements","infoContainer","details","matchingElement","indexClasses","controls","PathwaysList","service","pathways_list","container","header_title","header_title__header","header_title__note","useGetPathwaysService","setResult","getPathways","response","listOfFiles","f","typedFetch","listOfPromises","pathwaysList","payload","App","demo","patientRecords","setPatientRecords","currentPathway","setCurrentPathway","setEvaluatedPathways","setClient","demoRecords","FHIR","oauth2","init","clientId","scope","statement","rest","operation","definition","reference","getEverything","revIncludeResources","type","searchRevInclude","searchInclude","filters","searchParam","searchParams","getPatientRecord","records","every","setEvaluatedPathwayCallback","scrollTo","newList","currentPathwayProvider","add","faChevronLeft","faChevronDown","faChevronUp","faCog","faUserCircle","faExternalLinkAlt","faPrescriptionBottleAlt","faCapsules","faSyringe","faMicroscope","faPlay","faPlus","faMinus","faEdit","rootElement","document","getElementById","ReactDOM","render","exact","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","this","global","CONFIG","defaultValue","parts","context","conf"],"mappings":"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ACtB,yBAAK1E,UAAWC,IAAQ,2BACtB,kBAAC,IAAD,CAAiBK,KAAK,eAAeN,UAAWC,IAAQ0E,mBACxD,kBAAC,EAAD,OAGF,yBAAK3E,UAAWC,IAAQ,4BACtB,kBAAC,EAAD,CACE6C,MAAM,WACNC,GAAG,eACHC,SAAUqB,EACVxB,QAAS2B,EACTtB,cAAepC,EACfqC,iBAAkBA,EAClBF,SA1BgB,SAAC2B,GACD,OAAlBA,GAA0B,UAAWA,GACvCX,EAAWH,oBAAoBc,EAAc9D,a,kBCzB7C+D,EAAkC,CACtC,0BACA,2BACA,eACA,kBACA,4BACA,0BACA,yBACA,mBACA,uBACA,8BACA,oBACA,wBACA,6BACA,mBACA,wBACA,oBACA,eACA,uBACA,6BACA,2BACA,eACA,sBACA,2BACA,yBACA,oBACA,sBACA,wBACA,yBACA,6BACA,6BACA,eACA,iBACA,eACA,aACA,aACA,gBACA,0BACA,mBACA,mBACA,8BACA,gCACA,+BACA,iCACA,gCACA,mBACA,iBACA,yBACA,0BACA,6BACA,uBACA,2BACA,uBACA,0BACA,wBACA,0BACA,4BACA,gCACA,+BACA,gCACA,+BACA,oBACA,wBACA,qBACA,mBACA,0BACA,2BACA,4BACA,6BACA,4BACA,oBACA,sBACA,2BACA,6BACA,8BACA,4BACA,6BACA,iBACA,cACA,yBACA,wBACA,eACA,sBACA,wBACA,sBACA,6BACA,8BACA,4BACA,8BACA,6BACA,8BACA,+BACA,mCACA,4BACA,mCACA,8BACA,6BACA,qCACA,gBACA,gBACA,wBACA,oBACA,sBACA,uBACA,qBACA,sBACA,eACA,YACA,cACA,oBACA,sBACA,uBACA,sBACA,qBACA,+BACA,qCACA,yBACA,2BACA,2BACA,eACA,eACA,eACA,cACA,+BACA,6BACA,4BACA,4BACA,oBACA,6BACA,4BACA,gCACA,2BACA,2BACA,+BACA,+BACA,6BACA,2BACA,0BACA,6BACA,wBACA,6BACA,0BACA,yBACA,iBACA,2BACA,sBACA,yBACA,iBACA,sBACA,uBACA,mBACA,kBACA,m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","file":"static/js/main.30f2925c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"patient-snapshot\":\"PatientSnapshot_patient-snapshot__3G6b1\",\"patient-snapshot__info\":\"PatientSnapshot_patient-snapshot__info__3vTT1\",\"patient-name\":\"PatientSnapshot_patient-name__CoQIS\",\"patient-snapshot__photo\":\"PatientSnapshot_patient-snapshot__photo__1xK6a\",\"patient-snapshot__list\":\"PatientSnapshot_patient-snapshot__list__28zi9\"};","import React, { FC } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport classes from './Header.module.scss';\n\ninterface HeaderProps {\n  logo: string;\n}\n\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  return (\n    <header className={classes.header}>\n      <img src={props.logo} alt=\"logo\" />\n      <FontAwesomeIcon\n        icon=\"cog\"\n        className={`${classes['settings-logo']} ${classes['header-right']}`}\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwaysClient } from 'pathways-client';\n\ninterface FHIRClientProviderProps {\n  client: PathwaysClient; // TODO: fhirclient.Client\n  children: ReactNode;\n}\n\nexport const FHIRClientContext = createContext({ patient: {} });\n\nexport const FHIRClientProvider: FC<FHIRClientProviderProps> = ({ client, children }) => (\n  <FHIRClientContext.Provider value={client}>{children}</FHIRClientContext.Provider>\n);\n\nexport const useFHIRClient = (): PathwaysClient => useContext(FHIRClientContext);\n","import React, { FC, createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { useFHIRClient } from './FHIRClient';\n\ninterface PatientProviderProps {\n  children: ReactNode;\n  patient?: fhir.Patient;\n}\n\nexport const PatientContext = createContext<fhir.Patient | null>(null);\n\nexport const PatientProvider: FC<PatientProviderProps> = ({ children, patient }) => {\n  const client = useFHIRClient();\n  const [currentPatient, setCurrentPatient] = useState<fhir.Patient | null>(patient || null);\n\n  useEffect(() => {\n    client?.patient?.read?.().then((patient: fhir.Patient) => setCurrentPatient(patient));\n  }, [client]);\n\n  return currentPatient == null ? (\n    <div>Loading...</div>\n  ) : (\n    <PatientContext.Provider value={currentPatient}>{children}</PatientContext.Provider>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const usePatient = (): fhir.Patient => useContext(PatientContext)!;\n","import React, { FC, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { usePatient } from '../PatientProvider';\n\nimport classes from './PatientSnapshot.module.scss';\n\nconst getPatientName = (name: Array<fhir.HumanName> = []): string => {\n  const entry = name.find(n => n.use === 'official') || name[0];\n  return entry ? `${(entry.given || []).join(' ')} ${entry.family}` : 'No name';\n};\n\nconst getPatientAddress = (address: Array<fhir.Address> = []): string => {\n  const entry = address[0];\n  return entry ? [entry.city, entry.state].filter(item => !!item).join(', ') : 'No Address';\n};\n\nconst PatientSnapshot: FC<{}> = () => {\n  const patient = usePatient();\n\n  const name = useMemo(() => getPatientName(patient.name), [patient]);\n  const address = useMemo(() => getPatientAddress(patient.address), [patient]);\n\n  return (\n    <div className={classes['patient-snapshot']}>\n      <FontAwesomeIcon icon=\"user-circle\" className={classes['patient-snapshot__photo']} />\n\n      <div className={classes['patient-snapshot__info']}>\n        <div className={classes['patient-name']}>{name}</div>\n\n        <ul className={classes['patient-snapshot__list']}>\n          <li>DOB: {patient.birthDate}</li>\n          <li>Admin. Sex: {patient.gender}</li>\n          <li>Location: {address}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientSnapshot;\n","import React, { FC, useCallback } from 'react';\nimport Select from 'react-select';\n\nimport classes from './DropDown.module.scss';\nimport { Option } from 'option';\n\ninterface Props {\n  label?: string;\n  id: string;\n  visible: boolean;\n  options: Array<Option>;\n  onChange?: (value: Option | ReadonlyArray<Option> | null) => void;\n  selectedValue: Option | ReadonlyArray<Option> | null;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst DropDown: FC<Props> = ({\n  options,\n  label,\n  id,\n  visible,\n  onChange,\n  selectedValue,\n  setSelectPathway\n}: Props) => {\n  const onChangeCallback = useCallback(\n    (value: Option | ReadonlyArray<Option> | null | undefined) => {\n      if (onChange) onChange(value == null ? null : value);\n    },\n    [onChange]\n  );\n\n  if (visible)\n    return (\n      <div className={classes.dropdown}>\n        <div>\n          <label htmlFor={id}>{label}</label>\n          <button\n            onClick={(): void => {\n              setSelectPathway(true);\n            }}\n          >\n            Explore Pathways\n          </button>\n        </div>\n        <Select\n          classNamePrefix=\"DropDown\"\n          inputId={id}\n          value={selectedValue}\n          onChange={onChangeCallback}\n          options={options}\n          aria-label={label}\n        />\n      </div>\n    );\n  else return <div></div>;\n};\n\nexport default DropDown;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwayContextInterface } from 'pathways-model';\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n  pathwayCtx: PathwayContextInterface;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({\n  evaluatedPathway: null,\n  setEvaluatedPathway: () => {\n    //do nothing\n  },\n  updateEvaluatedPathways: () => {\n    //do nothing\n  }\n});\n\nexport const PathwayProvider: FC<PathwayProviderProps> = ({ children, pathwayCtx }) => {\n  return <PathwayContext.Provider value={pathwayCtx}>{children}</PathwayContext.Provider>;\n};\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport PatientSnapshot from 'components/PatientSnapshot';\nimport DropDown from 'components/DropDown';\n\nimport classes from './Navigation.module.scss';\nimport { EvaluatedPathway } from 'pathways-model';\nimport { Option } from 'option';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\ninterface Props {\n  evaluatedPathways: EvaluatedPathway[];\n  selectPathway: boolean;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst Navigation: FC<Props> = ({ evaluatedPathways, selectPathway, setSelectPathway }) => {\n  const pathwayCtx = usePathwayContext();\n  const pathway = pathwayCtx.evaluatedPathway?.pathway;\n  const value =\n    pathway === undefined ? null : { label: pathway.name, value: pathwayCtx.evaluatedPathway };\n\n  const onChangeHandler = (pathwayOption: Option | ReadonlyArray<Option> | null): void => {\n    if (pathwayOption !== null && 'value' in pathwayOption) {\n      pathwayCtx.setEvaluatedPathway(pathwayOption.value);\n    }\n  };\n\n  const pathwayOptions = evaluatedPathways.map(evaluatedPathway => ({\n    label: evaluatedPathway.pathway.name,\n    value: evaluatedPathway\n  }));\n\n  return (\n    <nav className={classes.navigation}>\n      <div className={classes['navigation__left-panel']}>\n        <FontAwesomeIcon icon=\"chevron-left\" className={classes.navigation__back} />\n        <PatientSnapshot />\n      </div>\n\n      <div className={classes['navigation__right-panel']}>\n        <DropDown\n          label=\"Pathway:\"\n          id=\"patient-view\"\n          visible={!selectPathway}\n          options={pathwayOptions}\n          selectedValue={value}\n          setSelectPathway={setSelectPathway}\n          onChange={onChangeHandler}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","const ALL_RESOURCES_PATIENT_REFERENCE = [\n  'ReferralRequest:patient',\n  'DocumentManifest:patient',\n  'Goal:patient',\n  'Consent:patient',\n  'DocumentReference:patient',\n  'ImagingManifest:patient',\n  'RiskAssessment:patient',\n  'CareTeam:patient',\n  'ImagingStudy:patient',\n  'FamilyMemberHistory:patient',\n  'Encounter:patient',\n  'DeviceRequest:patient',\n  'AllergyIntolerance:patient',\n  'CarePlan:patient',\n  'EpisodeOfCare:patient',\n  'Procedure:patient',\n  'List:patient',\n  'Immunization:patient',\n  'VisionPrescription:patient',\n  'ProcedureRequest:patient',\n  'Flag:patient',\n  'Observation:patient',\n  'DiagnosticReport:patient',\n  'NutritionOrder:patient',\n  'Condition:patient',\n  'Composition:patient',\n  'DetectedIssue:patient',\n  'SupplyDelivery:patient',\n  'ClinicalImpression:patient',\n  'DeviceUseStatement:patient',\n  'Task:subject',\n  'Task:requester',\n  'Task:patient',\n  'Task:owner',\n  'Task:focus',\n  'Task:based-on',\n  'SupplyRequest:requester',\n  'Specimen:subject',\n  'Specimen:patient',\n  'ServiceDefinition:successor',\n  'ServiceDefinition:predecessor',\n  'ServiceDefinition:depends-on',\n  'ServiceDefinition:derived-from',\n  'ServiceDefinition:composed-of',\n  'Sequence:patient',\n  'Schedule:actor',\n  'RiskAssessment:subject',\n  'ResearchSubject:patient',\n  'ResearchSubject:individual',\n  'RequestGroup:subject',\n  'RequestGroup:participant',\n  'RequestGroup:patient',\n  'RequestGroup:definition',\n  'RelatedPerson:patient',\n  'ReferralRequest:subject',\n  'ReferralRequest:requester',\n  'QuestionnaireResponse:subject',\n  'QuestionnaireResponse:source',\n  'QuestionnaireResponse:patient',\n  'QuestionnaireResponse:author',\n  'Provenance:target',\n  'Provenance:entity-ref',\n  'Provenance:patient',\n  'Provenance:agent',\n  'ProcessResponse:request',\n  'ProcedureRequest:subject',\n  'ProcedureRequest:replaces',\n  'ProcedureRequest:performer',\n  'ProcedureRequest:based-on',\n  'Procedure:subject',\n  'Procedure:performer',\n  'PlanDefinition:successor',\n  'PlanDefinition:predecessor',\n  'PlanDefinition:derived-from',\n  'PlanDefinition:depends-on',\n  'PlanDefinition:composed-of',\n  'Person:patient',\n  'Person:link',\n  'PaymentNotice:response',\n  'PaymentNotice:request',\n  'Patient:link',\n  'Observation:subject',\n  'Observation:performer',\n  'MessageHeader:focus',\n  'MedicationStatement:source',\n  'MedicationStatement:subject',\n  'MedicationRequest:subject',\n  'MedicationRequest:requester',\n  'MedicationDispense:subject',\n  'MedicationDispense:receiver',\n  'MedicationDispense:performer',\n  'MedicationAdministration:subject',\n  'MedicationRequest:patient',\n  'MedicationAdministration:patient',\n  'MedicationStatement:patient',\n  'MedicationDispense:patient',\n  'MedicationAdministration:performer',\n  'Media:subject',\n  'Media:patient',\n  'MeasureReport:patient',\n  'Measure:successor',\n  'Measure:predecessor',\n  'Measure:derived-from',\n  'Measure:depends-on',\n  'Measure:composed-of',\n  'List:subject',\n  'List:item',\n  'List:source',\n  'Library:successor',\n  'Library:predecessor',\n  'Library:derived-from',\n  'Library:composed-of',\n  'Library:depends-on',\n  'ImplementationGuide:resource',\n  'ImmunizationRecommendation:patient',\n  'ImagingManifest:author',\n  'GuidanceResponse:subject',\n  'GuidanceResponse:patient',\n  'Group:member',\n  'Goal:subject',\n  'Flag:subject',\n  'Flag:author',\n  'ExplanationOfBenefit:patient',\n  'ExplanationOfBenefit:payee',\n  'EnrollmentRequest:subject',\n  'EnrollmentRequest:patient',\n  'Encounter:subject',\n  'EligibilityRequest:patient',\n  'DocumentReference:subject',\n  'DocumentReference:related-ref',\n  'DocumentReference:author',\n  'DocumentManifest:subject',\n  'DocumentManifest:related-ref',\n  'DocumentManifest:content-ref',\n  'DocumentManifest:recipient',\n  'DiagnosticReport:subject',\n  'DocumentManifest:author',\n  'DeviceUseStatement:subject',\n  'DeviceRequest:subject',\n  'DeviceRequest:priorrequest',\n  'DeviceRequest:performer',\n  'DeviceRequest:based-on',\n  'Device:patient',\n  'DetectedIssue:implicated',\n  'Coverage:subscriber',\n  'Coverage:policy-holder',\n  'Coverage:payor',\n  'Contract:term-topic',\n  'Coverage:beneficiary',\n  'Contract:subject',\n  'Contract:signer',\n  'Contract:patient',\n  'Contract:agent',\n  'Consent:data',\n  'Consent:consentor',\n  'Consent:actor',\n  'Condition:subject',\n  'Condition:evidence-detail',\n  'Condition:asserter',\n  'Composition:subject',\n  'Composition:entry',\n  'Composition:author',\n  'Composition:attester',\n  'CommunicationRequest:subject',\n  'CommunicationRequest:sender',\n  'CommunicationRequest:requester',\n  'CommunicationRequest:recipient',\n  'CommunicationRequest:patient',\n  'CommunicationRequest:based-on',\n  'Communication:subject',\n  'Communication:recipient',\n  'Communication:sender',\n  'Communication:patient',\n  'Communication:part-of',\n  'Communication:based-on',\n  'ClinicalImpression:subject',\n  'ClaimResponse:patient',\n  'Claim:payee',\n  'Claim:patient',\n  'ChargeItem:subject',\n  'ChargeItem:patient',\n  'ChargeItem:participant-actor',\n  'ChargeItem:enterer',\n  'CareTeam:subject',\n  'CareTeam:participant',\n  'CarePlan:performer',\n  'CarePlan:subject',\n  'BodySite:patient',\n  'Basic:subject',\n  'Basic:patient',\n  'Basic:author',\n  'AuditEvent:patient',\n  'AuditEvent:entity',\n  'AuditEvent:agent',\n  'AppointmentResponse:patient',\n  'AppointmentResponse:actor',\n  'Appointment:patient',\n  'Appointment:actor',\n  'AllergyIntolerance:recorder',\n  'AllergyIntolerance:asserter',\n  'AdverseEvent:subject',\n  'AdverseEvent:recorder',\n  'ActivityDefinition:successor',\n  'ActivityDefinition:predecessor',\n  'ActivityDefinition:depends-on',\n  'ActivityDefinition:derived-from',\n  'ActivityDefinition:composed-of',\n  'Account:subject',\n  'Account:patient'\n];\n\nexport { ALL_RESOURCES_PATIENT_REFERENCE };\n","import { ALL_RESOURCES_PATIENT_REFERENCE } from './patient';\n\nimport { mappers } from 'fhir-mapper';\nimport config from './ConfigManager';\n\nconst mapperName = config.get('mapper');\nconst MapperClass = mappers[mapperName];\nconst mapperInstance = MapperClass ? new MapperClass() : null;\n\nconst applyMapping = (bundle) => {\n  if (mapperInstance && bundle)\n  {\n    bundle = mapperInstance.execute(bundle);\n  }\n  return bundle;\n}\n\n/**\n * There are slight discrepencies between the $everything, revinclude, and manual methods that affect the resources that might be returned\n * @param {Object} client - the fhir client\n */\nfunction getPatientRecord(client) {\n  return client.request(`/metadata`).then(statement => {\n    if (\n      statement.rest[0].operation.find(\n        e => (e.definition.reference || e.definition) === 'OperationDefinition/Patient--everything'\n      )\n    ) {\n      // supports patient everything\n      return getEverything(client).then(bundle => applyMapping(bundle));\n    } else {\n      console.log('Cannot use $everything, using reverse includes instead');\n      const supportedResources = [];\n      let revIncludeResources = [];\n      statement.rest[0].resource.forEach(resource => {\n        if (resource.type === 'Patient') {\n          if (resource.searchRevInclude) {\n            revIncludeResources = resource.searchRevInclude;\n          }\n        } else if (resource.searchInclude) {\n          const filters = resource.searchInclude.filter(target => {\n            return target === `${resource.type}:patient` || target === `${resource.type}:subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(filters[0]);\n          }\n        } else if (resource.searchParam) {\n          const filters = resource.searchParams.filter(target => {\n            return target.name === `patient` || target.name === `subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(`${resource.type}:${filters[0].name}`);\n          }\n        }\n      });\n      if (revIncludeResources.length > 0) {\n        return getEverythingRevInclude(client, revIncludeResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else if (supportedResources.length > 0) {\n        return getEverythingRevInclude(client, supportedResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else {\n        console.log('Cannot use reverse includes, retrieving all resources manually from predefined list');\n        return getEverythingManually(client, ALL_RESOURCES_PATIENT_REFERENCE).then(bundle => applyMapping(bundle));\n      }\n    }\n  });\n}\n\n/**\n * Uses the $everything operation.  The server takes care of constructing the bundle that gets returned, so\n * it is generally not possible to know how it is deciding what resources to send.\n */\nfunction getEverything(client) {\n  return client.request(`/Patient/${client.patient.id}/$everything`, { flat: true, pageLimit: 0 }).then(bundle => {\n    return bundle;\n  });\n}\n\n/**\n * Uses regular FHIR search queries on every resource that is supported and can refer to a patient.\n * Which resources it queries is dependent on info available in the Capability Statement, and\n * it only provides a one layer deep search, so the results might be different from $everything.\n */\nfunction getEverythingManually(client, supportedResources) {\n  supportedResources.push('Patient:_id');\n  const requests = [];\n  supportedResources.forEach(resource => {\n    resource = resource.split(':');\n    const request = client\n      .request(`${resource[0]}?${resource[1]}=${client.patient.id}`, { flat: true, pageLimit: 0 })\n      .then(result => {\n        if (result.length > 0) {\n          return result;\n        }\n      })\n      .catch(error => {\n        console.log(`failed to fetch ${resource}`);\n        console.error(error);\n      });\n    requests.push(request);\n  });\n\n  return Promise.all(requests).then(results => {\n    const bundle = results\n      .filter(x => {\n        return x;\n      })\n      .flat();\n    return bundle;\n  });\n}\n\n/**\n * Uses the _revinclude FHIR search parameter to request the patient resource and any resource that refers to it.\n * The list of resources it checks is retrieved from the Capability Statement.  It is slightly better than the manual\n * method since it does everything in one request.\n */\nfunction getEverythingRevInclude(client, supportedResources, onError) {\n  const query = supportedResources.join('&_revinclude=');\n  return client\n    .request(`/Patient?_id=${client.patient.id}&_revinclude=${query}`, { flat: true })\n    .then(result => {\n      return result;\n    })\n    .catch(error => {\n      console.log('Reverse Include query failed, manually fetching resources instead.');\n      console.error(error);\n      onError(client, supportedResources);\n    });\n}\n\nexport { getPatientRecord };\n","import React, { FC } from 'react';\nimport { usePatient } from '../PatientProvider';\n\nimport {\n  AllergiesVisualizer,\n  CarePlansVisualizer,\n  ConditionsVisualizer,\n  EncountersVisualizer,\n  ImmunizationsVisualizer,\n  MedicationsVisualizer,\n  ObservationsVisualizer,\n  PatientVisualizer,\n  ProceduresVisualizer,\n  ReportsVisualizer\n} from 'fhir-visualizers';\n\ntype PatientRecordProps = {\n  resources: ReadonlyArray<fhir.DomainResource>;\n};\n\nconst getResourceByType = (\n  patientRecord: ReadonlyArray<fhir.DomainResource>,\n  resourceType: string\n): ReadonlyArray<object> => {\n  return patientRecord.filter(resource => resource.resourceType === resourceType);\n};\n\nconst PatientRecord: FC<PatientRecordProps> = ({ resources }) => {\n  const patient = usePatient();\n\n  return (\n    <div>\n      <PatientVisualizer patient={patient} />\n      <ConditionsVisualizer rows={getResourceByType(resources, 'Condition')} />\n      <ObservationsVisualizer rows={getResourceByType(resources, 'Observation')} />\n      <ReportsVisualizer rows={getResourceByType(resources, 'DiagnosticReport')} />\n      <MedicationsVisualizer rows={getResourceByType(resources, 'MedicationRequest')} />\n      <AllergiesVisualizer rows={getResourceByType(resources, 'AllergyIntolerance')} />\n      <CarePlansVisualizer rows={getResourceByType(resources, 'CarePlan')} />\n      <ProceduresVisualizer rows={getResourceByType(resources, 'Procedure')} />\n      <EncountersVisualizer rows={getResourceByType(resources, 'Encounter')} />\n      <ImmunizationsVisualizer rows={getResourceByType(resources, 'Immunization')} />\n    </div>\n  );\n};\n\nexport default PatientRecord;\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const expanded = nodeDimensions[stateName];\n\n    if (expanded) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: expanded.width,\n        height: expanded.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, useState } from 'react';\nimport { GuidanceState, DocumentationResource, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './ExpandedNode.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport { isBranchState } from 'utils/nodeUtils';\n\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState | State;\n  isActionable: boolean;\n  isGuidance: boolean;\n  documentation: DocumentationResource | undefined;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = ({\n  pathwayState,\n  isActionable,\n  isGuidance,\n  documentation\n}) => {\n  const [comments, setComments] = useState<string>('');\n\n  const guidance = isGuidance && renderGuidance(pathwayState as GuidanceState, documentation);\n  const branch = isBranchState(pathwayState) && renderBranch(documentation);\n\n  const defaultText =\n    `The patient and I discussed the treatment plan, ` +\n    `risks, benefits and alternatives.  The patient ` +\n    `expressed understanding and wants to proceed.`;\n\n  return (\n    <div className={indexStyles.expandedNode}>\n      <table className={styles.infoTable}>\n        <tbody>{guidance || branch}</tbody>\n      </table>\n      {isActionable && (\n        <form className={styles.commentsForm}>\n          <label>Comments:</label>\n          <button\n            className={indexStyles.button}\n            onClick={(e): void => {\n              e.preventDefault();\n              if (!comments.includes(defaultText)) setComments(comments + defaultText);\n            }}\n          >\n            Use Default Text\n          </button>\n          <textarea\n            className={styles.comments}\n            value={comments}\n            onChange={(e): void => setComments(e.target.value)}\n          ></textarea>\n          <button\n            className={`${styles.accept} ${indexStyles.button}`}\n            onClick={(e): void => e.preventDefault()}\n          >\n            Accept\n          </button>\n          <button\n            className={`${styles.decline} ${indexStyles.button}`}\n            onClick={(e): void => e.preventDefault()}\n          >\n            Decline\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction renderBranch(documentation: DocumentationResource | undefined): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Observation': {\n        const observation = documentation.resource as fhir.Observation;\n\n        const valueCoding = observation.valueCodeableConcept?.coding;\n        valueCoding &&\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"ValueSystem\"\n              title=\"System\"\n              description={\n                <>\n                  {valueCoding[0].system}\n                  <a href={valueCoding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon=\"external-link-alt\" className={styles.externalLink} />\n                  </a>\n                </>\n              }\n            />,\n            <ExpandedNodeField key=\"ValueCode\" title=\"Code\" description={valueCoding[0].code} />,\n            <ExpandedNodeField\n              key=\"ValueDisplay\"\n              title=\"Display\"\n              description={valueCoding[0].display}\n            />\n          );\n\n        const date = observation.effectiveDateTime;\n        date &&\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Date\"\n              title=\"Date\"\n              description={\n                new Date(date).toLocaleDateString('en-us') +\n                ' ' +\n                new Date(date).toLocaleTimeString('en-us')\n              }\n            />\n          );\n      }\n    }\n  } else {\n    returnElements.push(\n      <ExpandedNodeField\n        key=\"value\"\n        title=\"Value\"\n        description={\n          <>\n            missing data\n            <a href={'example.com'} rel=\"noopener noreferrer\">\n              <FontAwesomeIcon icon=\"edit\" className={styles.externalLink} />\n            </a>\n          </>\n        }\n      />\n    );\n  }\n  return returnElements;\n}\n\nfunction renderGuidance(\n  pathwayState: GuidanceState,\n  documentation: DocumentationResource | undefined\n): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding =\n    'medicationCodeableConcept' in resource\n      ? resource.medicationCodeableConcept.coding\n      : resource.code.coding;\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding[0].system}\n          <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon=\"external-link-alt\" className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding[0].display} />\n  ];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Procedure': {\n        const procedure = documentation.resource as fhir.Procedure;\n        const start =\n          (procedure.performedPeriod && procedure.performedPeriod.start) ||\n          procedure.performedDateTime;\n        const end = procedure.performedPeriod && procedure.performedPeriod.end;\n        if (start) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Start\"\n              title=\"Start\"\n              description={new Date(start).toLocaleDateString('en-us')}\n            />\n          );\n        }\n\n        if (end) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"End\"\n              title=\"End\"\n              description={new Date(end).toLocaleDateString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n    }\n  }\n  return returnElements;\n}\n\nexport default ExpandedNode;\n","import React, { FC } from 'react';\nimport { GuidanceState, State, DocumentationResource } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport classes from './Node.module.scss';\nimport nodeClasses from 'styles/index.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\ninterface NodeProps {\n  pathwayState: State;\n  documentation: DocumentationResource | undefined;\n  isOnPatientPath: boolean;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClickHandler?: () => void;\n}\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst Node: FC<NodeProps> = ({\n  pathwayState,\n  documentation,\n  isOnPatientPath,\n  isCurrentNode,\n  xCoordinate,\n  yCoordinate,\n  expanded = false,\n  onClickHandler\n}) => {\n  const { label } = pathwayState;\n  const style = {\n    top: yCoordinate,\n    left: xCoordinate\n  };\n  const backgroundColorClass = isOnPatientPath ? classes.onPatientPath : classes.notOnPatientPath;\n  const currentNodeClass = isCurrentNode ? classes.current : '';\n  const expandedNodeClass = isCurrentNode\n    ? classes.childCurrent\n    : isOnPatientPath\n    ? classes.childOnPatientPath\n    : classes.childNotOnPatientPath;\n  const isGuidance = isGuidanceState(pathwayState);\n  return (\n    <div\n      className={`${classes.node} ${backgroundColorClass} ${expanded &&\n        nodeClasses.expanded} ${currentNodeClass}`}\n      style={style}\n    >\n      <div className={nodeClasses.nodeTitle} onClick={onClickHandler}>\n        <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n        {label}\n      </div>\n      {expanded && (\n        <div className={`${classes.expandedNode} ${expandedNodeClass}`}>\n          <ExpandedNode\n            pathwayState={pathwayState as GuidanceState}\n            isActionable={isCurrentNode}\n            isGuidance={isGuidance}\n            documentation={documentation}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = 'microscope';\n  if (pathwayState.label === 'Start') icon = 'play';\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = 'prescription-bottle-alt';\n      else if (resourceType === 'MedicationAdministration') icon = 'capsules';\n      else if (resourceType === 'Procedure') icon = 'syringe';\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={classes.icon} />;\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  isOnPatientPath: boolean;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, isOnPatientPath, widthOffset }) => {\n  const className = isOnPatientPath ? styles.arrowOnPatientPath : styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import { Pathway, State } from 'pathways-model';\n\nexport interface CqlObject {\n  main: string;\n  libraries: Library;\n}\n\nexport interface Library {\n  [name: string]: string; // should probably have an object for expected ELM structure.\n}\nexport function getFixture(filename: string): Promise<string> {\n  return fetch(`./static/cql/${filename}`).then(cql => cql.text());\n}\n\n/**\n * Function to format each block from the pathway in CQL format\n * @param cqlBlock - block of CQL code from the pathway\n * @param resourceName - Name of the CQL resource block to be defined\n * @return the CQL code formatted pretty with the define line\n */\nfunction cqlFormat(cqlBlock: string, resourceName: string): string {\n  let formattedBlock = '';\n\n  // Definition of CQL block\n  const line1 = 'define \"' + resourceName + '\":\\n\\t';\n\n  // Build the formatted block\n  formattedBlock = line1.concat(cqlBlock);\n  return formattedBlock;\n}\n\n/**\n * Helper function to add the cql block to the completed cql\n * with the correct formatting\n * @param cql - complete cql string\n * @param cqlBlock - current cql block to append to the cql\n * @return the cql with the cql block appended correctly\n */\nfunction cqlAdd(cql: string, cqlBlock: string): string {\n  return cql.concat('\\n', '\\n', cqlBlock);\n}\n\n/**\n * Helper function to determine if a state has a conditional transition\n * @param state - the JSON object of the desired state on the pathway\n * @return true if state is a conditional transition and false\n *                   otherwise\n */\nfunction isConditional(state: State): boolean {\n  if ('transitions' in state) {\n    return state.transitions.length > 1 ? true : false;\n  } else return false;\n}\n\n/**\n * Function to extract the CQL code from each state in the pathway and build\n * the CQL code to execute\n * @param pathway - the JSON object of the entire pathway\n * @return a string of the CQL code for the navigational nodes in the pathway\n */\nexport function extractNavigationCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const stateName in pathway.states) {\n      const state = pathway.states[stateName];\n      if ('cql' in state) {\n        const cqlBlock1 = state.cql;\n        const nextBlock1 = cqlFormat(cqlBlock1, stateName);\n        cql = cqlAdd(cql, nextBlock1);\n      } else if (isConditional(state)) {\n        for (const transition of state.transitions) {\n          const condition = transition.condition;\n          if (condition) {\n            const nextBlock2 = cqlFormat(condition.cql, condition.description);\n            cql = cqlAdd(cql, nextBlock2);\n          }\n        }\n      }\n    }\n\n    return cql;\n  });\n}\n\n/**\n * Extract the CQL statements from the `criteria` section of the pathway\n * into a snippet ready to be converted to ELM.\n * @param pathway - the entire pathway object\n * @return a string of the CQL for the criteria in the pathway\n */\nexport function extractCriteriaCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const criteria of pathway.criteria) {\n      const cqlBlock1 = criteria.cql;\n      const nextBlock1 = cqlFormat(cqlBlock1, criteria.elementName);\n      cql = cqlAdd(cql, nextBlock1);\n    }\n\n    return cql;\n  });\n}\n","// sample header= \"multipart/form-data;boundary=Boundary_1\"\n// get the part after \"boundary=\" and before any subsequent ;\nexport const extractMultipartBoundary = /.*;boundary=(Boundary.*);?.*/g;\n\nexport const extractMultipartFileName = /Content-Disposition: form-data; name=\"([^\"]+)\"/;\n\n// eveything between { } including newlines. [^] is like . but matches newline\nexport const extractJSONContent = /(\\{[^]*\\})/;\n\nexport const extractCQLInclude = /include .* called (.*)/g;\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","/* eslint-disable max-len */\nimport { ElmResults } from 'pathways-model';\nimport { Library, Executor, Repository } from 'cql-execution';\nimport { PatientSource } from 'cql-exec-fhir';\n\n/**\n * Engine function that takes in a patient file (JSON) and an ELM file, running the patient against the ELM file\n * @param patient - FHIR bundle containing patient's record\n * @param elm - ELM structure (previosuly converted from CQL) on which the patient will be run.\n * @return returns a JSON object which is the result of analyzing the patient against the elm file\n */\nexport default function executeElm(patient: object, elm: object, libraries?: object): ElmResults {\n  let lib;\n  if (libraries) {\n    lib = new Library(elm, new Repository(libraries));\n  } else {\n    lib = new Library(elm);\n  }\n\n  const executor = new Executor(lib);\n  const psource = new PatientSource.FHIRv400(patient);\n  psource.loadBundles(patient);\n  const result = executor.exec(psource);\n  return result;\n}\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport {\n  Pathway,\n  PathwayResults,\n  PatientData,\n  CriteriaResult,\n  DocumentationResource,\n  State\n} from 'pathways-model';\n\ninterface StateData {\n  documentation: DocumentationResource | string | null;\n  nextState: string | null;\n  status: string;\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the patient's pathway\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns a JSON object describing where the patient is on the given pathway\n *  {\n *    currentState - the name of the state patient is currently in\n *    currentStatus - the status of the patient in the current state (from FHIR resource)\n *          A status of unknown could be the resource returned an unknown status or the resource has no status at all\n *    path - list of the names of states in the patient's pathway\n *    documentation - list of documentation for the trace of the pathway (documentation is corresponding resource)\n *  }\n */\nexport function pathwayData(\n  pathway: Pathway,\n  patientData: PatientData,\n  resources: object[]\n): PathwayResults {\n  const startState = 'Start';\n  let currentStatus;\n  const patientDocumentation = [];\n  const evaluatedPathway = [startState];\n\n  let stateData = nextState(pathway, patientData, startState);\n  while (stateData !== null) {\n    currentStatus = stateData.status;\n    if (stateData.documentation !== null)\n      patientDocumentation.push(retrieveResource(stateData.documentation, resources));\n    if (stateData.nextState === null) break; // The position of this line is important to maintain consistency for different scenarios\n    evaluatedPathway.push(stateData.nextState);\n    stateData = nextState(pathway, patientData, stateData.nextState);\n  }\n  const currentStateName = evaluatedPathway[evaluatedPathway.length - 1];\n  const currentState = pathway.states[currentStateName];\n  return {\n    patientId: patientData.Patient.id.value,\n    currentState: currentStateName,\n    currentStatus: currentStatus,\n    nextRecommendation: nextStateRecommendation(currentState),\n    path: evaluatedPathway,\n    documentation: patientDocumentation\n  };\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the pathway criteria\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns a list of CriteriaResults, each containing the expected and actual value for one data element\n */\nexport function criteriaData(pathway: Pathway, patientData: PatientData): CriteriaResult[] {\n  const result: CriteriaResult[] = [];\n\n  pathway.criteria.forEach(criteria => {\n    let evaluationResult = patientData[criteria.elementName];\n    if (Array.isArray(evaluationResult)) {\n      evaluationResult = evaluationResult[0]; // TODO: add functionality for multiple resources\n    }\n    let actual = 'unknown';\n    let match = false;\n\n    if (evaluationResult) {\n      actual = evaluationResult['value'];\n      match = evaluationResult['match'];\n    }\n\n    const criteriaResult = {\n      elementName: criteria.elementName,\n      expected: criteria.expected,\n      actual,\n      match\n    };\n\n    result.push(criteriaResult);\n  });\n\n  return result;\n}\n\n/**\n * Helper function to set the next recommendation\n * @param state - the current state in the pathway (where the patient is)\n * @return \"pathway terminal\" if state is the end of the pathway\n *        the name of the next state in a direct transition\n *        an object describing possible transitions and descriptions\n */\nfunction nextStateRecommendation(state: State): string | object {\n  const transitions = state.transitions;\n  if (transitions.length === 0) return 'pathway terminal';\n  else if (transitions.length === 1) return transitions[0].transition;\n  else {\n    return transitions.map(transition => {\n      return {\n        state: transition.transition,\n        conditionDescription:\n          'condition' in transition ? transition.condition && transition.condition.description : ''\n      };\n    });\n  }\n}\n\n/**\n * Helper function to format the documentation and include the related state\n * @param resource - the resource returned by the CQL execution\n * @param state - the current state name\n * @return the JSON resource with the state property set\n */\nfunction formatDocumentation(\n  resource: DocumentationResource,\n  state: string\n): DocumentationResource {\n  resource.state = state;\n  return resource;\n}\n\n/**\n * Helper function to select the transition state\n * This function is needed because MedicationRequests can have multiple\n * different statuses to indiciate complete\n * @param resource - the resource returned by the CQL execution\n * @param currentState - the current state\n * @return the next state name or null\n */\nfunction formatNextState(resource: DocumentationResource, currentState: State): string | null {\n  if (resource.resourceType === 'MedicationRequest') {\n    return currentState.transitions.length !== 0 ? currentState.transitions[0].transition : null;\n  } else {\n    return resource.status === 'completed' && currentState.transitions.length !== 0\n      ? currentState.transitions[0].transition\n      : null;\n  }\n}\n\n/**\n * Determine the nextState in a conditional transition state\n * @param patientData - JSON object representing the data on a patient\n * @param currentState - the current state\n * @param currentStateName - the name of the current state\n * @return the next state\n */\nfunction getConditionalNextState(\n  patientData: PatientData,\n  currentState: State,\n  currentStateName: string\n): StateData {\n  for (const transition of currentState.transitions) {\n    if (transition.condition) {\n      let documentationResource =\n        'condition' in transition ? patientData[transition.condition.description] : '';\n      if (documentationResource.length) {\n        documentationResource = documentationResource[0]; // TODO: add functionality for multiple resources\n        return {\n          nextState: transition.transition,\n          documentation: formatDocumentation(documentationResource, currentStateName),\n          status: 'status' in documentationResource ? documentationResource.status : 'unknown'\n        };\n        // Is there ever a time we may hit multiple conditions?\n      }\n    }\n  }\n\n  // No matching resource in the patient data to move from state\n  return noMatchingResourceForState();\n}\n\n/**\n * No resource exists for the next state\n * @return empty object\n */\nfunction noMatchingResourceForState(): StateData {\n  return {\n    nextState: null,\n    documentation: null,\n    status: 'not-done'\n  };\n}\n\n/**\n * Helper function to traverse the pathway and determine the next state in a patients pathway.\n * For actions this function will also verify the move is valid by the resource status\n * @param pathway - JSON object representing the complete pathway\n * @param patientData - JSON object representing the data on a patient\n * @param currentStateName - the name of the current state in the traversal\n * @return returns object with the next state, the status, and the evidenvce\n */\nfunction nextState(\n  pathway: Pathway,\n  patientData: PatientData,\n  currentStateName: string\n): StateData | null {\n  const currentState = pathway.states[currentStateName];\n  if ('action' in currentState) {\n    let resource = patientData[currentStateName];\n    if (resource.length) {\n      resource = resource[0]; // TODO: add functionality for multiple resources\n      return {\n        nextState: formatNextState(resource, currentState),\n        documentation: formatDocumentation(resource, currentStateName),\n        status: 'status' in resource ? resource.status : 'unknown'\n      };\n    } else {\n      // Action exists but has no matching resource in patientData\n      return noMatchingResourceForState();\n    }\n  } else if (currentState.transitions.length === 1) {\n    return {\n      nextState: currentState.transitions[0].transition,\n      documentation: 'direct',\n      status: 'completed'\n    };\n  } else if (currentState.transitions.length > 1) {\n    return getConditionalNextState(patientData, currentState, currentStateName);\n  } else return null;\n}\n\nfunction retrieveResource(\n  doc: DocumentationResource | string,\n  resources: fhir.DomainResource[]\n): DocumentationResource | string {\n  if (typeof doc !== 'string' && resources) {\n    doc.resource = resources.find(resource => {\n      return resource.resourceType === doc.resourceType && resource.id === doc.id;\n    });\n  }\n\n  return doc;\n}\n","import { extractNavigationCQL, extractCriteriaCQL, CqlObject, Library } from './cql-extractor';\nimport convertCQL, { convertBasicCQL, ElmObject } from './cql-to-elm';\nimport executeElm from './elm-executor';\nimport { pathwayData, criteriaData } from './output-results';\nimport { Pathway, PatientData, PathwayResults, ElmResults, CriteriaResult } from 'pathways-model';\nimport { getFixture } from './cql-extractor';\nimport { extractCQLInclude } from 'utils/regexes';\n\nfunction instanceOfElmObject(object: object): object is ElmObject {\n  return 'main' in object;\n}\n\n/**\n * Function to run each of the engine files in series to execute\n * the automated pathway\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return Information on the patient's current status within the\n *                  clinical pathway\n */\nexport function evaluatePatientOnPathway(\n  patient: object,\n  pathway: Pathway,\n  resources: object[]\n): Promise<PathwayResults> {\n  return extractNavigationCQL(pathway)\n    .then(cql => processCQLCommon(patient, cql))\n    .then(patientData => pathwayData(pathway, patientData, resources));\n}\n\n/**\n * Evaluate the pathway criteria against the given patient.\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return a list of CriteriaResults, each containing\n *         the expected value and actual value for one criteria item\n */\nexport function evaluatePathwayCriteria(\n  patient: object,\n  pathway: Pathway\n): Promise<CriteriaResult[]> {\n  return extractCriteriaCQL(pathway)\n    .then(cql => processCQLCommon(patient, cql))\n    .then(patientData => criteriaData(pathway, patientData));\n}\n\n/**\n * Common logic to execute the given CQL against the given Patient.\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return the raw, unprocessed patientResults\n *         derived from executing the CQL against the given patient\n */\nfunction processCQLCommon(patient: object, cql: string): Promise<PatientData> {\n  // Likely need an intermediary step that gathers the CQL files needed\n  // example function gatherCQL\n  return gatherCQL(cql)\n    .then(result => {\n      if (Object.keys(result).length > 0) {\n        // non-empty library\n        const cqlObject: CqlObject = {\n          main: cql,\n          libraries: result\n        };\n        return convertCQL(cqlObject);\n      } else {\n        return convertBasicCQL(cql);\n      }\n    })\n    .then(elm => {\n      let elmResults: ElmResults = {\n        patientResults: {}\n      };\n      if (instanceOfElmObject(elm)) {\n        elmResults = executeElm(patient, elm.main, elm.libraries);\n      } else {\n        elmResults = executeElm(patient, elm);\n      }\n\n      // TODO - update pathwaysData to take multiple patients\n      const patientIds = Object.keys(elmResults.patientResults);\n      const patientData = elmResults.patientResults[patientIds[0]];\n      return patientData;\n    });\n}\n\n// example function that would gather library CQL files\nfunction gatherCQL(cql: string): Promise<Library> {\n  const lib = extractCQLInclude.exec(cql);\n  if (lib) {\n    return getFixture(`${lib[1]}.cql`).then(result => {\n      return new Promise(function(resolve, reject): void {\n        setTimeout(function() {\n          resolve({ FHIRHelpers: result });\n        }, 300);\n      });\n    });\n  } else {\n    return new Promise(function(resolve, reject): void {\n      resolve({});\n    });\n  }\n}\n","import React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport graphLayout from 'visualization/layout';\nimport Node from '../Node';\nimport Arrow from '../Arrow';\nimport { evaluatePatientOnPathway } from 'engine';\nimport {\n  EvaluatedPathway,\n  PathwayResults,\n  DocumentationResource,\n  GuidanceState\n} from 'pathways-model';\nimport { Layout, NodeDimensions, Edge } from 'graph-model';\nimport { isGuidanceState } from 'utils/nodeUtils';\n\ninterface GraphProps {\n  evaluatedPathway: EvaluatedPathway;\n  resources: object[];\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n  updateEvaluatedPathways: (value: EvaluatedPathway) => void;\n}\n\nconst isEdgeOnPatientPath = (path: string[], edge: Edge): boolean => {\n  const startIndex = path.indexOf(edge.start);\n  const endIndex = path.indexOf(edge.end);\n  return startIndex !== -1 && endIndex !== -1 && startIndex + 1 === endIndex;\n};\n\nconst Graph: FC<GraphProps> = ({\n  resources,\n  evaluatedPathway,\n  interactive = true,\n  expandCurrentNode = true,\n  updateEvaluatedPathways\n}) => {\n  const pathway = evaluatedPathway.pathway;\n  const graphElement = useRef<HTMLDivElement>(null);\n  const [windowWidth, setWindowWidth] = useState<number>(useWindowWidth());\n  const [path, _setPath] = useState<string[]>(\n    evaluatedPathway.pathwayResults ? evaluatedPathway.pathwayResults.path : []\n  );\n\n  const setPath = useCallback(\n    (value: PathwayResults): void => {\n      _setPath(value.path);\n      updateEvaluatedPathways({ pathway: evaluatedPathway.pathway, pathwayResults: value });\n    },\n    [evaluatedPathway.pathway, updateEvaluatedPathways]\n  );\n\n  const parentWidth = graphElement?.current?.parentElement?.clientWidth ?? 0;\n\n  useEffect(() => {\n    setWindowWidth(parentWidth);\n  }, [parentWidth]);\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback(\n    (nodeDimensions: NodeDimensions): Layout => {\n      return graphLayout(pathway, nodeDimensions);\n    },\n    [pathway]\n  );\n\n  const [layout, setLayout] = useState(getGraphLayout({}));\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  const initialExpandedState = useMemo(() => {\n    return Object.keys(layout).reduce((acc: { [key: string]: boolean }, curr: string) => {\n      acc[curr] = false;\n      return acc;\n    }, {});\n  }, [layout]);\n\n  const [expanded, _setExpanded] = useState<{ [key: string]: boolean | undefined }>(\n    initialExpandedState\n  );\n\n  const setExpanded = useCallback((key: string, expand?: boolean): void => {\n    _setExpanded(prevState => {\n      return { ...prevState, [key]: !prevState[key] };\n    });\n  }, []);\n\n  useEffect(() => {\n    // Keeps track of whether the current useEffect cycle has ended\n    let cancel = false;\n\n    if (resources.length > 0 && path.length === 0) {\n      // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n      const patient = {\n        resourceType: 'Bundle',\n        entry: resources.map((r: object) => ({ resource: r }))\n      };\n      evaluatePatientOnPathway(patient, pathway, resources).then(pathwayResults => {\n        if (!cancel) setPath(pathwayResults);\n      });\n\n      return (): void => {\n        cancel = true;\n      };\n    }\n  }, [pathway, resources, path.length, setPath]);\n\n  useEffect(() => {\n    if (path) {\n      const currentNode = path[path.length - 1];\n      if (expandCurrentNode) {\n        if (currentNode) setExpanded(currentNode, true);\n      }\n    }\n  }, [expandCurrentNode, path, setExpanded]);\n\n  useEffect(() => {\n    const nodeDimensions: NodeDimensions = {};\n\n    Object.keys(expanded)\n      .filter(node => expanded[node])\n      .forEach(e => {\n        const pathwayState = pathway.states[e];\n        const action = isGuidanceState(pathwayState)\n          ? (pathwayState as GuidanceState).action\n          : null;\n\n        if (action && action.length > 0 && path) {\n          const currentNode = path[path.length - 1];\n          // Adjust height depending on the action description's length and for the current node\n          const heightOffset = Math.floor(action[0].description.length / 25) * 40;\n          const height = (currentNode === e ? 455 : 345) + heightOffset;\n\n          nodeDimensions[e] = {\n            height,\n            width: 400\n          };\n        } else {\n          // TODO: This obviously has to be changed eventually.\n          // The nodes height should change dynamically\n          const found =\n            evaluatedPathway &&\n            evaluatedPathway.pathwayResults &&\n            evaluatedPathway.pathwayResults.documentation.find(doc => {\n              return typeof doc !== 'string' && doc.state === e;\n            });\n          const height = found ? 140 : 50;\n          nodeDimensions[e] = {\n            height,\n            width: 400\n          };\n        }\n      });\n\n    setLayout(getGraphLayout(nodeDimensions));\n  }, [expanded, getGraphLayout, pathway.states, evaluatedPathway, path]);\n\n  // maxWidth finds the edge label that is farthest to the right\n  const maxWidth: number =\n    edges !== undefined\n      ? Object.values(edges)\n          .map(e => e.label)\n          .map(l => (l ? l.x + l.text.length * 10 + windowWidth / 2 : 0))\n          .reduce((a, b) => Math.max(a, b), 0)\n      : windowWidth;\n\n  const documentation = evaluatedPathway.pathwayResults\n    ? evaluatedPathway.pathwayResults.documentation\n    : [];\n  return (\n    <div ref={graphElement} style={{ height: maxHeight + 150 + 'px', position: 'relative' }}>\n      {nodeCoordinates !== undefined\n        ? Object.keys(nodeCoordinates).map(key => {\n            const docResource = documentation.find((doc): doc is DocumentationResource => {\n              return typeof doc !== 'string' && doc.state === key;\n            });\n            const isCurrentNode = (): boolean => {\n              return path[path.length - 1] === key;\n            };\n            const onClickHandler = interactive ? (): void => setExpanded(key) : undefined;\n            return (\n              <Node\n                key={key}\n                documentation={docResource}\n                pathwayState={pathway.states[key]}\n                isOnPatientPath={path.includes(key)}\n                isCurrentNode={isCurrentNode()}\n                xCoordinate={nodeCoordinates[key].x + windowWidth / 2}\n                yCoordinate={nodeCoordinates[key].y}\n                expanded={expanded[key]}\n                onClickHandler={onClickHandler}\n              />\n            );\n          })\n        : []}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          width: maxWidth,\n          height: maxHeight,\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          overflow: 'visible'\n        }}\n      >\n        {edges !== undefined\n          ? Object.keys(edges).map(edgeName => {\n              const edge = edges[edgeName];\n              return (\n                <Arrow\n                  key={edgeName}\n                  edge={edge}\n                  edgeName={edgeName}\n                  isOnPatientPath={isEdgeOnPatientPath(path, edge)}\n                  widthOffset={windowWidth / 2}\n                />\n              );\n            })\n          : []}\n      </svg>\n    </div>\n  );\n};\n\nfunction useWindowWidth(): number {\n  const getWidth = (): number => window.innerWidth;\n  const [windowWidth, setWindowWidth] = useState(getWidth);\n\n  useEffect(() => {\n    const handleResize = (): void => setWindowWidth(getWidth);\n\n    window.addEventListener('resize', handleResize);\n    return (): void => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowWidth;\n}\n\nexport default Graph;\n","import React, { FC, ReactNode, useState } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway, EvaluatedPathway, CriteriaResult } from 'pathways-model';\n\nimport classes from './PathwaysList.module.scss';\nimport indexClasses from 'styles/index.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Graph from 'components/Graph';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { evaluatePathwayCriteria } from 'engine';\n\ninterface PathwaysListElementProps {\n  evaluatedPathway: EvaluatedPathway;\n  resources: Array<fhir.DomainResource>;\n  callback: Function;\n}\n\ninterface PathwaysListProps {\n  evaluatedPathways: EvaluatedPathway[];\n  callback: Function;\n  service: Service<Array<Pathway>>;\n  resources: Array<fhir.DomainResource>;\n}\n\nconst PathwaysList: FC<PathwaysListProps> = ({\n  evaluatedPathways,\n  callback,\n  service,\n  resources\n}) => {\n  function renderList(): ReactNode {\n    return (\n      <div>\n        {evaluatedPathways.map(evaluatedPathway => {\n          return (\n            <PathwaysListElement\n              evaluatedPathway={evaluatedPathway}\n              callback={callback}\n              resources={resources}\n              key={evaluatedPathway.pathway.name}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.pathways_list}>\n      {service.status === 'loading' ? (\n        <div>Loading...</div>\n      ) : service.status === 'loaded' ? (\n        <div className={classes.container}>\n          <div className={classes.header_title}>\n            <div className={classes.header_title__header}>Explore Pathways</div>\n            <div className={classes.header_title__note}>Select pathway below to view details</div>\n          </div>\n\n          {renderList()}\n        </div>\n      ) : (\n        <div>ERROR</div>\n      )}\n    </div>\n  );\n};\n\nconst PathwaysListElement: FC<PathwaysListElementProps> = ({\n  evaluatedPathway,\n  resources,\n  callback\n}) => {\n  const pathway = evaluatedPathway.pathway;\n  const pathwayCtx = usePathwayContext();\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const [criteria, setCriteria] = useState<CriteriaResult[] | null>(null);\n\n  if (criteria == null && resources != null && resources.length > 0) {\n    // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n    const patient = {\n      resourceType: 'Bundle',\n      entry: resources.map((r: fhir.Resource) => ({ resource: r }))\n    };\n    evaluatePathwayCriteria(patient, pathway).then(c => setCriteria(c));\n  }\n\n  const chevron: IconProp = isVisible ? 'chevron-up' : 'chevron-down';\n\n  function toggleVisible(): void {\n    setIsVisible(!isVisible);\n  }\n  return (\n    <div className={classes['pathway-element']} role={'list'} key={pathway.name}>\n      <div\n        className={classes.title}\n        role={'listitem'}\n        onClick={(e): void => {\n          pathwayCtx.setEvaluatedPathway(evaluatedPathway, true);\n          toggleVisible();\n        }}\n      >\n        <div>{pathway.name}</div>\n        <div className={classes.expand}>\n          <FontAwesomeIcon icon={chevron} />\n        </div>\n        <div className={classes.numElements}>\n          {criteria && criteria.filter(c => c.match).length}\n        </div>\n      </div>\n\n      {isVisible && (\n        <div className={classes.infoContainer}>\n          <div className={classes.details}>\n            <p>{pathway.description}</p>\n            <table>\n              <tbody>\n                <tr>\n                  <th></th>\n                  <th>mCODE elements</th>\n                  <th>patient elements</th>\n                </tr>\n                {criteria &&\n                  criteria.map(c => (\n                    <tr key={c.elementName}>\n                      <td>{c.elementName}</td>\n                      <td>{c.expected}</td>\n                      <td className={c.match ? classes.matchingElement : undefined}>{c.actual}</td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n            <button\n              className={indexClasses.button}\n              onClick={(): void => callback(evaluatedPathway)}\n            >\n              Select Pathway\n            </button>\n          </div>\n          <div className={classes.pathway}>\n            <Graph\n              resources={resources}\n              evaluatedPathway={evaluatedPathway}\n              interactive={false}\n              expandCurrentNode={false}\n              updateEvaluatedPathways={pathwayCtx.updateEvaluatedPathways}\n            />\n            <div className={classes.controls}>\n              <FontAwesomeIcon icon={'play'} />\n              <FontAwesomeIcon icon={'plus'} />\n              <FontAwesomeIcon icon={'minus'} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PathwaysList;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Array<Pathway>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<Array<string>>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import React, { FC, useState, useEffect } from 'react';\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport { PathwaysClient } from 'pathways-client';\nimport logo from 'camino-logo-dark.png';\nimport { getPatientRecord } from '../utils/fhirExtract';\nimport { FHIRClientProvider } from './FHIRClient';\nimport { PatientProvider } from './PatientProvider';\nimport PatientRecord from './PatientRecord/PatientRecord';\nimport Graph from './Graph';\nimport config from 'utils/ConfigManager';\nimport PathwaysList from './PathwaysList';\nimport { PathwayProvider } from './PathwayProvider';\nimport { EvaluatedPathway } from 'pathways-model';\nimport useGetPathwaysService from './PathwaysService/PathwaysService';\nimport FHIR from 'fhirclient';\nimport demoRecords from 'fixtures/MaureenMcodeDemoPatientRecords.json';\n\ninterface AppProps {\n  demo: boolean;\n}\n\nconst App: FC<AppProps> = ({ demo }) => {\n  const [patientRecords, setPatientRecords] = useState<Array<fhir.DomainResource>>([]);\n  const [currentPathway, setCurrentPathway] = useState<EvaluatedPathway | null>(null);\n  const [selectPathway, setSelectPathway] = useState<boolean>(true);\n  const [evaluatedPathways, setEvaluatedPathways] = useState<EvaluatedPathway[]>([]);\n  const [client, setClient] = useState<PathwaysClient | null>(null);\n\n  useEffect(() => {\n    if (!demo) {\n      FHIR.oauth2\n        .init({\n          clientId: 'Input client id you get when you register the app',\n          scope: 'launch/patient openid profile'\n        })\n        .then(client => {\n          setClient(client);\n        });\n    } else {\n      // TODO: Use mocked out FHIR client\n      setPatientRecords(demoRecords);\n    }\n  }, [demo]);\n\n  useEffect(() => {\n    if (client) {\n      getPatientRecord(client).then((records: Array<fhir.DomainResource>) => {\n        // filters out values that are empty\n        // the server might return deleted\n        // resources that only include an\n        // id, meta, and resourceType\n        const values = ['id', 'meta', 'resourceType'];\n        records = records.filter(resource => {\n          return !Object.keys(resource).every(value => values.includes(value));\n        });\n\n        setPatientRecords(records);\n      });\n    }\n  }, [client]);\n\n  const service = useGetPathwaysService(\n    config.get(demo ? 'demoPathwaysService' : 'pathwaysService')\n  );\n\n  useEffect(() => {\n    if (service.status === 'loaded' && evaluatedPathways.length === 0)\n      setEvaluatedPathways(\n        service.payload.map(pathway => ({ pathway: pathway, pathwayResults: null }))\n      );\n  }, [service, evaluatedPathways.length, client]);\n\n  function setEvaluatedPathwayCallback(\n    value: EvaluatedPathway | null,\n    selectPathway = false\n  ): void {\n    window.scrollTo(0, 0);\n    setSelectPathway(selectPathway);\n    setCurrentPathway(value);\n  }\n\n  function updateEvaluatedPathways(value: EvaluatedPathway): void {\n    const newList = [...evaluatedPathways]; // Create a shallow copy of list\n    for (let i = 0; i < evaluatedPathways.length; i++) {\n      if (evaluatedPathways[i].pathway.name === value.pathway.name) {\n        newList[i] = value;\n        setEvaluatedPathways(newList);\n      }\n    }\n\n    if (currentPathway?.pathway.name === value.pathway.name) {\n      setCurrentPathway(value);\n    }\n  }\n\n  interface PatientViewProps {\n    evaluatedPathway: EvaluatedPathway | null;\n  }\n\n  const PatientView: FC<PatientViewProps> = ({ evaluatedPathway }) => {\n    return (\n      <div>\n        <div>{`Fetched ${patientRecords.length} resources`}</div>\n        {evaluatedPathway ? (\n          <Graph\n            resources={patientRecords}\n            evaluatedPathway={evaluatedPathway}\n            expandCurrentNode={true}\n            updateEvaluatedPathways={updateEvaluatedPathways}\n          />\n        ) : (\n          <div>No Pathway Loaded</div>\n        )}\n        <PatientRecord resources={patientRecords} />\n      </div>\n    );\n  };\n\n  const currentPathwayProvider = (\n    <PathwayProvider\n      pathwayCtx={{\n        updateEvaluatedPathways,\n        evaluatedPathway: currentPathway,\n        setEvaluatedPathway: setEvaluatedPathwayCallback\n      }}\n    >\n      <div>\n        <Header logo={logo} />\n        <Navigation\n          evaluatedPathways={evaluatedPathways}\n          selectPathway={selectPathway}\n          setSelectPathway={setSelectPathway}\n        />\n      </div>\n      {selectPathway ? (\n        <PathwaysList\n          evaluatedPathways={evaluatedPathways}\n          callback={setEvaluatedPathwayCallback}\n          service={service}\n          resources={patientRecords}\n        ></PathwaysList>\n      ) : (\n        <PatientView evaluatedPathway={currentPathway} />\n      )}\n    </PathwayProvider>\n  );\n\n  // TODO: Once we have a mocked out FHIR client we can include FHIRClientProvider to /demo endpoint\n  return !demo ? (\n    <FHIRClientProvider client={client as PathwaysClient}>\n      <PatientProvider>{currentPathwayProvider}</PatientProvider>\n    </FHIRClientProvider>\n  ) : (\n    <PatientProvider patient={demoRecords.find(r => r.resourceType === 'Patient') as fhir.Patient}>\n      {currentPathwayProvider}\n    </PatientProvider>\n  );\n};\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faChevronLeft,\n  faChevronDown,\n  faChevronUp,\n  faCog,\n  faUserCircle,\n  faExternalLinkAlt,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faMicroscope,\n  faPlay,\n  faPlus,\n  faMinus,\n  faEdit\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faChevronLeft,\n  faChevronDown,\n  faChevronUp,\n  faCog,\n  faUserCircle,\n  faExternalLinkAlt,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faMicroscope,\n  faPlay,\n  faPlus,\n  faMinus,\n  faEdit\n);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './components/App.tsx';\nimport './styles/index.module.scss';\nimport './utils/fontawesomeLibrary';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" render={() => <App demo={false} />}></Route>\n      <Route path=\"/demo\" render={() => <App demo={true} />}></Route>\n    </Switch>\n  </Router>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigation__back\":\"Navigation_navigation__back__2cVZ2\",\"navigation__left-panel\":\"Navigation_navigation__left-panel__2LnTe\",\"navigation__right-panel\":\"Navigation_navigation__right-panel__1yXCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"settings-logo\":\"Header_settings-logo__335GQ\",\"header-right\":\"Header_header-right__2rAWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\",\"arrowOnPatientPath\":\"Arrow_arrowOnPatientPath__1r5CB\"};","var map = {\n\t\"./alert\": 239,\n\t\"./alert.js\": 239,\n\t\"./alert.js.map\": 941,\n\t\"./allergyintolerance\": 240,\n\t\"./allergyintolerance.js\": 240,\n\t\"./allergyintolerance.js.map\": 942,\n\t\"./appointment\": 241,\n\t\"./appointment.js\": 241,\n\t\"./appointment.js.map\": 943,\n\t\"./appointmentresponse\": 242,\n\t\"./appointmentresponse.js\": 242,\n\t\"./appointmentresponse.js.map\": 944,\n\t\"./availability\": 243,\n\t\"./availability.js\": 243,\n\t\"./availability.js.map\": 945,\n\t\"./basic\": 244,\n\t\"./basic.js\": 244,\n\t\"./basic.js.map\": 946,\n\t\"./binary\": 245,\n\t\"./binary.js\": 245,\n\t\"./binary.js.map\": 947,\n\t\"./bundle\": 246,\n\t\"./bundle.js\": 246,\n\t\"./bundle.js.map\": 948,\n\t\"./careplan\": 247,\n\t\"./careplan.js\": 247,\n\t\"./careplan.js.map\": 949,\n\t\"./claimresponse\": 248,\n\t\"./claimresponse.js\": 248,\n\t\"./claimresponse.js.map\": 950,\n\t\"./communicationrequest\": 249,\n\t\"./communicationrequest.js\": 249,\n\t\"./communicationrequest.js.map\": 951,\n\t\"./composition\": 250,\n\t\"./composition.js\": 250,\n\t\"./composition.js.map\": 952,\n\t\"./conceptmap\": 251,\n\t\"./conceptmap.js\": 251,\n\t\"./conceptmap.js.map\": 953,\n\t\"./condition\": 252,\n\t\"./condition.js\": 252,\n\t\"./condition.js.map\": 954,\n\t\"./conformance\": 253,\n\t\"./conformance.js\": 253,\n\t\"./conformance.js.map\": 955,\n\t\"./contract\": 254,\n\t\"./contract.js\": 254,\n\t\"./contract.js.map\": 956,\n\t\"./contraindication\": 255,\n\t\"./contraindication.js\": 255,\n\t\"./contraindication.js.map\": 957,\n\t\"./core\": 2,\n\t\"./core.js\": 2,\n\t\"./core.js.map\": 958,\n\t\"./coverage\": 256,\n\t\"./coverage.js\": 256,\n\t\"./coverage.js.map\": 959,\n\t\"./dataelement\": 257,\n\t\"./dataelement.js\": 257,\n\t\"./dataelement.js.map\": 960,\n\t\"./device\": 258,\n\t\"./device.js\": 258,\n\t\"./device.js.map\": 961,\n\t\"./devicecomponent\": 259,\n\t\"./devicecomponent.js\": 259,\n\t\"./devicecomponent.js.map\": 962,\n\t\"./deviceuserequest\": 260,\n\t\"./deviceuserequest.js\": 260,\n\t\"./deviceuserequest.js.map\": 963,\n\t\"./deviceusestatement\": 261,\n\t\"./deviceusestatement.js\": 261,\n\t\"./deviceusestatement.js.map\": 964,\n\t\"./diagnosticorder\": 262,\n\t\"./diagnosticorder.js\": 262,\n\t\"./diagnosticorder.js.map\": 965,\n\t\"./diagnosticreport\": 263,\n\t\"./diagnosticreport.js\": 263,\n\t\"./diagnosticreport.js.map\": 966,\n\t\"./documentmanifest\": 264,\n\t\"./documentmanifest.js\": 264,\n\t\"./documentmanifest.js.map\": 967,\n\t\"./documentreference\": 265,\n\t\"./documentreference.js\": 265,\n\t\"./documentreference.js.map\": 968,\n\t\"./eligibility\": 266,\n\t\"./eligibility.js\": 266,\n\t\"./eligibility.js.map\": 969,\n\t\"./eligibilityresponse\": 267,\n\t\"./eligibilityresponse.js\": 267,\n\t\"./eligibilityresponse.js.map\": 970,\n\t\"./encounter\": 268,\n\t\"./encounter.js\": 268,\n\t\"./encounter.js.map\": 971,\n\t\"./enrollment\": 269,\n\t\"./enrollment.js\": 269,\n\t\"./enrollment.js.map\": 972,\n\t\"./enrollmentresponse\": 270,\n\t\"./enrollmentresponse.js\": 270,\n\t\"./enrollmentresponse.js.map\": 973,\n\t\"./explanationofbenefit\": 271,\n\t\"./explanationofbenefit.js\": 271,\n\t\"./explanationofbenefit.js.map\": 974,\n\t\"./extensiondefinition\": 272,\n\t\"./extensiondefinition.js\": 272,\n\t\"./extensiondefinition.js.map\": 975,\n\t\"./familyhistory\": 273,\n\t\"./familyhistory.js\": 273,\n\t\"./familyhistory.js.map\": 976,\n\t\"./group\": 274,\n\t\"./group.js\": 274,\n\t\"./group.js.map\": 977,\n\t\"./healthcareservice\": 275,\n\t\"./healthcareservice.js\": 275,\n\t\"./healthcareservice.js.map\": 978,\n\t\"./imagingobjectselection\": 276,\n\t\"./imagingobjectselection.js\": 276,\n\t\"./imagingobjectselection.js.map\": 979,\n\t\"./imagingstudy\": 277,\n\t\"./imagingstudy.js\": 277,\n\t\"./imagingstudy.js.map\": 980,\n\t\"./immunization\": 278,\n\t\"./immunization.js\": 278,\n\t\"./immunization.js.map\": 981,\n\t\"./immunizationrecommendation\": 279,\n\t\"./immunizationrecommendation.js\": 279,\n\t\"./immunizationrecommendation.js.map\": 982,\n\t\"./list\": 280,\n\t\"./list.js\": 280,\n\t\"./list.js.map\": 983,\n\t\"./location\": 281,\n\t\"./location.js\": 281,\n\t\"./location.js.map\": 984,\n\t\"./media\": 282,\n\t\"./media.js\": 282,\n\t\"./media.js.map\": 985,\n\t\"./medication\": 283,\n\t\"./medication.js\": 283,\n\t\"./medication.js.map\": 986,\n\t\"./medicationadministration\": 284,\n\t\"./medicationadministration.js\": 284,\n\t\"./medicationadministration.js.map\": 987,\n\t\"./medicationdispense\": 285,\n\t\"./medicationdispense.js\": 285,\n\t\"./medicationdispense.js.map\": 988,\n\t\"./medicationprescription\": 286,\n\t\"./medicationprescription.js\": 286,\n\t\"./medicationprescription.js.map\": 989,\n\t\"./medicationstatement\": 287,\n\t\"./medicationstatement.js\": 287,\n\t\"./medicationstatement.js.map\": 990,\n\t\"./messageheader\": 288,\n\t\"./messageheader.js\": 288,\n\t\"./messageheader.js.map\": 991,\n\t\"./models\": 237,\n\t\"./models.js\": 237,\n\t\"./models.js.map\": 992,\n\t\"./namingsystem\": 289,\n\t\"./namingsystem.js\": 289,\n\t\"./namingsystem.js.map\": 993,\n\t\"./nutritionorder\": 290,\n\t\"./nutritionorder.js\": 290,\n\t\"./nutritionorder.js.map\": 994,\n\t\"./observation\": 291,\n\t\"./observation.js\": 291,\n\t\"./observation.js.map\": 995,\n\t\"./operationdefinition\": 292,\n\t\"./operationdefinition.js\": 292,\n\t\"./operationdefinition.js.map\": 996,\n\t\"./operationoutcome\": 293,\n\t\"./operationoutcome.js\": 293,\n\t\"./operationoutcome.js.map\": 997,\n\t\"./oralhealthclaim\": 294,\n\t\"./oralhealthclaim.js\": 294,\n\t\"./oralhealthclaim.js.map\": 998,\n\t\"./order\": 295,\n\t\"./order.js\": 295,\n\t\"./order.js.map\": 999,\n\t\"./orderresponse\": 296,\n\t\"./orderresponse.js\": 296,\n\t\"./orderresponse.js.map\": 1000,\n\t\"./organization\": 297,\n\t\"./organization.js\": 297,\n\t\"./organization.js.map\": 1001,\n\t\"./other\": 298,\n\t\"./other.js\": 298,\n\t\"./other.js.map\": 1002,\n\t\"./patient\": 299,\n\t\"./patient.js\": 299,\n\t\"./patient.js.map\": 1003,\n\t\"./paymentnotice\": 300,\n\t\"./paymentnotice.js\": 300,\n\t\"./paymentnotice.js.map\": 1004,\n\t\"./paymentreconciliation\": 301,\n\t\"./paymentreconciliation.js\": 301,\n\t\"./paymentreconciliation.js.map\": 1005,\n\t\"./pendedrequest\": 302,\n\t\"./pendedrequest.js\": 302,\n\t\"./pendedrequest.js.map\": 1006,\n\t\"./practitioner\": 303,\n\t\"./practitioner.js\": 303,\n\t\"./practitioner.js.map\": 1007,\n\t\"./procedure\": 304,\n\t\"./procedure.js\": 304,\n\t\"./procedure.js.map\": 1008,\n\t\"./procedurerequest\": 305,\n\t\"./procedurerequest.js\": 305,\n\t\"./procedurerequest.js.map\": 1009,\n\t\"./profile\": 306,\n\t\"./profile.js\": 306,\n\t\"./profile.js.map\": 1010,\n\t\"./provenance\": 307,\n\t\"./provenance.js\": 307,\n\t\"./provenance.js.map\": 1011,\n\t\"./query\": 308,\n\t\"./query.js\": 308,\n\t\"./query.js.map\": 1012,\n\t\"./questionnaire\": 309,\n\t\"./questionnaire.js\": 309,\n\t\"./questionnaire.js.map\": 1013,\n\t\"./questionnaireanswers\": 310,\n\t\"./questionnaireanswers.js\": 310,\n\t\"./questionnaireanswers.js.map\": 1014,\n\t\"./readjudicate\": 311,\n\t\"./readjudicate.js\": 311,\n\t\"./readjudicate.js.map\": 1015,\n\t\"./referralrequest\": 312,\n\t\"./referralrequest.js\": 312,\n\t\"./referralrequest.js.map\": 1016,\n\t\"./relatedperson\": 313,\n\t\"./relatedperson.js\": 313,\n\t\"./relatedperson.js.map\": 1017,\n\t\"./reversal\": 314,\n\t\"./reversal.js\": 314,\n\t\"./reversal.js.map\": 1018,\n\t\"./riskassessment\": 315,\n\t\"./riskassessment.js\": 315,\n\t\"./riskassessment.js.map\": 1019,\n\t\"./searchparameter\": 316,\n\t\"./searchparameter.js\": 316,\n\t\"./searchparameter.js.map\": 1020,\n\t\"./securityevent\": 317,\n\t\"./securityevent.js\": 317,\n\t\"./securityevent.js.map\": 1021,\n\t\"./slot\": 318,\n\t\"./slot.js\": 318,\n\t\"./slot.js.map\": 1022,\n\t\"./specimen\": 319,\n\t\"./specimen.js\": 319,\n\t\"./specimen.js.map\": 1023,\n\t\"./statusrequest\": 320,\n\t\"./statusrequest.js\": 320,\n\t\"./statusrequest.js.map\": 1024,\n\t\"./statusresponse\": 321,\n\t\"./statusresponse.js\": 321,\n\t\"./statusresponse.js.map\": 1025,\n\t\"./subscription\": 322,\n\t\"./subscription.js\": 322,\n\t\"./subscription.js.map\": 1026,\n\t\"./substance\": 323,\n\t\"./substance.js\": 323,\n\t\"./substance.js.map\": 1027,\n\t\"./supply\": 324,\n\t\"./supply.js\": 324,\n\t\"./supply.js.map\": 1028,\n\t\"./supportingdocumentation\": 325,\n\t\"./supportingdocumentation.js\": 325,\n\t\"./supportingdocumentation.js.map\": 1029,\n\t\"./valueset\": 326,\n\t\"./valueset.js\": 326,\n\t\"./valueset.js.map\": 1030\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 238;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathways_list\":\"PathwaysList_pathways_list__2WO5g\",\"header_title\":\"PathwaysList_header_title__7EM8s\",\"header_title__header\":\"PathwaysList_header_title__header__36yqh\",\"header_title__note\":\"PathwaysList_header_title__note__34zC8\",\"container\":\"PathwaysList_container__1SC5K\",\"pathway-element\":\"PathwaysList_pathway-element__2yvUO\",\"title\":\"PathwaysList_title__ccVmw\",\"numElements\":\"PathwaysList_numElements__1WAOk\",\"expand\":\"PathwaysList_expand__2v9Wx\",\"infoContainer\":\"PathwaysList_infoContainer__2q0Tn\",\"details\":\"PathwaysList_details__2kSzT\",\"pathway\":\"PathwaysList_pathway__1vqM1\",\"matchingElement\":\"PathwaysList_matchingElement__1SQoM\",\"controls\":\"PathwaysList_controls__vZmz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expanded\":\"styles_expanded__XNUv-\",\"expandedNode\":\"styles_expandedNode__26Fy8\",\"nodeTitle\":\"styles_nodeTitle__5mm8f\",\"button\":\"styles_button__1AUjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"accept\":\"ExpandedNode_accept__TlDS7\",\"decline\":\"ExpandedNode_decline__2mYMc\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"onPatientPath\":\"Node_onPatientPath__3LPjE\",\"current\":\"Node_current__7P14G\",\"notOnPatientPath\":\"Node_notOnPatientPath__24OpF\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childOnPatientPath\":\"Node_childOnPatientPath__28UD6\",\"childCurrent\":\"Node_childCurrent__12c-9\",\"childNotOnPatientPath\":\"Node_childNotOnPatientPath__2j4QB\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n"],"sourceRoot":""}