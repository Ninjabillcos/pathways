{"version":3,"sources":["utils/ConfigManager.js","components/MissingDataPopup/MissingDataPopup.module.scss","components/Header/Header.tsx","components/FHIRClient.tsx","components/PatientProvider.tsx","components/PatientSnapshot/PatientSnapshot.tsx","components/DropDown/DropDown.tsx","components/PathwayProvider.tsx","components/Navigation/Navigation.tsx","utils/patient.js","utils/fhirExtract.js","components/PatientRecord/PatientRecord.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","components/withConfirmationPopup/withConfirmationPopup.tsx","components/ConfirmedActionButton/ConfirmedActionButton.ts","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","engine/cql-extractor.ts","utils/regexes.ts","engine/cql-to-elm.ts","engine/elm-executor.ts","engine/output-results.ts","engine/evaluate-patient.ts","components/Graph/Graph.tsx","components/PathwaysList/PathwaysList.tsx","components/PathwaysService/PathwaysService.tsx","components/App.tsx","index.js","components/PatientSnapshot/PatientSnapshot.module.scss","components/Navigation/Navigation.module.scss","components/ActionButton/ActionButton.module.scss","components/Header/Header.module.scss","components/withConfirmationPopup/withConfirmationPopup.module.scss","components/Arrow/Arrow.module.scss","../node_modules/cql-execution/lib/fhir sync /^/.//.*$","components/PathwaysList/PathwaysList.module.scss","styles/index.module.scss","components/DropDown/DropDown.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Node/Node.module.scss","components/ExpandedNode/ExpandedNode.module.scss"],"names":["config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","module","exports","Header","props","className","styles","header","src","logo","alt","icon","faCog","settingsLogo","headerRight","FHIRClientContext","createContext","patient","FHIRClientProvider","client","children","Provider","PatientContext","PatientProvider","useContext","useState","currentPatient","setCurrentPatient","useEffect","read","then","usePatient","PatientSnapshot","useMemo","entry","find","n","use","given","join","family","getPatientName","address","city","state","filter","item","getPatientAddress","patientSnapshot","faUserCircle","patientSnapshot__photo","patientSnapshot__info","patientName","patientSnapshot__list","birthDate","gender","DropDown","options","label","id","visible","onChange","selectedValue","setSelectPathway","onChangeCallback","useCallback","dropdown","htmlFor","onClick","classNamePrefix","inputId","aria-label","PathwayContext","evaluatedPathway","setEvaluatedPathway","updateEvaluatedPathways","PathwayProvider","pathwayCtx","usePathwayContext","Navigation","evaluatedPathways","selectPathway","pathway","undefined","pathwayOptions","map","navigation","navigation__leftPanel","faChevronLeft","navigation__back","navigation__rightPanel","pathwayOption","ALL_RESOURCES_PATIENT_REFERENCE","mapperName","get","MapperClass","mappers","mapperInstance","applyMapping","bundle","execute","getEverythingManually","supportedResources","push","requests","forEach","resource","request","flat","pageLimit","result","length","catch","error","console","log","Promise","all","results","x","getEverythingRevInclude","onError","query","getResourceByType","patientRecord","resourceType","PatientRecord","resources","rows","graphLayoutProvider","layout","nodeDimensions","nodeNames","Object","keys","states","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","stateName","nodeDimension","setNode","width","height","transitions","transition","condition","description","setEdge","nodeCoordinates","startNodeShift","node","nodeName","y","edges","e","edge","edgeName","v","w","text","start","end","points","p","layoutDagre","START","nodes","rank","NaN","horizontalPosition","parents","canMove","includes","initializeNodes","graph","HORIZONTAL_OFFSET","NODE_WIDTH","VERTICAL_OFFSET","NODE_HEIGHT","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","parentsOnHigherRank","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","open","setOpen","Popup","content","position","pathwayPopup","on","onOpen","onClose","pinned","trigger","LargeActionButton","type","largeActionButton","indexStyles","button","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","data-testid","faCheck","faTimes","ActionButton","size","PopupContent","values","showCheck","setShowCheck","selected","setSelected","popupContent","key","popupChoice","footer","MissingDataPopup","missingDataPopup","popupTrigger","faEdit","externalLink","onConfirm","ConfirmedActionButton","WrappedComponent","wrappedProps","withConfirmationPopup","triggerContainer","isGuidanceState","action","ExpandedNodeField","title","descTitle","desc","StatusField","documentation","status","rawDate","meta","lastUpdated","date","Date","toLocaleString","ExpandedNode","pathwayState","isActionable","isGuidance","comments","setComments","guidance","coding","medicationCodeableConcept","code","returnElements","system","href","target","rel","faExternalLinkAlt","display","procedure","performedPeriod","performedDateTime","toLocaleDateString","renderGuidance","branch","observation","valueCoding","valueCodeableConcept","effectiveDateTime","toLocaleTimeString","renderBranch","defaultText","expandedNode","infoTable","commentsForm","defaultTextButton","preventDefault","Node","forwardRef","ref","isOnPatientPath","isCurrentNode","xCoordinate","yCoordinate","expanded","onClickHandler","style","top","left","backgroundColorClass","onPatientPath","notOnPatientPath","topLevelClasses","expandedNodeClass","nodeStyles","actionable","childActionable","childOnPatientPath","childNotOnPatientPath","isAccepted","nodeTitle","iconAndLabel","accepted","NodeIcon","faMicroscope","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faCapsules","faSyringe","StatusIcon","faCheckCircle","faTimesCircle","statusIcon","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","arr","d","fill","markerEnd","Arrow","arrowOnPatientPath","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","getFixture","filename","fetch","cql","cqlFormat","cqlBlock","resourceName","concat","cqlAdd","isConditional","extractMultipartBoundary","extractMultipartFileName","extractJSONContent","extractCQLInclude","url","executeElm","elm","libraries","lib","Library","Repository","executor","Executor","psource","PatientSource","FHIRv400","loadBundles","exec","nextStateRecommendation","conditionDescription","formatDocumentation","formatNextState","currentState","nextState","patientData","currentStateName","documentationResource","getConditionalNextState","retrieveResource","doc","evaluatePatientOnPathway","library","extractNavigationCQL","processCQLCommon","currentStatus","patientDocumentation","stateData","patientId","Patient","nextRecommendation","path","pathwayData","evaluatePathwayCriteria","criteria","elementName","extractCriteriaCQL","evaluationResult","Array","isArray","actual","match","criteriaResult","expected","criteriaData","resolve","reject","setTimeout","FHIRHelpers","gatherCQL","formdata","FormData","append","main","method","body","headers","boundary","obj","oldArray","line","elmName","JSON","parse","convertCQL","Accept","json","convertBasicCQL","elmResults","patientResults","patientIds","isEdgeOnPatientPath","startIndex","endIndex","interactive","expandCurrentNode","graphElement","useRef","nodeRefs","getWidth","window","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","parentWidth","current","parentElement","clientWidth","pathwayResults","_setPath","setPath","getGraphLayout","nodeElement","from","clientHeight","graphLayout","setLayout","maxHeight","max","initialExpandedState","curr","_setExpanded","setExpanded","expand","prevState","cancel","r","currentNode","maxWidth","l","docResource","xmlns","zIndex","overflow","PathwaysListElement","callback","isVisible","setIsVisible","setCriteria","chevron","faChevronUp","faChevronDown","pathwayElement","role","numElements","infoContainer","details","matchingElement","controls","faPlus","faMinus","PathwaysList","service","pathways_list","container","header_title","header_title__header","header_title__note","useGetPathwaysService","setResult","getPathways","response","listOfFiles","f","typedFetch","listOfPromises","pathwaysList","payload","App","demo","patientRecords","setPatientRecords","currentPathway","setCurrentPathway","setEvaluatedPathways","setClient","demoRecords","FHIR","oauth2","init","clientId","scope","statement","rest","operation","definition","reference","getEverything","revIncludeResources","searchRevInclude","searchInclude","filters","searchParam","searchParams","getPatientRecord","records","every","setEvaluatedPathwayCallback","scrollTo","newList","currentPathwayProvider","rootElement","document","getElementById","ReactDOM","render","exact","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error"],"mappings":"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BACA,sBACA,6BACA,8BACA,4BACA,8BACA,6BACA,8BACA,+BACA,mCACA,4BACA,mCACA,8BACA,6BACA,qCACA,gBACA,gBACA,wBACA,oBACA,sBACA,uBACA,qBACA,sBACA,eACA,YACA,cACA,oBACA,sBACA,uBACA,sBACA,qBACA,+BACA,qCACA,yBACA,2BACA,2BACA,eACA,eACA,eACA,cACA,+BACA,6BACA,4BACA,4BACA,oBACA,6BACA,4BACA,gCACA,2BACA,2BACA,+BACA,+BACA,6BACA,2BACA,0BACA,6BACA,wBACA,6BACA,0BACA,yBACA,iBACA,2BACA,sBACA,yBACA,iBACA,sBACA,uBACA,mBACA,kBACA,mBACA,iBACA,eACA,oBACA,gBACA,oBACA,4BACA,qBACA,sBACA,oBACA,qBACA,uBACA,+BACA,8BACA,iCACA,iCACA,+BACA,gCACA,wBACA,0BACA,uBACA,wBACA,wBACA,yBACA,6BACA,wBACA,cACA,gBACA,qBACA,qBACA,+BACA,qBACA,mBACA,uBACA,qBACA,mBACA,mBACA,gBACA,gBACA,eACA,qBACA,oBACA,mBACA,8BACA,4BACA,sBACA,oBACA,8BACA,8BACA,uBACA,wBACA,+BACA,iCACA,gCACA,kCACA,iCACA,kBACA,mB,kBC5MIC,EAAaxG,IAAOyG,IAAI,UACxBC,EAAcC,UAAQH,GACtBI,EAAiBF,EAAc,IAAIA,EAAgB,KAEnDG,EAAe,SAACC,GAKpB,OAJIF,GAAkBE,IAEpBA,EAASF,EAAeG,QAAQD,IAE3BA,GAoET,SAASE,EAAsBlF,EAAQmF,GACrCA,EAAmBC,KAAK,eACxB,IAAMC,EAAW,GAiBjB,OAhBAF,EAAmBG,SAAQ,SAAAC,GACzBA,EAAWA,EAAS9G,MAAM,KAC1B,IAAM+G,EAAUxF,EACbwF,QADa,UACFD,EAAS,GADP,YACaA,EAAS,GADtB,YAC4BvF,EAAOF,QAAQ0C,IAAM,CAAEiD,MAAM,EAAMC,UAAW,IACvF/E,MAAK,SAAAgF,GACJ,GAAIA,EAAOC,OAAS,EAClB,OAAOD,KAGVE,OAAM,SAAAC,G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","file":"static/js/main.5cb8b6a6.chunk.js","sourcesContent":["export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","import React, { FC } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Header.module.scss';\n\ninterface HeaderProps {\n  logo: string;\n}\n\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  return (\n    <header className={styles.header}>\n      <img src={props.logo} alt=\"logo\" />\n      <FontAwesomeIcon icon={faCog} className={`${styles.settingsLogo} ${styles.headerRight}`} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwaysClient } from 'pathways-client';\n\ninterface FHIRClientProviderProps {\n  client: PathwaysClient; // TODO: fhirclient.Client\n  children: ReactNode;\n}\n\nexport const FHIRClientContext = createContext({ patient: {} });\n\nexport const FHIRClientProvider: FC<FHIRClientProviderProps> = ({ client, children }) => (\n  <FHIRClientContext.Provider value={client}>{children}</FHIRClientContext.Provider>\n);\n\nexport const useFHIRClient = (): PathwaysClient => useContext(FHIRClientContext);\n","import React, { FC, createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { useFHIRClient } from './FHIRClient';\n\ninterface PatientProviderProps {\n  children: ReactNode;\n  patient?: fhir.Patient;\n}\n\nexport const PatientContext = createContext<fhir.Patient | null>(null);\n\nexport const PatientProvider: FC<PatientProviderProps> = ({ children, patient }) => {\n  const client = useFHIRClient();\n  const [currentPatient, setCurrentPatient] = useState<fhir.Patient | null>(patient || null);\n\n  useEffect(() => {\n    client?.patient?.read?.().then((patient: fhir.Patient) => setCurrentPatient(patient));\n  }, [client]);\n\n  return currentPatient == null ? (\n    <div>Loading...</div>\n  ) : (\n    <PatientContext.Provider value={currentPatient}>{children}</PatientContext.Provider>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const usePatient = (): fhir.Patient => useContext(PatientContext)!;\n","import React, { FC, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { usePatient } from '../PatientProvider';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './PatientSnapshot.module.scss';\n\nconst getPatientName = (name: Array<fhir.HumanName> = []): string => {\n  const entry = name.find(n => n.use === 'official') || name[0];\n  return entry ? `${(entry.given || []).join(' ')} ${entry.family}` : 'No name';\n};\n\nconst getPatientAddress = (address: Array<fhir.Address> = []): string => {\n  const entry = address[0];\n  return entry ? [entry.city, entry.state].filter(item => !!item).join(', ') : 'No Address';\n};\n\nconst PatientSnapshot: FC<{}> = () => {\n  const patient = usePatient();\n\n  const name = useMemo(() => getPatientName(patient.name), [patient]);\n  const address = useMemo(() => getPatientAddress(patient.address), [patient]);\n\n  return (\n    <div className={styles.patientSnapshot}>\n      <FontAwesomeIcon icon={faUserCircle} className={styles.patientSnapshot__photo} />\n\n      <div className={styles.patientSnapshot__info}>\n        <div className={styles.patientName}>{name}</div>\n\n        <ul className={styles.patientSnapshot__list}>\n          <li>DOB: {patient.birthDate}</li>\n          <li>Admin. Sex: {patient.gender}</li>\n          <li>Location: {address}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientSnapshot;\n","import React, { FC, useCallback } from 'react';\nimport Select from 'react-select';\n\nimport styles from './DropDown.module.scss';\nimport { Option } from 'option';\n\ninterface Props {\n  label?: string;\n  id: string;\n  visible: boolean;\n  options: Array<Option>;\n  onChange?: (value: Option | ReadonlyArray<Option> | null) => void;\n  selectedValue: Option | ReadonlyArray<Option> | null;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst DropDown: FC<Props> = ({\n  options,\n  label,\n  id,\n  visible,\n  onChange,\n  selectedValue,\n  setSelectPathway\n}: Props) => {\n  const onChangeCallback = useCallback(\n    (value: Option | ReadonlyArray<Option> | null | undefined) => {\n      if (onChange) onChange(value == null ? null : value);\n    },\n    [onChange]\n  );\n\n  if (visible)\n    return (\n      <div className={styles.dropdown}>\n        <div>\n          <label htmlFor={id}>{label}</label>\n          <button\n            onClick={(): void => {\n              setSelectPathway(true);\n            }}\n          >\n            Explore Pathways\n          </button>\n        </div>\n        <Select\n          classNamePrefix=\"DropDown\"\n          inputId={id}\n          value={selectedValue}\n          onChange={onChangeCallback}\n          options={options}\n          aria-label={label}\n        />\n      </div>\n    );\n  else return <div></div>;\n};\n\nexport default DropDown;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwayContextInterface } from 'pathways-model';\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n  pathwayCtx: PathwayContextInterface;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({\n  evaluatedPathway: null,\n  setEvaluatedPathway: () => {\n    //do nothing\n  },\n  updateEvaluatedPathways: () => {\n    //do nothing\n  }\n});\n\nexport const PathwayProvider: FC<PathwayProviderProps> = ({ children, pathwayCtx }) => {\n  return <PathwayContext.Provider value={pathwayCtx}>{children}</PathwayContext.Provider>;\n};\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport PatientSnapshot from 'components/PatientSnapshot';\nimport DropDown from 'components/DropDown';\n\nimport styles from './Navigation.module.scss';\nimport { EvaluatedPathway } from 'pathways-model';\nimport { Option } from 'option';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props {\n  evaluatedPathways: EvaluatedPathway[];\n  selectPathway: boolean;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst Navigation: FC<Props> = ({ evaluatedPathways, selectPathway, setSelectPathway }) => {\n  const pathwayCtx = usePathwayContext();\n  const pathway = pathwayCtx.evaluatedPathway?.pathway;\n  const value =\n    pathway === undefined ? null : { label: pathway.name, value: pathwayCtx.evaluatedPathway };\n\n  const onChangeHandler = (pathwayOption: Option | ReadonlyArray<Option> | null): void => {\n    if (pathwayOption !== null && 'value' in pathwayOption) {\n      pathwayCtx.setEvaluatedPathway(pathwayOption.value);\n    }\n  };\n\n  const pathwayOptions = evaluatedPathways.map(evaluatedPathway => ({\n    label: evaluatedPathway.pathway.name,\n    value: evaluatedPathway\n  }));\n\n  return (\n    <nav className={styles.navigation}>\n      <div className={styles.navigation__leftPanel}>\n        <FontAwesomeIcon icon={faChevronLeft} className={styles.navigation__back} />\n        <PatientSnapshot />\n      </div>\n\n      <div className={styles.navigation__rightPanel}>\n        <DropDown\n          label=\"Pathway:\"\n          id=\"patient-view\"\n          visible={!selectPathway}\n          options={pathwayOptions}\n          selectedValue={value}\n          setSelectPathway={setSelectPathway}\n          onChange={onChangeHandler}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","const ALL_RESOURCES_PATIENT_REFERENCE = [\n  'ReferralRequest:patient',\n  'DocumentManifest:patient',\n  'Goal:patient',\n  'Consent:patient',\n  'DocumentReference:patient',\n  'ImagingManifest:patient',\n  'RiskAssessment:patient',\n  'CareTeam:patient',\n  'ImagingStudy:patient',\n  'FamilyMemberHistory:patient',\n  'Encounter:patient',\n  'DeviceRequest:patient',\n  'AllergyIntolerance:patient',\n  'CarePlan:patient',\n  'EpisodeOfCare:patient',\n  'Procedure:patient',\n  'List:patient',\n  'Immunization:patient',\n  'VisionPrescription:patient',\n  'ProcedureRequest:patient',\n  'Flag:patient',\n  'Observation:patient',\n  'DiagnosticReport:patient',\n  'NutritionOrder:patient',\n  'Condition:patient',\n  'Composition:patient',\n  'DetectedIssue:patient',\n  'SupplyDelivery:patient',\n  'ClinicalImpression:patient',\n  'DeviceUseStatement:patient',\n  'Task:subject',\n  'Task:requester',\n  'Task:patient',\n  'Task:owner',\n  'Task:focus',\n  'Task:based-on',\n  'SupplyRequest:requester',\n  'Specimen:subject',\n  'Specimen:patient',\n  'ServiceDefinition:successor',\n  'ServiceDefinition:predecessor',\n  'ServiceDefinition:depends-on',\n  'ServiceDefinition:derived-from',\n  'ServiceDefinition:composed-of',\n  'Sequence:patient',\n  'Schedule:actor',\n  'RiskAssessment:subject',\n  'ResearchSubject:patient',\n  'ResearchSubject:individual',\n  'RequestGroup:subject',\n  'RequestGroup:participant',\n  'RequestGroup:patient',\n  'RequestGroup:definition',\n  'RelatedPerson:patient',\n  'ReferralRequest:subject',\n  'ReferralRequest:requester',\n  'QuestionnaireResponse:subject',\n  'QuestionnaireResponse:source',\n  'QuestionnaireResponse:patient',\n  'QuestionnaireResponse:author',\n  'Provenance:target',\n  'Provenance:entity-ref',\n  'Provenance:patient',\n  'Provenance:agent',\n  'ProcessResponse:request',\n  'ProcedureRequest:subject',\n  'ProcedureRequest:replaces',\n  'ProcedureRequest:performer',\n  'ProcedureRequest:based-on',\n  'Procedure:subject',\n  'Procedure:performer',\n  'PlanDefinition:successor',\n  'PlanDefinition:predecessor',\n  'PlanDefinition:derived-from',\n  'PlanDefinition:depends-on',\n  'PlanDefinition:composed-of',\n  'Person:patient',\n  'Person:link',\n  'PaymentNotice:response',\n  'PaymentNotice:request',\n  'Patient:link',\n  'Observation:subject',\n  'Observation:performer',\n  'MessageHeader:focus',\n  'MedicationStatement:source',\n  'MedicationStatement:subject',\n  'MedicationRequest:subject',\n  'MedicationRequest:requester',\n  'MedicationDispense:subject',\n  'MedicationDispense:receiver',\n  'MedicationDispense:performer',\n  'MedicationAdministration:subject',\n  'MedicationRequest:patient',\n  'MedicationAdministration:patient',\n  'MedicationStatement:patient',\n  'MedicationDispense:patient',\n  'MedicationAdministration:performer',\n  'Media:subject',\n  'Media:patient',\n  'MeasureReport:patient',\n  'Measure:successor',\n  'Measure:predecessor',\n  'Measure:derived-from',\n  'Measure:depends-on',\n  'Measure:composed-of',\n  'List:subject',\n  'List:item',\n  'List:source',\n  'Library:successor',\n  'Library:predecessor',\n  'Library:derived-from',\n  'Library:composed-of',\n  'Library:depends-on',\n  'ImplementationGuide:resource',\n  'ImmunizationRecommendation:patient',\n  'ImagingManifest:author',\n  'GuidanceResponse:subject',\n  'GuidanceResponse:patient',\n  'Group:member',\n  'Goal:subject',\n  'Flag:subject',\n  'Flag:author',\n  'ExplanationOfBenefit:patient',\n  'ExplanationOfBenefit:payee',\n  'EnrollmentRequest:subject',\n  'EnrollmentRequest:patient',\n  'Encounter:subject',\n  'EligibilityRequest:patient',\n  'DocumentReference:subject',\n  'DocumentReference:related-ref',\n  'DocumentReference:author',\n  'DocumentManifest:subject',\n  'DocumentManifest:related-ref',\n  'DocumentManifest:content-ref',\n  'DocumentManifest:recipient',\n  'DiagnosticReport:subject',\n  'DocumentManifest:author',\n  'DeviceUseStatement:subject',\n  'DeviceRequest:subject',\n  'DeviceRequest:priorrequest',\n  'DeviceRequest:performer',\n  'DeviceRequest:based-on',\n  'Device:patient',\n  'DetectedIssue:implicated',\n  'Coverage:subscriber',\n  'Coverage:policy-holder',\n  'Coverage:payor',\n  'Contract:term-topic',\n  'Coverage:beneficiary',\n  'Contract:subject',\n  'Contract:signer',\n  'Contract:patient',\n  'Contract:agent',\n  'Consent:data',\n  'Consent:consentor',\n  'Consent:actor',\n  'Condition:subject',\n  'Condition:evidence-detail',\n  'Condition:asserter',\n  'Composition:subject',\n  'Composition:entry',\n  'Composition:author',\n  'Composition:attester',\n  'CommunicationRequest:subject',\n  'CommunicationRequest:sender',\n  'CommunicationRequest:requester',\n  'CommunicationRequest:recipient',\n  'CommunicationRequest:patient',\n  'CommunicationRequest:based-on',\n  'Communication:subject',\n  'Communication:recipient',\n  'Communication:sender',\n  'Communication:patient',\n  'Communication:part-of',\n  'Communication:based-on',\n  'ClinicalImpression:subject',\n  'ClaimResponse:patient',\n  'Claim:payee',\n  'Claim:patient',\n  'ChargeItem:subject',\n  'ChargeItem:patient',\n  'ChargeItem:participant-actor',\n  'ChargeItem:enterer',\n  'CareTeam:subject',\n  'CareTeam:participant',\n  'CarePlan:performer',\n  'CarePlan:subject',\n  'BodySite:patient',\n  'Basic:subject',\n  'Basic:patient',\n  'Basic:author',\n  'AuditEvent:patient',\n  'AuditEvent:entity',\n  'AuditEvent:agent',\n  'AppointmentResponse:patient',\n  'AppointmentResponse:actor',\n  'Appointment:patient',\n  'Appointment:actor',\n  'AllergyIntolerance:recorder',\n  'AllergyIntolerance:asserter',\n  'AdverseEvent:subject',\n  'AdverseEvent:recorder',\n  'ActivityDefinition:successor',\n  'ActivityDefinition:predecessor',\n  'ActivityDefinition:depends-on',\n  'ActivityDefinition:derived-from',\n  'ActivityDefinition:composed-of',\n  'Account:subject',\n  'Account:patient'\n];\n\nexport { ALL_RESOURCES_PATIENT_REFERENCE };\n","import { ALL_RESOURCES_PATIENT_REFERENCE } from './patient';\n\nimport { mappers } from 'fhir-mapper';\nimport config from './ConfigManager';\n\nconst mapperName = config.get('mapper');\nconst MapperClass = mappers[mapperName];\nconst mapperInstance = MapperClass ? new MapperClass() : null;\n\nconst applyMapping = (bundle) => {\n  if (mapperInstance && bundle)\n  {\n    bundle = mapperInstance.execute(bundle);\n  }\n  return bundle;\n}\n\n/**\n * There are slight discrepencies between the $everything, revinclude, and manual methods that affect the resources that might be returned\n * @param {Object} client - the fhir client\n */\nfunction getPatientRecord(client) {\n  return client.request(`/metadata`).then(statement => {\n    if (\n      statement.rest[0].operation.find(\n        e => (e.definition.reference || e.definition) === 'OperationDefinition/Patient--everything'\n      )\n    ) {\n      // supports patient everything\n      return getEverything(client).then(bundle => applyMapping(bundle));\n    } else {\n      console.log('Cannot use $everything, using reverse includes instead');\n      const supportedResources = [];\n      let revIncludeResources = [];\n      statement.rest[0].resource.forEach(resource => {\n        if (resource.type === 'Patient') {\n          if (resource.searchRevInclude) {\n            revIncludeResources = resource.searchRevInclude;\n          }\n        } else if (resource.searchInclude) {\n          const filters = resource.searchInclude.filter(target => {\n            return target === `${resource.type}:patient` || target === `${resource.type}:subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(filters[0]);\n          }\n        } else if (resource.searchParam) {\n          const filters = resource.searchParams.filter(target => {\n            return target.name === `patient` || target.name === `subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(`${resource.type}:${filters[0].name}`);\n          }\n        }\n      });\n      if (revIncludeResources.length > 0) {\n        return getEverythingRevInclude(client, revIncludeResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else if (supportedResources.length > 0) {\n        return getEverythingRevInclude(client, supportedResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else {\n        console.log('Cannot use reverse includes, retrieving all resources manually from predefined list');\n        return getEverythingManually(client, ALL_RESOURCES_PATIENT_REFERENCE).then(bundle => applyMapping(bundle));\n      }\n    }\n  });\n}\n\n/**\n * Uses the $everything operation.  The server takes care of constructing the bundle that gets returned, so\n * it is generally not possible to know how it is deciding what resources to send.\n */\nfunction getEverything(client) {\n  return client.request(`/Patient/${client.patient.id}/$everything`, { flat: true, pageLimit: 0 }).then(bundle => {\n    return bundle;\n  });\n}\n\n/**\n * Uses regular FHIR search queries on every resource that is supported and can refer to a patient.\n * Which resources it queries is dependent on info available in the Capability Statement, and\n * it only provides a one layer deep search, so the results might be different from $everything.\n */\nfunction getEverythingManually(client, supportedResources) {\n  supportedResources.push('Patient:_id');\n  const requests = [];\n  supportedResources.forEach(resource => {\n    resource = resource.split(':');\n    const request = client\n      .request(`${resource[0]}?${resource[1]}=${client.patient.id}`, { flat: true, pageLimit: 0 })\n      .then(result => {\n        if (result.length > 0) {\n          return result;\n        }\n      })\n      .catch(error => {\n        console.log(`failed to fetch ${resource}`);\n        console.error(error);\n      });\n    requests.push(request);\n  });\n\n  return Promise.all(requests).then(results => {\n    const bundle = results\n      .filter(x => {\n        return x;\n      })\n      .flat();\n    return bundle;\n  });\n}\n\n/**\n * Uses the _revinclude FHIR search parameter to request the patient resource and any resource that refers to it.\n * The list of resources it checks is retrieved from the Capability Statement.  It is slightly better than the manual\n * method since it does everything in one request.\n */\nfunction getEverythingRevInclude(client, supportedResources, onError) {\n  const query = supportedResources.join('&_revinclude=');\n  return client\n    .request(`/Patient?_id=${client.patient.id}&_revinclude=${query}`, { flat: true })\n    .then(result => {\n      return result;\n    })\n    .catch(error => {\n      console.log('Reverse Include query failed, manually fetching resources instead.');\n      console.error(error);\n      onError(client, supportedResources);\n    });\n}\n\nexport { getPatientRecord };\n","import React, { FC } from 'react';\nimport { usePatient } from '../PatientProvider';\n\nimport {\n  AllergiesVisualizer,\n  CarePlansVisualizer,\n  ConditionsVisualizer,\n  EncountersVisualizer,\n  ImmunizationsVisualizer,\n  MedicationsVisualizer,\n  ObservationsVisualizer,\n  PatientVisualizer,\n  ProceduresVisualizer,\n  ReportsVisualizer\n} from 'fhir-visualizers';\n\ntype PatientRecordProps = {\n  resources: ReadonlyArray<fhir.DomainResource>;\n};\n\nconst getResourceByType = (\n  patientRecord: ReadonlyArray<fhir.DomainResource>,\n  resourceType: string\n): ReadonlyArray<object> => {\n  return patientRecord.filter(resource => resource.resourceType === resourceType);\n};\n\nconst PatientRecord: FC<PatientRecordProps> = ({ resources }) => {\n  const patient = usePatient();\n\n  return (\n    <div>\n      <PatientVisualizer patient={patient} />\n      <ConditionsVisualizer rows={getResourceByType(resources, 'Condition')} />\n      <ObservationsVisualizer rows={getResourceByType(resources, 'Observation')} />\n      <ReportsVisualizer rows={getResourceByType(resources, 'DiagnosticReport')} />\n      <MedicationsVisualizer rows={getResourceByType(resources, 'MedicationRequest')} />\n      <AllergiesVisualizer rows={getResourceByType(resources, 'AllergyIntolerance')} />\n      <CarePlansVisualizer rows={getResourceByType(resources, 'CarePlan')} />\n      <ProceduresVisualizer rows={getResourceByType(resources, 'Procedure')} />\n      <EncountersVisualizer rows={getResourceByType(resources, 'Encounter')} />\n      <ImmunizationsVisualizer rows={getResourceByType(resources, 'Immunization')} />\n    </div>\n  );\n};\n\nexport default PatientRecord;\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport indexStyles from 'styles/index.module.scss';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} ${indexStyles.button} ${type === 'decline' &&\n        styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={type === 'accept' ? styles.accept : styles.decline}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton size=\"small\" type=\"accept\" onClick={(): void => setOpen(false)} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import React, { FC, useState } from 'react';\nimport styles from './withConfirmationPopup.module.scss';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\n\ntype ConfirmationProps = {\n  onConfirm?: () => void;\n};\n\ntype WithConfirmationPopupProps<T> = T & ConfirmationProps;\n\nconst withConfirmationPopup = <T extends object>(\n  WrappedComponent: FC<T>\n): FC<WithConfirmationPopupProps<T>> => {\n  const PopupComponent: FC<WithConfirmationPopupProps<T>> = ({ onConfirm, ...wrappedProps }) => {\n    const [open, setOpen] = useState<boolean>(false);\n    // https://github.com/Semantic-Org/Semantic-UI-React/issues/2487\n    return (\n      <PathwayPopup\n        className={styles.withConfirmationPopup}\n        Content={<PopupContent setOpen={setOpen} onConfirm={onConfirm} />}\n        open={open}\n        setOpen={setOpen}\n        Trigger={\n          <div className={styles.triggerContainer} {...wrappedProps}>\n            <WrappedComponent {...(wrappedProps as T)} />\n          </div>\n        }\n      />\n    );\n  };\n  return PopupComponent;\n};\n\ninterface PopupContentProps {\n  setOpen: Function;\n  onConfirm?: () => void;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ setOpen, onConfirm }) => {\n  return (\n    <div className={styles.popupContent}>\n      <div>Are you sure?</div>\n      <div>\n        <ActionButton size=\"small\" type=\"accept\" onClick={onConfirm} />\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default withConfirmationPopup;\n","import withConfirmationPopup from '../withConfirmationPopup';\nimport ActionButton from 'components/ActionButton';\n\nconst ConfirmedActionButton = withConfirmationPopup(ActionButton);\n\nexport { ConfirmedActionButton };\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, useState } from 'react';\nimport { GuidanceState, DocumentationResource, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport { ConfirmedActionButton } from 'components/ConfirmedActionButton';\nimport { isBranchState } from 'utils/nodeUtils';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState | State;\n  isActionable: boolean;\n  isGuidance: boolean;\n  documentation: DocumentationResource | undefined;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = ({\n  pathwayState,\n  isActionable,\n  isGuidance,\n  documentation\n}) => {\n  const [comments, setComments] = useState<string>('');\n\n  const guidance = isGuidance && renderGuidance(pathwayState as GuidanceState, documentation);\n  const branch = isBranchState(pathwayState) && renderBranch(documentation, pathwayState);\n\n  const defaultText =\n    `The patient and I discussed the treatment plan, ` +\n    `risks, benefits and alternatives.  The patient ` +\n    `expressed understanding and wants to proceed.`;\n\n  return (\n    <div className={indexStyles.expandedNode}>\n      <table className={styles.infoTable}>\n        <tbody>\n          <StatusField documentation={documentation} />\n          {guidance || branch}\n        </tbody>\n      </table>\n      {isActionable && (\n        <form className={styles.commentsForm}>\n          <label>Comments:</label>\n          <button\n            className={`${indexStyles.button} ${styles.defaultTextButton}`}\n            onClick={(e): void => {\n              e.preventDefault();\n              if (!comments.includes(defaultText)) setComments(comments + defaultText);\n            }}\n          >\n            Use Default Text\n          </button>\n          <textarea\n            className={styles.comments}\n            value={comments}\n            onChange={(e): void => setComments(e.target.value)}\n          ></textarea>\n          <div className={styles.footer}>\n            <ConfirmedActionButton type=\"accept\" size=\"large\" />\n          </div>\n          <div className={styles.footer}>\n            <ConfirmedActionButton type=\"decline\" size=\"large\" />\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\ntype StatusFieldProps = {\n  documentation: DocumentationResource | undefined;\n};\n\nconst StatusField: FC<StatusFieldProps> = ({ documentation }) => {\n  if (!documentation?.resource) {\n    return null;\n  }\n  const status = documentation.status;\n  const rawDate = documentation.resource?.meta?.lastUpdated;\n  const date = rawDate && new Date(rawDate).toLocaleString('en-us');\n  return <ExpandedNodeField key=\"Status\" title={status} description={date} />;\n};\n\nfunction renderBranch(\n  documentation: DocumentationResource | undefined,\n  pathwayState: State\n): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Observation': {\n        const observation = documentation.resource as fhir.Observation;\n\n        const valueCoding = observation.valueCodeableConcept?.coding;\n        valueCoding &&\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"ValueSystem\"\n              title=\"System\"\n              description={\n                <>\n                  {valueCoding[0].system}\n                  <a href={valueCoding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n                  </a>\n                </>\n              }\n            />,\n            <ExpandedNodeField key=\"ValueCode\" title=\"Code\" description={valueCoding[0].code} />,\n            <ExpandedNodeField\n              key=\"ValueDisplay\"\n              title=\"Display\"\n              description={valueCoding[0].display}\n            />\n          );\n\n        const date = observation.effectiveDateTime;\n        date &&\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Date\"\n              title=\"Date\"\n              description={\n                new Date(date).toLocaleDateString('en-us') +\n                ' ' +\n                new Date(date).toLocaleTimeString('en-us')\n              }\n            />\n          );\n      }\n    }\n  } else {\n    const values: string[] = pathwayState.transitions.map(transition => {\n      const description = transition.condition?.description;\n      return description ? description : '';\n    });\n    returnElements.push(\n      <ExpandedNodeField\n        key=\"value\"\n        title=\"Value\"\n        description={<MissingDataPopup values={values} />}\n      />\n    );\n  }\n  return returnElements;\n}\n\nfunction renderGuidance(\n  pathwayState: GuidanceState,\n  documentation: DocumentationResource | undefined\n): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding =\n    'medicationCodeableConcept' in resource\n      ? resource.medicationCodeableConcept.coding\n      : resource.code.coding;\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding[0].system}\n          <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding[0].display} />\n  ];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Procedure': {\n        const procedure = documentation.resource as fhir.Procedure;\n        const start =\n          (procedure.performedPeriod && procedure.performedPeriod.start) ||\n          procedure.performedDateTime;\n        const end = procedure.performedPeriod && procedure.performedPeriod.end;\n        if (start) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Start\"\n              title=\"Start\"\n              description={new Date(start).toLocaleDateString('en-us')}\n            />\n          );\n        }\n\n        if (end) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"End\"\n              title=\"End\"\n              description={new Date(end).toLocaleDateString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n    }\n  }\n  return returnElements;\n}\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef } from 'react';\nimport { GuidanceState, State, DocumentationResource } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport nodeStyles from 'styles/index.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  pathwayState: State;\n  documentation: DocumentationResource | undefined;\n  isOnPatientPath: boolean;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClickHandler?: () => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = forwardRef<HTMLDivElement, NodeProps>(\n  (\n    {\n      pathwayState,\n      documentation,\n      isOnPatientPath,\n      isCurrentNode,\n      xCoordinate,\n      yCoordinate,\n      expanded = false,\n      onClickHandler\n    },\n    ref\n  ) => {\n    const { label } = pathwayState;\n    const style = {\n      top: yCoordinate,\n      left: xCoordinate\n    };\n\n    const backgroundColorClass = isOnPatientPath ? styles.onPatientPath : styles.notOnPatientPath;\n    const isActionable = isCurrentNode && !documentation;\n    const topLevelClasses = [styles.node, backgroundColorClass];\n    let expandedNodeClass = '';\n    if (expanded) topLevelClasses.push(nodeStyles.expanded);\n    if (isActionable) {\n      topLevelClasses.push(styles.actionable);\n      expandedNodeClass = styles.childActionable;\n    } else {\n      expandedNodeClass = isOnPatientPath\n        ? styles.childOnPatientPath\n        : styles.childNotOnPatientPath;\n    }\n    const isGuidance = isGuidanceState(pathwayState);\n    // TODO: how do we determine whether a node has been accepted or declined?\n    // for now:\n    // if it's a non-actionable guidance state on the path: accepted == has documentation\n    // if it's actionable, not guidance or not on the path: null\n    const wasActionTaken = isOnPatientPath && isGuidance && !isActionable;\n    const isAccepted = wasActionTaken ? documentation != null : null;\n\n    return (\n      <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n        <div className={nodeStyles.nodeTitle} onClick={onClickHandler}>\n          <div className={nodeStyles.iconAndLabel}>\n            <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n            {label}\n          </div>\n          <StatusIcon accepted={isAccepted} />\n        </div>\n        {expanded && (\n          <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n            <ExpandedNode\n              pathwayState={pathwayState as GuidanceState}\n              isActionable={isActionable}\n              isGuidance={isGuidance}\n              documentation={documentation}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'MedicationAdministration') icon = faCapsules;\n      else if (resourceType === 'Procedure') icon = faSyringe;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  accepted: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ accepted }) => {\n  if (accepted == null) {\n    return null;\n  }\n  const icon = accepted ? faCheckCircle : faTimesCircle;\n  return (\n    <div className={nodeStyles.statusIcon}>\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  isOnPatientPath: boolean;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, isOnPatientPath, widthOffset }) => {\n  const className = isOnPatientPath ? styles.arrowOnPatientPath : styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import { Pathway, State } from 'pathways-model';\n\nexport interface CqlObject {\n  main: string;\n  libraries: Library;\n}\n\nexport interface Library {\n  [name: string]: string; // should probably have an object for expected ELM structure.\n}\nexport function getFixture(filename: string): Promise<string> {\n  return fetch(`./static/cql/${filename}`).then(cql => cql.text());\n}\n\n/**\n * Function to format each block from the pathway in CQL format\n * @param cqlBlock - block of CQL code from the pathway\n * @param resourceName - Name of the CQL resource block to be defined\n * @return the CQL code formatted pretty with the define line\n */\nfunction cqlFormat(cqlBlock: string, resourceName: string): string {\n  let formattedBlock = '';\n\n  // Definition of CQL block\n  const line1 = 'define \"' + resourceName + '\":\\n\\t';\n\n  // Build the formatted block\n  formattedBlock = line1.concat(cqlBlock);\n  return formattedBlock;\n}\n\n/**\n * Helper function to add the cql block to the completed cql\n * with the correct formatting\n * @param cql - complete cql string\n * @param cqlBlock - current cql block to append to the cql\n * @return the cql with the cql block appended correctly\n */\nfunction cqlAdd(cql: string, cqlBlock: string): string {\n  return cql.concat('\\n', '\\n', cqlBlock);\n}\n\n/**\n * Helper function to determine if a state has a conditional transition\n * @param state - the JSON object of the desired state on the pathway\n * @return true if state is a conditional transition and false\n *                   otherwise\n */\nfunction isConditional(state: State): boolean {\n  if ('transitions' in state) {\n    return state.transitions.length > 1 ? true : false;\n  } else return false;\n}\n\n/**\n * Function to extract the CQL code from each state in the pathway and build\n * the CQL code to execute\n * @param pathway - the JSON object of the entire pathway\n * @return a string of the CQL code for the navigational nodes in the pathway\n */\nexport function extractNavigationCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const stateName in pathway.states) {\n      const state = pathway.states[stateName];\n      if ('cql' in state) {\n        const cqlBlock1 = state.cql;\n        const nextBlock1 = cqlFormat(cqlBlock1, stateName);\n        cql = cqlAdd(cql, nextBlock1);\n      } else if (isConditional(state)) {\n        for (const transition of state.transitions) {\n          const condition = transition.condition;\n          if (condition) {\n            const nextBlock2 = cqlFormat(condition.cql, condition.description);\n            cql = cqlAdd(cql, nextBlock2);\n          }\n        }\n      }\n    }\n\n    return cql;\n  });\n}\n\n/**\n * Extract the CQL statements from the `criteria` section of the pathway\n * into a snippet ready to be converted to ELM.\n * @param pathway - the entire pathway object\n * @return a string of the CQL for the criteria in the pathway\n */\nexport function extractCriteriaCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const criteria of pathway.criteria) {\n      const cqlBlock1 = criteria.cql;\n      const nextBlock1 = cqlFormat(cqlBlock1, criteria.elementName);\n      cql = cqlAdd(cql, nextBlock1);\n    }\n\n    return cql;\n  });\n}\n","// sample header= \"multipart/form-data;boundary=Boundary_1\"\n// get the part after \"boundary=\" and before any subsequent ;\nexport const extractMultipartBoundary = /.*;boundary=(Boundary.*);?.*/g;\n\nexport const extractMultipartFileName = /Content-Disposition: form-data; name=\"([^\"]+)\"/;\n\n// eveything between { } including newlines. [^] is like . but matches newline\nexport const extractJSONContent = /(\\{[^]*\\})/;\n\nexport const extractCQLInclude = /include .* called (.*)/g;\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","/* eslint-disable max-len */\nimport { ElmResults } from 'pathways-model';\nimport { Library, Executor, Repository } from 'cql-execution';\nimport { PatientSource } from 'cql-exec-fhir';\n\n/**\n * Engine function that takes in a patient file (JSON) and an ELM file, running the patient against the ELM file\n * @param patient - FHIR bundle containing patient's record\n * @param elm - ELM structure (previosuly converted from CQL) on which the patient will be run.\n * @return returns a JSON object which is the result of analyzing the patient against the elm file\n */\nexport default function executeElm(patient: object, elm: object, libraries?: object): ElmResults {\n  let lib;\n  if (libraries) {\n    lib = new Library(elm, new Repository(libraries));\n  } else {\n    lib = new Library(elm);\n  }\n\n  const executor = new Executor(lib);\n  const psource = new PatientSource.FHIRv400(patient);\n  psource.loadBundles(patient);\n  const result = executor.exec(psource);\n  return result;\n}\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport {\n  Pathway,\n  PathwayResults,\n  PatientData,\n  CriteriaResult,\n  DocumentationResource,\n  State\n} from 'pathways-model';\n\ninterface StateData {\n  documentation: DocumentationResource | string | null;\n  nextState: string | null;\n  status: string;\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the patient's pathway\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns a JSON object describing where the patient is on the given pathway\n *  {\n *    currentState - the name of the state patient is currently in\n *    currentStatus - the status of the patient in the current state (from FHIR resource)\n *          A status of unknown could be the resource returned an unknown status or the resource has no status at all\n *    path - list of the names of states in the patient's pathway\n *    documentation - list of documentation for the trace of the pathway (documentation is corresponding resource)\n *  }\n */\nexport function pathwayData(\n  pathway: Pathway,\n  patientData: PatientData,\n  resources: object[]\n): PathwayResults {\n  const startState = 'Start';\n  let currentStatus;\n  const patientDocumentation = [];\n  const evaluatedPathway = [startState];\n\n  let stateData = nextState(pathway, patientData, startState);\n  while (stateData !== null) {\n    currentStatus = stateData.status;\n    if (stateData.documentation !== null)\n      patientDocumentation.push(retrieveResource(stateData.documentation, resources));\n    if (stateData.nextState === null) break; // The position of this line is important to maintain consistency for different scenarios\n    evaluatedPathway.push(stateData.nextState);\n    stateData = nextState(pathway, patientData, stateData.nextState);\n  }\n  const currentStateName = evaluatedPathway[evaluatedPathway.length - 1];\n  const currentState = pathway.states[currentStateName];\n  return {\n    patientId: patientData.Patient.id.value,\n    currentState: currentStateName,\n    currentStatus: currentStatus,\n    nextRecommendation: nextStateRecommendation(currentState),\n    path: evaluatedPathway,\n    documentation: patientDocumentation\n  };\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the pathway criteria\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns a list of CriteriaResults, each containing the expected and actual value for one data element\n */\nexport function criteriaData(pathway: Pathway, patientData: PatientData): CriteriaResult[] {\n  const result: CriteriaResult[] = [];\n\n  pathway.criteria.forEach(criteria => {\n    let evaluationResult = patientData[criteria.elementName];\n    if (Array.isArray(evaluationResult)) {\n      evaluationResult = evaluationResult[0]; // TODO: add functionality for multiple resources\n    }\n    let actual = 'unknown';\n    let match = false;\n\n    if (evaluationResult) {\n      actual = evaluationResult['value'];\n      match = evaluationResult['match'];\n    }\n\n    const criteriaResult = {\n      elementName: criteria.elementName,\n      expected: criteria.expected,\n      actual,\n      match\n    };\n\n    result.push(criteriaResult);\n  });\n\n  return result;\n}\n\n/**\n * Helper function to set the next recommendation\n * @param state - the current state in the pathway (where the patient is)\n * @return \"pathway terminal\" if state is the end of the pathway\n *        the name of the next state in a direct transition\n *        an object describing possible transitions and descriptions\n */\nfunction nextStateRecommendation(state: State): string | object {\n  const transitions = state.transitions;\n  if (transitions.length === 0) return 'pathway terminal';\n  else if (transitions.length === 1) return transitions[0].transition;\n  else {\n    return transitions.map(transition => {\n      return {\n        state: transition.transition,\n        conditionDescription:\n          'condition' in transition ? transition.condition && transition.condition.description : ''\n      };\n    });\n  }\n}\n\n/**\n * Helper function to format the documentation and include the related state\n * @param resource - the resource returned by the CQL execution\n * @param state - the current state name\n * @return the JSON resource with the state property set\n */\nfunction formatDocumentation(\n  resource: DocumentationResource,\n  state: string\n): DocumentationResource {\n  resource.state = state;\n  return resource;\n}\n\n/**\n * Helper function to select the transition state\n * This function is needed because MedicationRequests can have multiple\n * different statuses to indiciate complete\n * @param resource - the resource returned by the CQL execution\n * @param currentState - the current state\n * @return the next state name or null\n */\nfunction formatNextState(resource: DocumentationResource, currentState: State): string | null {\n  if (resource.resourceType === 'MedicationRequest') {\n    return currentState.transitions.length !== 0 ? currentState.transitions[0].transition : null;\n  } else {\n    return resource.status === 'completed' && currentState.transitions.length !== 0\n      ? currentState.transitions[0].transition\n      : null;\n  }\n}\n\n/**\n * Determine the nextState in a conditional transition state\n * @param patientData - JSON object representing the data on a patient\n * @param currentState - the current state\n * @param currentStateName - the name of the current state\n * @return the next state\n */\nfunction getConditionalNextState(\n  patientData: PatientData,\n  currentState: State,\n  currentStateName: string\n): StateData {\n  for (const transition of currentState.transitions) {\n    if (transition.condition) {\n      let documentationResource =\n        'condition' in transition ? patientData[transition.condition.description] : '';\n      if (documentationResource.length) {\n        documentationResource = documentationResource[0]; // TODO: add functionality for multiple resources\n        return {\n          nextState: transition.transition,\n          documentation: formatDocumentation(documentationResource, currentStateName),\n          status: 'status' in documentationResource ? documentationResource.status : 'unknown'\n        };\n        // Is there ever a time we may hit multiple conditions?\n      }\n    }\n  }\n\n  // No matching resource in the patient data to move from state\n  return noMatchingResourceForState();\n}\n\n/**\n * No resource exists for the next state\n * @return empty object\n */\nfunction noMatchingResourceForState(): StateData {\n  return {\n    nextState: null,\n    documentation: null,\n    status: 'not-done'\n  };\n}\n\n/**\n * Helper function to traverse the pathway and determine the next state in a patients pathway.\n * For actions this function will also verify the move is valid by the resource status\n * @param pathway - JSON object representing the complete pathway\n * @param patientData - JSON object representing the data on a patient\n * @param currentStateName - the name of the current state in the traversal\n * @return returns object with the next state, the status, and the evidenvce\n */\nfunction nextState(\n  pathway: Pathway,\n  patientData: PatientData,\n  currentStateName: string\n): StateData | null {\n  const currentState = pathway.states[currentStateName];\n  if ('action' in currentState) {\n    let resource = patientData[currentStateName];\n    if (resource?.length) {\n      resource = resource[0]; // TODO: add functionality for multiple resources\n      return {\n        nextState: formatNextState(resource, currentState),\n        documentation: formatDocumentation(resource, currentStateName),\n        status: 'status' in resource ? resource.status : 'unknown'\n      };\n    } else {\n      // Action exists but has no matching resource in patientData\n      return noMatchingResourceForState();\n    }\n  } else if (currentState.transitions.length === 1) {\n    return {\n      nextState: currentState.transitions[0].transition,\n      documentation: 'direct',\n      status: 'completed'\n    };\n  } else if (currentState.transitions.length > 1) {\n    return getConditionalNextState(patientData, currentState, currentStateName);\n  } else return null;\n}\n\nfunction retrieveResource(\n  doc: DocumentationResource | string,\n  resources: fhir.DomainResource[]\n): DocumentationResource | string {\n  if (typeof doc !== 'string' && resources) {\n    doc.resource = resources.find(resource => {\n      return resource.resourceType === doc.resourceType && resource.id === doc.id;\n    });\n  }\n\n  return doc;\n}\n","import { extractNavigationCQL, extractCriteriaCQL, CqlObject, Library } from './cql-extractor';\nimport convertCQL, { convertBasicCQL, ElmObject } from './cql-to-elm';\nimport executeElm from './elm-executor';\nimport { pathwayData, criteriaData } from './output-results';\nimport { Pathway, PatientData, PathwayResults, ElmResults, CriteriaResult } from 'pathways-model';\nimport { getFixture } from './cql-extractor';\nimport { extractCQLInclude } from 'utils/regexes';\n\nfunction instanceOfElmObject(object: object): object is ElmObject {\n  return 'main' in object;\n}\n\n/**\n * Function to run each of the engine files in series to execute\n * the automated pathway\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return Information on the patient's current status within the\n *                  clinical pathway\n */\nexport function evaluatePatientOnPathway(\n  patient: object,\n  pathway: Pathway,\n  resources: object[]\n): Promise<PathwayResults> {\n  return extractNavigationCQL(pathway)\n    .then(cql => processCQLCommon(patient, cql))\n    .then(patientData => pathwayData(pathway, patientData, resources));\n}\n\n/**\n * Evaluate the pathway criteria against the given patient.\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return a list of CriteriaResults, each containing\n *         the expected value and actual value for one criteria item\n */\nexport function evaluatePathwayCriteria(\n  patient: object,\n  pathway: Pathway\n): Promise<CriteriaResult[]> {\n  return extractCriteriaCQL(pathway)\n    .then(cql => processCQLCommon(patient, cql))\n    .then(patientData => criteriaData(pathway, patientData));\n}\n\n/**\n * Common logic to execute the given CQL against the given Patient.\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return the raw, unprocessed patientResults\n *         derived from executing the CQL against the given patient\n */\nfunction processCQLCommon(patient: object, cql: string): Promise<PatientData> {\n  // Likely need an intermediary step that gathers the CQL files needed\n  // example function gatherCQL\n  return gatherCQL(cql)\n    .then(result => {\n      if (Object.keys(result).length > 0) {\n        // non-empty library\n        const cqlObject: CqlObject = {\n          main: cql,\n          libraries: result\n        };\n        return convertCQL(cqlObject);\n      } else {\n        return convertBasicCQL(cql);\n      }\n    })\n    .then(elm => {\n      let elmResults: ElmResults = {\n        patientResults: {}\n      };\n      if (instanceOfElmObject(elm)) {\n        elmResults = executeElm(patient, elm.main, elm.libraries);\n      } else {\n        elmResults = executeElm(patient, elm);\n      }\n\n      // TODO - update pathwaysData to take multiple patients\n      const patientIds = Object.keys(elmResults.patientResults);\n      const patientData = elmResults.patientResults[patientIds[0]];\n      return patientData;\n    });\n}\n\n// example function that would gather library CQL files\nfunction gatherCQL(cql: string): Promise<Library> {\n  const lib = extractCQLInclude.exec(cql);\n  if (lib) {\n    return getFixture(`${lib[1]}.cql`).then(result => {\n      return new Promise(function(resolve, reject): void {\n        setTimeout(function() {\n          resolve({ FHIRHelpers: result });\n        }, 300);\n      });\n    });\n  } else {\n    return new Promise(function(resolve, reject): void {\n      resolve({});\n    });\n  }\n}\n","import React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { evaluatePatientOnPathway } from 'engine';\nimport { EvaluatedPathway, PathwayResults, DocumentationResource } from 'pathways-model';\nimport { Layout, NodeDimensions, Edge } from 'graph-model';\n\ninterface GraphProps {\n  evaluatedPathway: EvaluatedPathway;\n  resources: object[];\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n  updateEvaluatedPathways: (value: EvaluatedPathway) => void;\n}\n\nconst isEdgeOnPatientPath = (path: string[], edge: Edge): boolean => {\n  const startIndex = path.indexOf(edge.start);\n  const endIndex = path.indexOf(edge.end);\n  return startIndex !== -1 && endIndex !== -1 && startIndex + 1 === endIndex;\n};\n\nconst Graph: FC<GraphProps> = ({\n  resources,\n  evaluatedPathway,\n  interactive = true,\n  expandCurrentNode = true,\n  updateEvaluatedPathways\n}) => {\n  const pathway = evaluatedPathway.pathway;\n  const graphElement = useRef<HTMLDivElement>(null);\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n  const [windowWidth, setWindowWidth] = useState<number>(useWindowWidth());\n  const parentWidth = graphElement?.current?.parentElement?.clientWidth ?? 0;\n  const [path, _setPath] = useState<string[]>(\n    evaluatedPathway.pathwayResults ? evaluatedPathway.pathwayResults.path : []\n  );\n\n  const setPath = useCallback(\n    (value: PathwayResults): void => {\n      _setPath(value.path);\n      updateEvaluatedPathways({ pathway: evaluatedPathway.pathway, pathwayResults: value });\n    },\n    [evaluatedPathway.pathway, updateEvaluatedPathways]\n  );\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    return graphLayout(pathway, nodeDimensions);\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  const initialExpandedState = useMemo(() => {\n    return Object.keys(layout).reduce((acc: { [key: string]: boolean }, curr: string) => {\n      acc[curr] = false;\n      return acc;\n    }, {});\n  }, [layout]);\n\n  const [expanded, _setExpanded] = useState<{ [key: string]: boolean | undefined }>(\n    initialExpandedState\n  );\n\n  const setExpanded = useCallback((key: string, expand?: boolean): void => {\n    _setExpanded(prevState => {\n      return { ...prevState, [key]: !prevState[key] };\n    });\n  }, []);\n\n  useEffect(() => {\n    // Keeps track of whether the current useEffect cycle has ended\n    let cancel = false;\n\n    if (resources.length > 0 && path.length === 0) {\n      // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n      const patient = {\n        resourceType: 'Bundle',\n        entry: resources.map((r: object) => ({ resource: r }))\n      };\n      evaluatePatientOnPathway(patient, pathway, resources).then(pathwayResults => {\n        if (!cancel) setPath(pathwayResults);\n      });\n\n      return (): void => {\n        cancel = true;\n      };\n    }\n  }, [pathway, resources, path.length, setPath]);\n\n  useEffect(() => {\n    if (path) {\n      const currentNode = path[path.length - 1];\n      if (expandCurrentNode) {\n        if (currentNode) setExpanded(currentNode, true);\n      }\n    }\n  }, [expandCurrentNode, path, setExpanded]);\n\n  // Recalculate graph layout if window size changes or if a node is expanded\n  useEffect(() => {\n    setWindowWidth(parentWidth);\n    setLayout(getGraphLayout());\n  }, [getGraphLayout, parentWidth]);\n\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [expanded, getGraphLayout]);\n\n  // maxWidth finds the edge label that is farthest to the right\n  const maxWidth: number =\n    edges !== undefined\n      ? Object.values(edges)\n          .map(e => e.label)\n          .map(l => (l ? l.x + l.text.length * 10 + windowWidth / 2 : 0))\n          .reduce((a, b) => Math.max(a, b), 0)\n      : windowWidth;\n\n  const documentation = evaluatedPathway.pathwayResults\n    ? evaluatedPathway.pathwayResults.documentation\n    : [];\n  return (\n    <div ref={graphElement} style={{ height: maxHeight + 150 + 'px', position: 'relative' }}>\n      {nodeCoordinates !== undefined\n        ? Object.keys(nodeCoordinates).map(key => {\n            const docResource = documentation.find((doc): doc is DocumentationResource => {\n              return typeof doc !== 'string' && doc.state === key;\n            });\n            const isCurrentNode = (): boolean => {\n              return path[path.length - 1] === key;\n            };\n            const onClickHandler = interactive ? (): void => setExpanded(key) : undefined;\n            return (\n              <Node\n                key={key}\n                documentation={docResource}\n                ref={(node: HTMLDivElement): void => {\n                  nodeRefs.current[key] = node;\n                }}\n                pathwayState={pathway.states[key]}\n                isOnPatientPath={path.includes(key)}\n                isCurrentNode={isCurrentNode()}\n                xCoordinate={nodeCoordinates[key].x + windowWidth / 2}\n                yCoordinate={nodeCoordinates[key].y}\n                expanded={expanded[key]}\n                onClickHandler={onClickHandler}\n              />\n            );\n          })\n        : []}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          width: maxWidth,\n          height: maxHeight,\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          overflow: 'visible'\n        }}\n      >\n        {edges !== undefined\n          ? Object.keys(edges).map(edgeName => {\n              const edge = edges[edgeName];\n              return (\n                <Arrow\n                  key={edgeName}\n                  edge={edge}\n                  edgeName={edgeName}\n                  isOnPatientPath={isEdgeOnPatientPath(path, edge)}\n                  widthOffset={windowWidth / 2}\n                />\n              );\n            })\n          : []}\n      </svg>\n    </div>\n  );\n};\n\nfunction useWindowWidth(): number {\n  const getWidth = (): number => window.innerWidth;\n  const [windowWidth, setWindowWidth] = useState(getWidth);\n\n  useEffect(() => {\n    const handleResize = (): void => setWindowWidth(getWidth);\n\n    window.addEventListener('resize', handleResize);\n    return (): void => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowWidth;\n}\n\nexport default Graph;\n","import React, { FC, ReactNode, useState } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway, EvaluatedPathway, CriteriaResult } from 'pathways-model';\n\nimport styles from './PathwaysList.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Graph from 'components/Graph';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { evaluatePathwayCriteria } from 'engine';\nimport {\n  faPlay,\n  faPlus,\n  faMinus,\n  faChevronUp,\n  faChevronDown\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface PathwaysListElementProps {\n  evaluatedPathway: EvaluatedPathway;\n  resources: Array<fhir.DomainResource>;\n  callback: Function;\n}\n\ninterface PathwaysListProps {\n  evaluatedPathways: EvaluatedPathway[];\n  callback: Function;\n  service: Service<Array<Pathway>>;\n  resources: Array<fhir.DomainResource>;\n}\n\nconst PathwaysList: FC<PathwaysListProps> = ({\n  evaluatedPathways,\n  callback,\n  service,\n  resources\n}) => {\n  function renderList(): ReactNode {\n    return (\n      <div>\n        {evaluatedPathways.map(evaluatedPathway => {\n          return (\n            <PathwaysListElement\n              evaluatedPathway={evaluatedPathway}\n              callback={callback}\n              resources={resources}\n              key={evaluatedPathway.pathway.name}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.pathways_list}>\n      {service.status === 'loading' ? (\n        <div>Loading...</div>\n      ) : service.status === 'loaded' ? (\n        <div className={styles.container}>\n          <div className={styles.header_title}>\n            <div className={styles.header_title__header}>Explore Pathways</div>\n            <div className={styles.header_title__note}>Select pathway below to view details</div>\n          </div>\n\n          {renderList()}\n        </div>\n      ) : (\n        <div>ERROR</div>\n      )}\n    </div>\n  );\n};\n\nconst PathwaysListElement: FC<PathwaysListElementProps> = ({\n  evaluatedPathway,\n  resources,\n  callback\n}) => {\n  const pathway = evaluatedPathway.pathway;\n  const pathwayCtx = usePathwayContext();\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const [criteria, setCriteria] = useState<CriteriaResult[] | null>(null);\n\n  if (criteria == null && resources != null && resources.length > 0) {\n    // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n    const patient = {\n      resourceType: 'Bundle',\n      entry: resources.map((r: fhir.Resource) => ({ resource: r }))\n    };\n    evaluatePathwayCriteria(patient, pathway).then(c => setCriteria(c));\n  }\n\n  const chevron: IconProp = isVisible ? faChevronUp : faChevronDown;\n\n  function toggleVisible(): void {\n    setIsVisible(!isVisible);\n  }\n  return (\n    <div className={styles.pathwayElement} role={'list'} key={pathway.name}>\n      <div\n        className={styles.title}\n        role={'listitem'}\n        onClick={(e): void => {\n          pathwayCtx.setEvaluatedPathway(evaluatedPathway, true);\n          toggleVisible();\n        }}\n      >\n        <div>{pathway.name}</div>\n        <div className={styles.expand}>\n          <FontAwesomeIcon icon={chevron} />\n        </div>\n        <div className={styles.numElements}>{criteria && criteria.filter(c => c.match).length}</div>\n      </div>\n\n      {isVisible && (\n        <div className={styles.infoContainer}>\n          <div className={styles.details}>\n            <p>{pathway.description}</p>\n            <table>\n              <tbody>\n                <tr>\n                  <th></th>\n                  <th>mCODE elements</th>\n                  <th>patient elements</th>\n                </tr>\n                {criteria &&\n                  criteria.map(c => (\n                    <tr key={c.elementName}>\n                      <td>{c.elementName}</td>\n                      <td>{c.expected}</td>\n                      <td className={c.match ? styles.matchingElement : undefined}>{c.actual}</td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n            <button className={indexStyles.button} onClick={(): void => callback(evaluatedPathway)}>\n              Select Pathway\n            </button>\n          </div>\n          <div className={styles.pathway}>\n            <Graph\n              resources={resources}\n              evaluatedPathway={evaluatedPathway}\n              interactive={false}\n              expandCurrentNode={false}\n              updateEvaluatedPathways={pathwayCtx.updateEvaluatedPathways}\n            />\n            <div className={styles.controls}>\n              <FontAwesomeIcon icon={faPlay} />\n              <FontAwesomeIcon icon={faPlus} />\n              <FontAwesomeIcon icon={faMinus} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PathwaysList;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Array<Pathway>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<Array<string>>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import React, { FC, useState, useEffect } from 'react';\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport { PathwaysClient } from 'pathways-client';\nimport logo from 'camino-logo-dark.png';\nimport { getPatientRecord } from '../utils/fhirExtract';\nimport { FHIRClientProvider } from './FHIRClient';\nimport { PatientProvider } from './PatientProvider';\nimport PatientRecord from './PatientRecord/PatientRecord';\nimport Graph from './Graph';\nimport config from 'utils/ConfigManager';\nimport PathwaysList from './PathwaysList';\nimport { PathwayProvider } from './PathwayProvider';\nimport { EvaluatedPathway } from 'pathways-model';\nimport useGetPathwaysService from './PathwaysService/PathwaysService';\nimport FHIR from 'fhirclient';\nimport demoRecords from 'fixtures/MaureenMcodeDemoPatientRecords.json';\n\ninterface AppProps {\n  demo: boolean;\n}\n\nconst App: FC<AppProps> = ({ demo }) => {\n  const [patientRecords, setPatientRecords] = useState<Array<fhir.DomainResource>>([]);\n  const [currentPathway, setCurrentPathway] = useState<EvaluatedPathway | null>(null);\n  const [selectPathway, setSelectPathway] = useState<boolean>(true);\n  const [evaluatedPathways, setEvaluatedPathways] = useState<EvaluatedPathway[]>([]);\n  const [client, setClient] = useState<PathwaysClient | null>(null);\n\n  useEffect(() => {\n    if (!demo) {\n      FHIR.oauth2\n        .init({\n          clientId: 'Input client id you get when you register the app',\n          scope: 'launch/patient openid profile'\n        })\n        .then(client => {\n          setClient(client);\n        });\n    } else {\n      // TODO: Use mocked out FHIR client\n      setPatientRecords(demoRecords);\n    }\n  }, [demo]);\n\n  useEffect(() => {\n    if (client) {\n      getPatientRecord(client).then((records: Array<fhir.DomainResource>) => {\n        // filters out values that are empty\n        // the server might return deleted\n        // resources that only include an\n        // id, meta, and resourceType\n        const values = ['id', 'meta', 'resourceType'];\n        records = records.filter(resource => {\n          return !Object.keys(resource).every(value => values.includes(value));\n        });\n\n        setPatientRecords(records);\n      });\n    }\n  }, [client]);\n\n  const service = useGetPathwaysService(\n    config.get(demo ? 'demoPathwaysService' : 'pathwaysService')\n  );\n\n  useEffect(() => {\n    if (service.status === 'loaded' && evaluatedPathways.length === 0)\n      setEvaluatedPathways(\n        service.payload.map(pathway => ({ pathway: pathway, pathwayResults: null }))\n      );\n  }, [service, evaluatedPathways.length, client]);\n\n  function setEvaluatedPathwayCallback(\n    value: EvaluatedPathway | null,\n    selectPathway = false\n  ): void {\n    window.scrollTo(0, 0);\n    setSelectPathway(selectPathway);\n    setCurrentPathway(value);\n  }\n\n  function updateEvaluatedPathways(value: EvaluatedPathway): void {\n    const newList = [...evaluatedPathways]; // Create a shallow copy of list\n    for (let i = 0; i < evaluatedPathways.length; i++) {\n      if (evaluatedPathways[i].pathway.name === value.pathway.name) {\n        newList[i] = value;\n        setEvaluatedPathways(newList);\n      }\n    }\n\n    if (currentPathway?.pathway.name === value.pathway.name) {\n      setCurrentPathway(value);\n    }\n  }\n\n  interface PatientViewProps {\n    evaluatedPathway: EvaluatedPathway | null;\n  }\n\n  const PatientView: FC<PatientViewProps> = ({ evaluatedPathway }) => {\n    return (\n      <div>\n        {evaluatedPathway ? (\n          <Graph\n            resources={patientRecords}\n            evaluatedPathway={evaluatedPathway}\n            expandCurrentNode={true}\n            updateEvaluatedPathways={updateEvaluatedPathways}\n          />\n        ) : (\n          <div>No Pathway Loaded</div>\n        )}\n        <PatientRecord resources={patientRecords} />\n      </div>\n    );\n  };\n\n  const currentPathwayProvider = (\n    <PathwayProvider\n      pathwayCtx={{\n        updateEvaluatedPathways,\n        evaluatedPathway: currentPathway,\n        setEvaluatedPathway: setEvaluatedPathwayCallback\n      }}\n    >\n      <div>\n        <Header logo={logo} />\n        <Navigation\n          evaluatedPathways={evaluatedPathways}\n          selectPathway={selectPathway}\n          setSelectPathway={setSelectPathway}\n        />\n      </div>\n      {selectPathway ? (\n        <PathwaysList\n          evaluatedPathways={evaluatedPathways}\n          callback={setEvaluatedPathwayCallback}\n          service={service}\n          resources={patientRecords}\n        ></PathwaysList>\n      ) : (\n        <PatientView evaluatedPathway={currentPathway} />\n      )}\n    </PathwayProvider>\n  );\n\n  // TODO: Once we have a mocked out FHIR client we can include FHIRClientProvider to /demo endpoint\n  return !demo ? (\n    <FHIRClientProvider client={client as PathwaysClient}>\n      <PatientProvider>{currentPathwayProvider}</PatientProvider>\n    </FHIRClientProvider>\n  ) : (\n    <PatientProvider patient={demoRecords.find(r => r.resourceType === 'Patient') as fhir.Patient}>\n      {currentPathwayProvider}\n    </PatientProvider>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './components/App.tsx';\nimport './styles/index.module.scss';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" render={() => <App demo={false} />}></Route>\n      <Route path=\"/demo\" render={() => <App demo={true} />}></Route>\n    </Switch>\n  </Router>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientSnapshot\":\"PatientSnapshot_patientSnapshot__3bGcm\",\"patientSnapshot__info\":\"PatientSnapshot_patientSnapshot__info__2Ry7e\",\"patientName\":\"PatientSnapshot_patientName__ZClJB\",\"patientSnapshot__photo\":\"PatientSnapshot_patientSnapshot__photo__3XI7U\",\"patientSnapshot__list\":\"PatientSnapshot_patientSnapshot__list__5DVC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigation__back\":\"Navigation_navigation__back__2cVZ2\",\"navigation__leftPanel\":\"Navigation_navigation__leftPanel__QjHPF\",\"navigation__rightPanel\":\"Navigation_navigation__rightPanel__1FRD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"settingsLogo\":\"Header_settingsLogo__z_SWy\",\"headerRight\":\"Header_headerRight__2f-DD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"triggerContainer\":\"withConfirmationPopup_triggerContainer__3AU8B\",\"withConfirmationPopup\":\"withConfirmationPopup_withConfirmationPopup__2V1qn\",\"popupContent\":\"withConfirmationPopup_popupContent__3ksQD\",\"selectButton\":\"withConfirmationPopup_selectButton__1e5Z2\",\"accept\":\"withConfirmationPopup_accept__X2X4A\",\"decline\":\"withConfirmationPopup_decline__18Klm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\",\"arrowOnPatientPath\":\"Arrow_arrowOnPatientPath__1r5CB\"};","var map = {\n\t\"./alert\": 287,\n\t\"./alert.js\": 287,\n\t\"./alert.js.map\": 1025,\n\t\"./allergyintolerance\": 288,\n\t\"./allergyintolerance.js\": 288,\n\t\"./allergyintolerance.js.map\": 1026,\n\t\"./appointment\": 289,\n\t\"./appointment.js\": 289,\n\t\"./appointment.js.map\": 1027,\n\t\"./appointmentresponse\": 290,\n\t\"./appointmentresponse.js\": 290,\n\t\"./appointmentresponse.js.map\": 1028,\n\t\"./availability\": 291,\n\t\"./availability.js\": 291,\n\t\"./availability.js.map\": 1029,\n\t\"./basic\": 292,\n\t\"./basic.js\": 292,\n\t\"./basic.js.map\": 1030,\n\t\"./binary\": 293,\n\t\"./binary.js\": 293,\n\t\"./binary.js.map\": 1031,\n\t\"./bundle\": 294,\n\t\"./bundle.js\": 294,\n\t\"./bundle.js.map\": 1032,\n\t\"./careplan\": 295,\n\t\"./careplan.js\": 295,\n\t\"./careplan.js.map\": 1033,\n\t\"./claimresponse\": 296,\n\t\"./claimresponse.js\": 296,\n\t\"./claimresponse.js.map\": 1034,\n\t\"./communicationrequest\": 297,\n\t\"./communicationrequest.js\": 297,\n\t\"./communicationrequest.js.map\": 1035,\n\t\"./composition\": 298,\n\t\"./composition.js\": 298,\n\t\"./composition.js.map\": 1036,\n\t\"./conceptmap\": 299,\n\t\"./conceptmap.js\": 299,\n\t\"./conceptmap.js.map\": 1037,\n\t\"./condition\": 300,\n\t\"./condition.js\": 300,\n\t\"./condition.js.map\": 1038,\n\t\"./conformance\": 301,\n\t\"./conformance.js\": 301,\n\t\"./conformance.js.map\": 1039,\n\t\"./contract\": 302,\n\t\"./contract.js\": 302,\n\t\"./contract.js.map\": 1040,\n\t\"./contraindication\": 303,\n\t\"./contraindication.js\": 303,\n\t\"./contraindication.js.map\": 1041,\n\t\"./core\": 4,\n\t\"./core.js\": 4,\n\t\"./core.js.map\": 1042,\n\t\"./coverage\": 304,\n\t\"./coverage.js\": 304,\n\t\"./coverage.js.map\": 1043,\n\t\"./dataelement\": 305,\n\t\"./dataelement.js\": 305,\n\t\"./dataelement.js.map\": 1044,\n\t\"./device\": 306,\n\t\"./device.js\": 306,\n\t\"./device.js.map\": 1045,\n\t\"./devicecomponent\": 307,\n\t\"./devicecomponent.js\": 307,\n\t\"./devicecomponent.js.map\": 1046,\n\t\"./deviceuserequest\": 308,\n\t\"./deviceuserequest.js\": 308,\n\t\"./deviceuserequest.js.map\": 1047,\n\t\"./deviceusestatement\": 309,\n\t\"./deviceusestatement.js\": 309,\n\t\"./deviceusestatement.js.map\": 1048,\n\t\"./diagnosticorder\": 310,\n\t\"./diagnosticorder.js\": 310,\n\t\"./diagnosticorder.js.map\": 1049,\n\t\"./diagnosticreport\": 311,\n\t\"./diagnosticreport.js\": 311,\n\t\"./diagnosticreport.js.map\": 1050,\n\t\"./documentmanifest\": 312,\n\t\"./documentmanifest.js\": 312,\n\t\"./documentmanifest.js.map\": 1051,\n\t\"./documentreference\": 313,\n\t\"./documentreference.js\": 313,\n\t\"./documentreference.js.map\": 1052,\n\t\"./eligibility\": 314,\n\t\"./eligibility.js\": 314,\n\t\"./eligibility.js.map\": 1053,\n\t\"./eligibilityresponse\": 315,\n\t\"./eligibilityresponse.js\": 315,\n\t\"./eligibilityresponse.js.map\": 1054,\n\t\"./encounter\": 316,\n\t\"./encounter.js\": 316,\n\t\"./encounter.js.map\": 1055,\n\t\"./enrollment\": 317,\n\t\"./enrollment.js\": 317,\n\t\"./enrollment.js.map\": 1056,\n\t\"./enrollmentresponse\": 318,\n\t\"./enrollmentresponse.js\": 318,\n\t\"./enrollmentresponse.js.map\": 1057,\n\t\"./explanationofbenefit\": 319,\n\t\"./explanationofbenefit.js\": 319,\n\t\"./explanationofbenefit.js.map\": 1058,\n\t\"./extensiondefinition\": 320,\n\t\"./extensiondefinition.js\": 320,\n\t\"./extensiondefinition.js.map\": 1059,\n\t\"./familyhistory\": 321,\n\t\"./familyhistory.js\": 321,\n\t\"./familyhistory.js.map\": 1060,\n\t\"./group\": 322,\n\t\"./group.js\": 322,\n\t\"./group.js.map\": 1061,\n\t\"./healthcareservice\": 323,\n\t\"./healthcareservice.js\": 323,\n\t\"./healthcareservice.js.map\": 1062,\n\t\"./imagingobjectselection\": 324,\n\t\"./imagingobjectselection.js\": 324,\n\t\"./imagingobjectselection.js.map\": 1063,\n\t\"./imagingstudy\": 325,\n\t\"./imagingstudy.js\": 325,\n\t\"./imagingstudy.js.map\": 1064,\n\t\"./immunization\": 326,\n\t\"./immunization.js\": 326,\n\t\"./immunization.js.map\": 1065,\n\t\"./immunizationrecommendation\": 327,\n\t\"./immunizationrecommendation.js\": 327,\n\t\"./immunizationrecommendation.js.map\": 1066,\n\t\"./list\": 328,\n\t\"./list.js\": 328,\n\t\"./list.js.map\": 1067,\n\t\"./location\": 329,\n\t\"./location.js\": 329,\n\t\"./location.js.map\": 1068,\n\t\"./media\": 330,\n\t\"./media.js\": 330,\n\t\"./media.js.map\": 1069,\n\t\"./medication\": 331,\n\t\"./medication.js\": 331,\n\t\"./medication.js.map\": 1070,\n\t\"./medicationadministration\": 332,\n\t\"./medicationadministration.js\": 332,\n\t\"./medicationadministration.js.map\": 1071,\n\t\"./medicationdispense\": 333,\n\t\"./medicationdispense.js\": 333,\n\t\"./medicationdispense.js.map\": 1072,\n\t\"./medicationprescription\": 334,\n\t\"./medicationprescription.js\": 334,\n\t\"./medicationprescription.js.map\": 1073,\n\t\"./medicationstatement\": 335,\n\t\"./medicationstatement.js\": 335,\n\t\"./medicationstatement.js.map\": 1074,\n\t\"./messageheader\": 336,\n\t\"./messageheader.js\": 336,\n\t\"./messageheader.js.map\": 1075,\n\t\"./models\": 285,\n\t\"./models.js\": 285,\n\t\"./models.js.map\": 1076,\n\t\"./namingsystem\": 337,\n\t\"./namingsystem.js\": 337,\n\t\"./namingsystem.js.map\": 1077,\n\t\"./nutritionorder\": 338,\n\t\"./nutritionorder.js\": 338,\n\t\"./nutritionorder.js.map\": 1078,\n\t\"./observation\": 339,\n\t\"./observation.js\": 339,\n\t\"./observation.js.map\": 1079,\n\t\"./operationdefinition\": 340,\n\t\"./operationdefinition.js\": 340,\n\t\"./operationdefinition.js.map\": 1080,\n\t\"./operationoutcome\": 341,\n\t\"./operationoutcome.js\": 341,\n\t\"./operationoutcome.js.map\": 1081,\n\t\"./oralhealthclaim\": 342,\n\t\"./oralhealthclaim.js\": 342,\n\t\"./oralhealthclaim.js.map\": 1082,\n\t\"./order\": 343,\n\t\"./order.js\": 343,\n\t\"./order.js.map\": 1083,\n\t\"./orderresponse\": 344,\n\t\"./orderresponse.js\": 344,\n\t\"./orderresponse.js.map\": 1084,\n\t\"./organization\": 345,\n\t\"./organization.js\": 345,\n\t\"./organization.js.map\": 1085,\n\t\"./other\": 346,\n\t\"./other.js\": 346,\n\t\"./other.js.map\": 1086,\n\t\"./patient\": 347,\n\t\"./patient.js\": 347,\n\t\"./patient.js.map\": 1087,\n\t\"./paymentnotice\": 348,\n\t\"./paymentnotice.js\": 348,\n\t\"./paymentnotice.js.map\": 1088,\n\t\"./paymentreconciliation\": 349,\n\t\"./paymentreconciliation.js\": 349,\n\t\"./paymentreconciliation.js.map\": 1089,\n\t\"./pendedrequest\": 350,\n\t\"./pendedrequest.js\": 350,\n\t\"./pendedrequest.js.map\": 1090,\n\t\"./practitioner\": 351,\n\t\"./practitioner.js\": 351,\n\t\"./practitioner.js.map\": 1091,\n\t\"./procedure\": 352,\n\t\"./procedure.js\": 352,\n\t\"./procedure.js.map\": 1092,\n\t\"./procedurerequest\": 353,\n\t\"./procedurerequest.js\": 353,\n\t\"./procedurerequest.js.map\": 1093,\n\t\"./profile\": 354,\n\t\"./profile.js\": 354,\n\t\"./profile.js.map\": 1094,\n\t\"./provenance\": 355,\n\t\"./provenance.js\": 355,\n\t\"./provenance.js.map\": 1095,\n\t\"./query\": 356,\n\t\"./query.js\": 356,\n\t\"./query.js.map\": 1096,\n\t\"./questionnaire\": 357,\n\t\"./questionnaire.js\": 357,\n\t\"./questionnaire.js.map\": 1097,\n\t\"./questionnaireanswers\": 358,\n\t\"./questionnaireanswers.js\": 358,\n\t\"./questionnaireanswers.js.map\": 1098,\n\t\"./readjudicate\": 359,\n\t\"./readjudicate.js\": 359,\n\t\"./readjudicate.js.map\": 1099,\n\t\"./referralrequest\": 360,\n\t\"./referralrequest.js\": 360,\n\t\"./referralrequest.js.map\": 1100,\n\t\"./relatedperson\": 361,\n\t\"./relatedperson.js\": 361,\n\t\"./relatedperson.js.map\": 1101,\n\t\"./reversal\": 362,\n\t\"./reversal.js\": 362,\n\t\"./reversal.js.map\": 1102,\n\t\"./riskassessment\": 363,\n\t\"./riskassessment.js\": 363,\n\t\"./riskassessment.js.map\": 1103,\n\t\"./searchparameter\": 364,\n\t\"./searchparameter.js\": 364,\n\t\"./searchparameter.js.map\": 1104,\n\t\"./securityevent\": 365,\n\t\"./securityevent.js\": 365,\n\t\"./securityevent.js.map\": 1105,\n\t\"./slot\": 366,\n\t\"./slot.js\": 366,\n\t\"./slot.js.map\": 1106,\n\t\"./specimen\": 367,\n\t\"./specimen.js\": 367,\n\t\"./specimen.js.map\": 1107,\n\t\"./statusrequest\": 368,\n\t\"./statusrequest.js\": 368,\n\t\"./statusrequest.js.map\": 1108,\n\t\"./statusresponse\": 369,\n\t\"./statusresponse.js\": 369,\n\t\"./statusresponse.js.map\": 1109,\n\t\"./subscription\": 370,\n\t\"./subscription.js\": 370,\n\t\"./subscription.js.map\": 1110,\n\t\"./substance\": 371,\n\t\"./substance.js\": 371,\n\t\"./substance.js.map\": 1111,\n\t\"./supply\": 372,\n\t\"./supply.js\": 372,\n\t\"./supply.js.map\": 1112,\n\t\"./supportingdocumentation\": 373,\n\t\"./supportingdocumentation.js\": 373,\n\t\"./supportingdocumentation.js.map\": 1113,\n\t\"./valueset\": 374,\n\t\"./valueset.js\": 374,\n\t\"./valueset.js.map\": 1114\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 286;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathways_list\":\"PathwaysList_pathways_list__2WO5g\",\"header_title\":\"PathwaysList_header_title__7EM8s\",\"header_title__header\":\"PathwaysList_header_title__header__36yqh\",\"header_title__note\":\"PathwaysList_header_title__note__34zC8\",\"container\":\"PathwaysList_container__1SC5K\",\"pathwayElement\":\"PathwaysList_pathwayElement__34hJh\",\"title\":\"PathwaysList_title__ccVmw\",\"numElements\":\"PathwaysList_numElements__1WAOk\",\"expand\":\"PathwaysList_expand__2v9Wx\",\"infoContainer\":\"PathwaysList_infoContainer__2q0Tn\",\"details\":\"PathwaysList_details__2kSzT\",\"pathway\":\"PathwaysList_pathway__1vqM1\",\"matchingElement\":\"PathwaysList_matchingElement__1SQoM\",\"controls\":\"PathwaysList_controls__vZmz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expanded\":\"styles_expanded__XNUv-\",\"expandedNode\":\"styles_expandedNode__26Fy8\",\"nodeTitle\":\"styles_nodeTitle__5mm8f\",\"iconAndLabel\":\"styles_iconAndLabel__2LOTu\",\"statusIcon\":\"styles_statusIcon__2jDwI\",\"button\":\"styles_button__1AUjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"onPatientPath\":\"Node_onPatientPath__3LPjE\",\"actionable\":\"Node_actionable__bHXKd\",\"notOnPatientPath\":\"Node_notOnPatientPath__24OpF\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childOnPatientPath\":\"Node_childOnPatientPath__28UD6\",\"childActionable\":\"Node_childActionable__SwUjD\",\"childNotOnPatientPath\":\"Node_childNotOnPatientPath__2j4QB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};"],"sourceRoot":""}