{"version":3,"sources":["utils/ConfigManager.js","components/MissingDataPopup/MissingDataPopup.module.scss","components/Header/Header.tsx","components/FHIRClient.tsx","components/PatientProvider.tsx","components/PatientSnapshot/PatientSnapshot.tsx","components/DropDown/DropDown.tsx","components/PathwayProvider.tsx","components/Navigation/Navigation.tsx","utils/patient.js","utils/fhirExtract.js","components/PatientRecordsProvider.tsx","components/PatientRecord/PatientRecord.tsx","utils/fhirUtils.ts","components/NoteDataProvider.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","components/withConfirmationPopup/withConfirmationPopup.tsx","components/ConfirmedActionButton/ConfirmedActionButton.ts","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","engine/cql-extractor.ts","utils/regexes.ts","engine/cql-to-elm.ts","engine/elm-executor.ts","engine/output-results.ts","engine/evaluate-patient.ts","components/Graph/Graph.tsx","components/PathwaysList/PathwaysList.tsx","components/PathwaysService/PathwaysService.tsx","utils/MockedFHIRClient.ts","components/App.tsx","index.js","components/PatientSnapshot/PatientSnapshot.module.scss","components/ActionButton/ActionButton.module.scss","components/Header/Header.module.scss","components/Navigation/Navigation.module.scss","components/withConfirmationPopup/withConfirmationPopup.module.scss","components/Arrow/Arrow.module.scss","../node_modules/cql-execution/lib/fhir sync /^/.//.*$","components/PathwaysList/PathwaysList.module.scss","styles/index.module.scss","components/DropDown/DropDown.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Node/Node.module.scss","components/ExpandedNode/ExpandedNode.module.scss"],"names":["config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","module","exports","Header","props","className","styles","header","src","logo","alt","icon","faCog","settingsLogo","headerRight","FHIRClientContext","createContext","patient","FHIRClientProvider","client","children","Provider","useFHIRClient","useContext","PatientContext","PatientProvider","useState","currentPatient","setCurrentPatient","useEffect","read","then","usePatient","PatientSnapshot","useMemo","entry","find","n","use","given","join","family","getPatientName","address","city","state","filter","item","getPatientAddress","age","birthDateString","today","Date","birthDate","getFullYear","m","getMonth","getDate","getPatientAge","patientSnapshot","faUserCircle","patientSnapshot__photo","patientSnapshot__info","patientName","patientSnapshot__list","gender","DropDown","options","label","id","visible","onChange","selectedValue","setSelectPathway","onChangeCallback","useCallback","dropdown","htmlFor","onClick","classNamePrefix","inputId","aria-label","PathwayContext","evaluatedPathway","setEvaluatedPathway","updateEvaluatedPathways","PathwayProvider","pathwayCtx","usePathwayContext","Navigation","evaluatedPathways","selectPathway","pathway","undefined","pathwayOptions","map","navigation","navigation__leftPanel","navigation__rightPanel","pathwayOption","ALL_RESOURCES_PATIENT_REFERENCE","mapperName","get","MapperClass","mappers","mapperInstance","applyMapping","bundle","execute","getEverythingManually","supportedResources","push","requests","forEach","resource","request","flat","pageLimit","result","length","catch","error","console","log","Promise","all","results","x","getEverythingRevInclude","onError","query","PatientRecordsContext","patientRecords","setPatientRecords","evaluatePath","setEvaluatePath","PatientRecordsProvider","usePatientRecords","getResourceByType","patientRecord","resourceType","PatientRecord","resources","rows","getHumanName","person","Array","isArray","prefix","suffix","createDocumentReference","data","labelOrCondition","v1","meta","lastUpdated","getCurrentTime","status","subject","reference","identifier","system","btoa","content","attachment","contentType","type","coding","code","display","indexed","createNoteContent","note","notes","pathwayState","treatment","action","description","node","tnm","record","profile","elements","includes","obs","valueCodeableConcept","text","mcodeElements","some","index","findIndex","toString","now","withLeadingZero","getDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","NoteContext","NoteDataProvider","date","physician","toDateString","birthdate","useNote","Object","keys","element","graphLayoutProvider","layout","nodeDimensions","nodeNames","states","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","stateName","nodeDimension","setNode","width","height","transitions","transition","condition","setEdge","nodeCoordinates","startNodeShift","nodeName","y","edges","e","edge","edgeName","v","w","start","end","points","p","layoutDagre","START","nodes","rank","NaN","horizontalPosition","parents","canMove","initializeNodes","graph","HORIZONTAL_OFFSET","NODE_WIDTH","VERTICAL_OFFSET","NODE_HEIGHT","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","parentsOnHigherRank","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","open","setOpen","Popup","position","pathwayPopup","on","onOpen","onClose","pinned","trigger","LargeActionButton","largeActionButton","indexStyles","button","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","data-testid","faCheck","faTimes","ActionButton","size","PopupContent","values","showCheck","setShowCheck","selected","setSelected","popupContent","key","popupChoice","footer","documentReference","create","MissingDataPopup","missingDataPopup","popupTrigger","faEdit","externalLink","onConfirm","ConfirmedActionButton","WrappedComponent","wrappedProps","withConfirmationPopup","triggerContainer","isGuidanceState","ExpandedNodeField","title","descTitle","desc","StatusField","documentation","rawDate","toLocaleString","ExpandedNode","isActionable","isGuidance","comments","setComments","guidance","medicationCodeableConcept","returnElements","href","target","rel","faExternalLinkAlt","procedure","performedPeriod","performedDateTime","renderGuidance","branch","observation","valueCoding","effectiveDateTime","documentReferenceIdentifier","atob","arr","renderBranch","defaultText","newPatientRecords","pathwayResource","patientId","resourceProperties","intent","authoredOn","toISOString","Error","translatePathwayRecommendation","expandedNode","infoTable","commentsForm","defaultTextButton","preventDefault","Node","forwardRef","ref","isOnPatientPath","isCurrentNode","xCoordinate","yCoordinate","expanded","onClickHandler","style","top","left","backgroundColorClass","onPatientPath","notOnPatientPath","topLevelClasses","expandedNodeClass","nodeStyles","actionable","childActionable","childOnPatientPath","childNotOnPatientPath","isAccepted","nodeTitle","iconAndLabel","accepted","NodeIcon","faMicroscope","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faCapsules","faSyringe","StatusIcon","faCheckCircle","faTimesCircle","statusIcon","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","fill","markerEnd","Arrow","arrowOnPatientPath","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","getFixture","filename","fetch","cql","cqlFormat","cqlBlock","resourceName","concat","cqlAdd","isConditional","extractMultipartBoundary","extractMultipartFileName","extractJSONContent","extractCQLInclude","url","executeElm","elm","libraries","lib","Library","Repository","executor","Executor","psource","PatientSource","FHIRv400","loadBundles","exec","nextStateRecommendation","conditionDescription","formatDocumentation","formatNextState","currentState","nextState","patientData","currentStateName","retrieveNote","doc","documentationResource","getConditionalNextState","retrieveResource","evaluatePatientOnPathway","library","extractNavigationCQL","processCQLCommon","currentStatus","patientDocumentation","stateData","Patient","nextRecommendation","path","pathwayData","evaluatePathwayCriteria","criteria","elementName","extractCriteriaCQL","resultItems","matches","evaluationResult","actual","match","criteriaResultItem","expected","pathwayName","criteriaResultItems","criteriaData","resolve","reject","setTimeout","FHIRHelpers","gatherCQL","formdata","FormData","append","main","method","body","headers","boundary","obj","oldArray","line","elmName","JSON","parse","convertCQL","Accept","json","convertBasicCQL","elmResults","patientResults","patientIds","isEdgeOnPatientPath","startIndex","endIndex","interactive","expandCurrentNode","graphElement","useRef","nodeRefs","getWidth","window","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","parentWidth","current","parentElement","clientWidth","pathwayResults","_setPath","setPath","getGraphLayout","nodeElement","from","clientHeight","graphLayout","setLayout","maxHeight","max","initialExpandedState","curr","_setExpanded","setExpanded","expand","prevState","cancel","r","currentNode","maxWidth","l","docResource","xmlns","zIndex","overflow","PathwaysListElement","callback","isVisible","setIsVisible","chevron","faChevronUp","faChevronDown","pathwayElement","role","numElements","infoContainer","details","matchingElement","controls","faPlus","faMinus","PathwaysList","service","setCriteria","criteriaPromises","criteriaResults","sort","pathways_list","container","pathwayListHeaderContainer","header_title","header_title__header","header_title__note","matchedElementsLabel","faCaretDown","useGetPathwaysService","setResult","getPathways","response","listOfFiles","f","typedFetch","listOfPromises","pathwaysList","payload","MockedFHIRClient","App","demo","_setPatientRecords","currentPathway","setCurrentPathway","setEvaluatedPathways","setClient","user","setUser","demoRecords","FHIR","oauth2","init","clientId","scope","statement","rest","operation","definition","getEverything","revIncludeResources","searchRevInclude","searchInclude","filters","searchParam","searchParams","getPatientRecord","records","every","setEvaluatedPathwayCallback","scrollTo","newList","rootElement","document","getElementById","ReactDOM","render","exact","webpackContext","req","webpackContextResolve","__webpack_require__","o"],"mappings":"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A,gCACA,+BACA,iCACA,gCACA,mBACA,iBACA,yBACA,0BACA,6BACA,uBACA,2BACA,uBACA,0BACA,wBACA,0BACA,4BACA,gCACA,+BACA,gCACA,+BACA,oBACA,wBACA,qBACA,mBACA,0BACA,2BACA,4BACA,6BACA,4BACA,oBACA,sBACA,2BACA,6BACA,8BACA,4BACA,6BACA,iBACA,cACA,yBACA,wBACA,eACA,sBACA,wBACA,sBACA,6BACA,8BACA,4BACA,8BACA,6BACA,8BACA,+BACA,mCACA,4BACA,mCACA,8BACA,6BACA,qCACA,gBACA,gBACA,wBACA,oBACA,sBACA,uBACA,qBACA,sBACA,eACA,YACA,cACA,oBACA,sBACA,uBACA,sBACA,qBACA,+BACA,qCACA,yBACA,2BACA,2BACA,eACA,eACA,eACA,cACA,+BACA,6BACA,4BACA,4BACA,oBACA,6BACA,4BACA,gCACA,2BACA,2BACA,+BACA,+BACA,6BACA,2BACA,0BACA,6BACA,wBACA,6BACA,0BACA,yBACA,iBACA,2BACA,sBACA,yBACA,iBACA,sBACA,uBACA,mBACA,kBACA,mBACA,iBACA,eACA,oBACA,gBACA,oBACA,4BACA,qBACA,sBACA,oBACA,qBACA,uBACA,+BACA,8BACA,iCACA,iCACA,+BACA,gCACA,wBACA,0BACA,uBACA,wBACA,wBACA,yBACA,6BACA,wBACA,cACA,gBACA,qBACA,qBACA,+BACA,qBACA,mBACA,uBACA,qBACA,mBACA,mBACA,gBACA,gBACA,eACA,qBACA,oBACA,mBACA,8BACA,4BACA,sBACA,oBACA,8BACA,8BACA,uBACA,wBACA,+BACA,iCACA,gCACA,kCACA,iCACA,kBACA,mB,kBC5MIC,EAAahH,IAAOiH,IAAI,UACxBC,EAAcC,UAAQH,GACtBI,EAAiBF,EAAc,IAAIA,EAAgB,KAEnDG,EAAe,SAACC,GAKpB,OAJIF,GAAkBE,IAEpBA,EAASF,EAAeG,QAAQD,IAE3BA,GAoET,SAASE,EAAsB1F,EAAQ2F,GACrCA,EAAmBC,KAAK,eACxB,I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","file":"static/js/main.e707007c.chunk.js","sourcesContent":["export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","import React, { FC } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Header.module.scss';\n\ninterface HeaderProps {\n  logo: string;\n}\n\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  return (\n    <header className={styles.header}>\n      <img src={props.logo} alt=\"logo\" />\n      <FontAwesomeIcon icon={faCog} className={`${styles.settingsLogo} ${styles.headerRight}`} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwaysClient } from 'pathways-client';\n\ninterface FHIRClientProviderProps {\n  client: PathwaysClient; // TODO: fhirclient.Client\n  children: ReactNode;\n}\n\nexport const FHIRClientContext = createContext({ patient: {} });\n\nexport const FHIRClientProvider: FC<FHIRClientProviderProps> = ({ client, children }) => (\n  <FHIRClientContext.Provider value={client}>{children}</FHIRClientContext.Provider>\n);\n\nexport const useFHIRClient = (): PathwaysClient => useContext(FHIRClientContext);\n","import React, { FC, createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { useFHIRClient } from './FHIRClient';\n\ninterface PatientProviderProps {\n  children: ReactNode;\n  patient?: fhir.Patient | null;\n}\n\nexport const PatientContext = createContext<fhir.Patient | null>(null);\n\nexport const PatientProvider: FC<PatientProviderProps> = ({ children, patient }) => {\n  const client = useFHIRClient();\n  const [currentPatient, setCurrentPatient] = useState<fhir.Patient | null>(patient || null);\n\n  useEffect(() => {\n    client?.patient?.read?.().then((patient: fhir.Patient) => setCurrentPatient(patient));\n  }, [client]);\n\n  return currentPatient == null ? (\n    <div>Loading...</div>\n  ) : (\n    <PatientContext.Provider value={currentPatient}>{children}</PatientContext.Provider>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const usePatient = (): fhir.Patient => useContext(PatientContext)!;\n","import React, { FC, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { usePatient } from '../PatientProvider';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './PatientSnapshot.module.scss';\n\nconst getPatientName = (name: Array<fhir.HumanName> = []): string => {\n  const entry = name.find(n => n.use === 'official') || name[0];\n  return entry ? `${(entry.given || []).join(' ')} ${entry.family}` : 'No name';\n};\n\nconst getPatientAge = (birthDateString: string | undefined): number => {\n  if (!birthDateString) return 0;\n  const today = new Date();\n  const birthDate = new Date(birthDateString);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n\nconst getPatientAddress = (address: Array<fhir.Address> = []): string => {\n  const entry = address[0];\n  return entry ? [entry.city, entry.state].filter(item => !!item).join(', ') : 'No Address';\n};\n\nconst PatientSnapshot: FC<{}> = () => {\n  const patient = usePatient();\n  const name = useMemo(() => getPatientName(patient.name), [patient]);\n  const address = useMemo(() => getPatientAddress(patient.address), [patient]);\n  const age = useMemo(() => getPatientAge(patient.birthDate), [patient]);\n\n  return (\n    <div className={styles.patientSnapshot}>\n      <FontAwesomeIcon icon={faUserCircle} className={styles.patientSnapshot__photo} />\n\n      <div className={styles.patientSnapshot__info}>\n        <div className={styles.patientName}>{name}</div>\n\n        <ul className={styles.patientSnapshot__list}>\n          <li>\n            DOB: {patient.birthDate} (Age: {age})\n          </li>\n          <li>Admin. Sex: {patient.gender}</li>\n          <li>Location: {address}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientSnapshot;\n","import React, { FC, useCallback } from 'react';\nimport Select from 'react-select';\n\nimport styles from './DropDown.module.scss';\nimport { Option } from 'option';\n\ninterface Props {\n  label?: string;\n  id: string;\n  visible: boolean;\n  options: Array<Option>;\n  onChange?: (value: Option | ReadonlyArray<Option> | null) => void;\n  selectedValue: Option | ReadonlyArray<Option> | null;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst DropDown: FC<Props> = ({\n  options,\n  label,\n  id,\n  visible,\n  onChange,\n  selectedValue,\n  setSelectPathway\n}: Props) => {\n  const onChangeCallback = useCallback(\n    (value: Option | ReadonlyArray<Option> | null | undefined) => {\n      if (onChange) onChange(value == null ? null : value);\n    },\n    [onChange]\n  );\n\n  if (visible)\n    return (\n      <div className={styles.dropdown}>\n        <div>\n          <label htmlFor={id}>{label}</label>\n          <button\n            onClick={(): void => {\n              setSelectPathway(true);\n            }}\n          >\n            Explore Pathways\n          </button>\n        </div>\n        <Select\n          classNamePrefix=\"DropDown\"\n          inputId={id}\n          value={selectedValue}\n          onChange={onChangeCallback}\n          options={options}\n          aria-label={label}\n        />\n      </div>\n    );\n  else return <div></div>;\n};\n\nexport default DropDown;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwayContextInterface } from 'pathways-model';\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n  pathwayCtx: PathwayContextInterface;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({\n  evaluatedPathway: null,\n  setEvaluatedPathway: () => {\n    //do nothing\n  },\n  updateEvaluatedPathways: () => {\n    //do nothing\n  }\n});\n\nexport const PathwayProvider: FC<PathwayProviderProps> = ({ children, pathwayCtx }) => {\n  return <PathwayContext.Provider value={pathwayCtx}>{children}</PathwayContext.Provider>;\n};\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport PatientSnapshot from 'components/PatientSnapshot';\nimport DropDown from 'components/DropDown';\nimport styles from './Navigation.module.scss';\nimport { EvaluatedPathway } from 'pathways-model';\nimport { Option } from 'option';\nimport { usePathwayContext } from 'components/PathwayProvider';\n// import { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props {\n  evaluatedPathways: EvaluatedPathway[];\n  selectPathway: boolean;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst Navigation: FC<Props> = ({ evaluatedPathways, selectPathway, setSelectPathway }) => {\n  const pathwayCtx = usePathwayContext();\n  const pathway = pathwayCtx.evaluatedPathway?.pathway;\n  const value =\n    pathway === undefined ? null : { label: pathway.name, value: pathwayCtx.evaluatedPathway };\n\n  const onChangeHandler = (pathwayOption: Option | ReadonlyArray<Option> | null): void => {\n    if (pathwayOption !== null && 'value' in pathwayOption) {\n      pathwayCtx.setEvaluatedPathway(pathwayOption.value);\n    }\n  };\n\n  const pathwayOptions = evaluatedPathways.map(evaluatedPathway => ({\n    label: evaluatedPathway.pathway.name,\n    value: evaluatedPathway\n  }));\n\n  return (\n    <nav className={styles.navigation}>\n      <div className={styles.navigation__leftPanel}>\n        {/* Disable the back button until it is implemented\n        <FontAwesomeIcon icon={faChevronLeft} className={styles.navigation__back} /> */}\n        <PatientSnapshot />\n      </div>\n\n      <div className={styles.navigation__rightPanel}>\n        <DropDown\n          label=\"Pathway:\"\n          id=\"patient-view\"\n          visible={!selectPathway}\n          options={pathwayOptions}\n          selectedValue={value}\n          setSelectPathway={setSelectPathway}\n          onChange={onChangeHandler}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","const ALL_RESOURCES_PATIENT_REFERENCE = [\n  'ReferralRequest:patient',\n  'DocumentManifest:patient',\n  'Goal:patient',\n  'Consent:patient',\n  'DocumentReference:patient',\n  'ImagingManifest:patient',\n  'RiskAssessment:patient',\n  'CareTeam:patient',\n  'ImagingStudy:patient',\n  'FamilyMemberHistory:patient',\n  'Encounter:patient',\n  'DeviceRequest:patient',\n  'AllergyIntolerance:patient',\n  'CarePlan:patient',\n  'EpisodeOfCare:patient',\n  'Procedure:patient',\n  'List:patient',\n  'Immunization:patient',\n  'VisionPrescription:patient',\n  'ProcedureRequest:patient',\n  'Flag:patient',\n  'Observation:patient',\n  'DiagnosticReport:patient',\n  'NutritionOrder:patient',\n  'Condition:patient',\n  'Composition:patient',\n  'DetectedIssue:patient',\n  'SupplyDelivery:patient',\n  'ClinicalImpression:patient',\n  'DeviceUseStatement:patient',\n  'Task:subject',\n  'Task:requester',\n  'Task:patient',\n  'Task:owner',\n  'Task:focus',\n  'Task:based-on',\n  'SupplyRequest:requester',\n  'Specimen:subject',\n  'Specimen:patient',\n  'ServiceDefinition:successor',\n  'ServiceDefinition:predecessor',\n  'ServiceDefinition:depends-on',\n  'ServiceDefinition:derived-from',\n  'ServiceDefinition:composed-of',\n  'Sequence:patient',\n  'Schedule:actor',\n  'RiskAssessment:subject',\n  'ResearchSubject:patient',\n  'ResearchSubject:individual',\n  'RequestGroup:subject',\n  'RequestGroup:participant',\n  'RequestGroup:patient',\n  'RequestGroup:definition',\n  'RelatedPerson:patient',\n  'ReferralRequest:subject',\n  'ReferralRequest:requester',\n  'QuestionnaireResponse:subject',\n  'QuestionnaireResponse:source',\n  'QuestionnaireResponse:patient',\n  'QuestionnaireResponse:author',\n  'Provenance:target',\n  'Provenance:entity-ref',\n  'Provenance:patient',\n  'Provenance:agent',\n  'ProcessResponse:request',\n  'ProcedureRequest:subject',\n  'ProcedureRequest:replaces',\n  'ProcedureRequest:performer',\n  'ProcedureRequest:based-on',\n  'Procedure:subject',\n  'Procedure:performer',\n  'PlanDefinition:successor',\n  'PlanDefinition:predecessor',\n  'PlanDefinition:derived-from',\n  'PlanDefinition:depends-on',\n  'PlanDefinition:composed-of',\n  'Person:patient',\n  'Person:link',\n  'PaymentNotice:response',\n  'PaymentNotice:request',\n  'Patient:link',\n  'Observation:subject',\n  'Observation:performer',\n  'MessageHeader:focus',\n  'MedicationStatement:source',\n  'MedicationStatement:subject',\n  'MedicationRequest:subject',\n  'MedicationRequest:requester',\n  'MedicationDispense:subject',\n  'MedicationDispense:receiver',\n  'MedicationDispense:performer',\n  'MedicationAdministration:subject',\n  'MedicationRequest:patient',\n  'MedicationAdministration:patient',\n  'MedicationStatement:patient',\n  'MedicationDispense:patient',\n  'MedicationAdministration:performer',\n  'Media:subject',\n  'Media:patient',\n  'MeasureReport:patient',\n  'Measure:successor',\n  'Measure:predecessor',\n  'Measure:derived-from',\n  'Measure:depends-on',\n  'Measure:composed-of',\n  'List:subject',\n  'List:item',\n  'List:source',\n  'Library:successor',\n  'Library:predecessor',\n  'Library:derived-from',\n  'Library:composed-of',\n  'Library:depends-on',\n  'ImplementationGuide:resource',\n  'ImmunizationRecommendation:patient',\n  'ImagingManifest:author',\n  'GuidanceResponse:subject',\n  'GuidanceResponse:patient',\n  'Group:member',\n  'Goal:subject',\n  'Flag:subject',\n  'Flag:author',\n  'ExplanationOfBenefit:patient',\n  'ExplanationOfBenefit:payee',\n  'EnrollmentRequest:subject',\n  'EnrollmentRequest:patient',\n  'Encounter:subject',\n  'EligibilityRequest:patient',\n  'DocumentReference:subject',\n  'DocumentReference:related-ref',\n  'DocumentReference:author',\n  'DocumentManifest:subject',\n  'DocumentManifest:related-ref',\n  'DocumentManifest:content-ref',\n  'DocumentManifest:recipient',\n  'DiagnosticReport:subject',\n  'DocumentManifest:author',\n  'DeviceUseStatement:subject',\n  'DeviceRequest:subject',\n  'DeviceRequest:priorrequest',\n  'DeviceRequest:performer',\n  'DeviceRequest:based-on',\n  'Device:patient',\n  'DetectedIssue:implicated',\n  'Coverage:subscriber',\n  'Coverage:policy-holder',\n  'Coverage:payor',\n  'Contract:term-topic',\n  'Coverage:beneficiary',\n  'Contract:subject',\n  'Contract:signer',\n  'Contract:patient',\n  'Contract:agent',\n  'Consent:data',\n  'Consent:consentor',\n  'Consent:actor',\n  'Condition:subject',\n  'Condition:evidence-detail',\n  'Condition:asserter',\n  'Composition:subject',\n  'Composition:entry',\n  'Composition:author',\n  'Composition:attester',\n  'CommunicationRequest:subject',\n  'CommunicationRequest:sender',\n  'CommunicationRequest:requester',\n  'CommunicationRequest:recipient',\n  'CommunicationRequest:patient',\n  'CommunicationRequest:based-on',\n  'Communication:subject',\n  'Communication:recipient',\n  'Communication:sender',\n  'Communication:patient',\n  'Communication:part-of',\n  'Communication:based-on',\n  'ClinicalImpression:subject',\n  'ClaimResponse:patient',\n  'Claim:payee',\n  'Claim:patient',\n  'ChargeItem:subject',\n  'ChargeItem:patient',\n  'ChargeItem:participant-actor',\n  'ChargeItem:enterer',\n  'CareTeam:subject',\n  'CareTeam:participant',\n  'CarePlan:performer',\n  'CarePlan:subject',\n  'BodySite:patient',\n  'Basic:subject',\n  'Basic:patient',\n  'Basic:author',\n  'AuditEvent:patient',\n  'AuditEvent:entity',\n  'AuditEvent:agent',\n  'AppointmentResponse:patient',\n  'AppointmentResponse:actor',\n  'Appointment:patient',\n  'Appointment:actor',\n  'AllergyIntolerance:recorder',\n  'AllergyIntolerance:asserter',\n  'AdverseEvent:subject',\n  'AdverseEvent:recorder',\n  'ActivityDefinition:successor',\n  'ActivityDefinition:predecessor',\n  'ActivityDefinition:depends-on',\n  'ActivityDefinition:derived-from',\n  'ActivityDefinition:composed-of',\n  'Account:subject',\n  'Account:patient'\n];\n\nexport { ALL_RESOURCES_PATIENT_REFERENCE };\n","import { ALL_RESOURCES_PATIENT_REFERENCE } from './patient';\n\nimport { mappers } from 'fhir-mapper';\nimport config from './ConfigManager';\n\nconst mapperName = config.get('mapper');\nconst MapperClass = mappers[mapperName];\nconst mapperInstance = MapperClass ? new MapperClass() : null;\n\nconst applyMapping = (bundle) => {\n  if (mapperInstance && bundle)\n  {\n    bundle = mapperInstance.execute(bundle);\n  }\n  return bundle;\n}\n\n/**\n * There are slight discrepencies between the $everything, revinclude, and manual methods that affect the resources that might be returned\n * @param {Object} client - the fhir client\n */\nfunction getPatientRecord(client) {\n  return client.request(`/metadata`).then(statement => {\n    if (\n      statement.rest[0].operation.find(\n        e => (e.definition.reference || e.definition) === 'OperationDefinition/Patient--everything'\n      )\n    ) {\n      // supports patient everything\n      return getEverything(client).then(bundle => applyMapping(bundle));\n    } else {\n      console.log('Cannot use $everything, using reverse includes instead');\n      const supportedResources = [];\n      let revIncludeResources = [];\n      statement.rest[0].resource.forEach(resource => {\n        if (resource.type === 'Patient') {\n          if (resource.searchRevInclude) {\n            revIncludeResources = resource.searchRevInclude;\n          }\n        } else if (resource.searchInclude) {\n          const filters = resource.searchInclude.filter(target => {\n            return target === `${resource.type}:patient` || target === `${resource.type}:subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(filters[0]);\n          }\n        } else if (resource.searchParam) {\n          const filters = resource.searchParams.filter(target => {\n            return target.name === `patient` || target.name === `subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(`${resource.type}:${filters[0].name}`);\n          }\n        }\n      });\n      if (revIncludeResources.length > 0) {\n        return getEverythingRevInclude(client, revIncludeResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else if (supportedResources.length > 0) {\n        return getEverythingRevInclude(client, supportedResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else {\n        console.log('Cannot use reverse includes, retrieving all resources manually from predefined list');\n        return getEverythingManually(client, ALL_RESOURCES_PATIENT_REFERENCE).then(bundle => applyMapping(bundle));\n      }\n    }\n  });\n}\n\n/**\n * Uses the $everything operation.  The server takes care of constructing the bundle that gets returned, so\n * it is generally not possible to know how it is deciding what resources to send.\n */\nfunction getEverything(client) {\n  return client.request(`/Patient/${client.patient.id}/$everything`, { flat: true, pageLimit: 0 }).then(bundle => {\n    return bundle;\n  });\n}\n\n/**\n * Uses regular FHIR search queries on every resource that is supported and can refer to a patient.\n * Which resources it queries is dependent on info available in the Capability Statement, and\n * it only provides a one layer deep search, so the results might be different from $everything.\n */\nfunction getEverythingManually(client, supportedResources) {\n  supportedResources.push('Patient:_id');\n  const requests = [];\n  supportedResources.forEach(resource => {\n    resource = resource.split(':');\n    const request = client\n      .request(`${resource[0]}?${resource[1]}=${client.patient.id}`, { flat: true, pageLimit: 0 })\n      .then(result => {\n        if (result.length > 0) {\n          return result;\n        }\n      })\n      .catch(error => {\n        console.log(`failed to fetch ${resource}`);\n        console.error(error);\n      });\n    requests.push(request);\n  });\n\n  return Promise.all(requests).then(results => {\n    const bundle = results\n      .filter(x => {\n        return x;\n      })\n      .flat();\n    return bundle;\n  });\n}\n\n/**\n * Uses the _revinclude FHIR search parameter to request the patient resource and any resource that refers to it.\n * The list of resources it checks is retrieved from the Capability Statement.  It is slightly better than the manual\n * method since it does everything in one request.\n */\nfunction getEverythingRevInclude(client, supportedResources, onError) {\n  const query = supportedResources.join('&_revinclude=');\n  return client\n    .request(`/Patient?_id=${client.patient.id}&_revinclude=${query}`, { flat: true })\n    .then(result => {\n      return result;\n    })\n    .catch(error => {\n      console.log('Reverse Include query failed, manually fetching resources instead.');\n      console.error(error);\n      onError(client, supportedResources);\n    });\n}\n\nexport { getPatientRecord };\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\n\ninterface PatientRecordsProviderProps {\n  children: ReactNode;\n  value: PatientRecordsContextInterface;\n}\n\ninterface PatientRecordsContextInterface {\n  patientRecords: fhir.DomainResource[];\n  setPatientRecords: Function;\n  evaluatePath: boolean;\n  setEvaluatePath: (value: boolean) => void;\n}\n\nexport const PatientRecordsContext = createContext<PatientRecordsContextInterface>({\n  patientRecords: [],\n  setPatientRecords: (): void => {\n    return;\n  },\n  evaluatePath: true,\n  setEvaluatePath: (): void => {\n    return;\n  }\n});\n\nexport const PatientRecordsProvider: FC<PatientRecordsProviderProps> = ({ children, value }) => {\n  return <PatientRecordsContext.Provider value={value}>{children}</PatientRecordsContext.Provider>;\n};\n\nexport const usePatientRecords = (): PatientRecordsContextInterface =>\n  useContext(PatientRecordsContext);\n","import React, { FC } from 'react';\nimport { usePatient } from 'components/PatientProvider';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport {\n  AllergiesVisualizer,\n  CarePlansVisualizer,\n  ConditionsVisualizer,\n  EncountersVisualizer,\n  ImmunizationsVisualizer,\n  MedicationsVisualizer,\n  ObservationsVisualizer,\n  PatientVisualizer,\n  ProceduresVisualizer,\n  ReportsVisualizer\n} from 'fhir-visualizers';\n\nconst getResourceByType = (\n  patientRecord: ReadonlyArray<fhir.DomainResource>,\n  resourceType: string\n): ReadonlyArray<object> => {\n  return patientRecord.filter(resource => resource.resourceType === resourceType);\n};\n\nconst PatientRecord: FC = () => {\n  const patient = usePatient();\n  const resources = usePatientRecords().patientRecords;\n\n  return (\n    <div>\n      <PatientVisualizer patient={patient} />\n      <ConditionsVisualizer rows={getResourceByType(resources, 'Condition')} />\n      <ObservationsVisualizer rows={getResourceByType(resources, 'Observation')} />\n      <ReportsVisualizer rows={getResourceByType(resources, 'DiagnosticReport')} />\n      <MedicationsVisualizer rows={getResourceByType(resources, 'MedicationRequest')} />\n      <AllergiesVisualizer rows={getResourceByType(resources, 'AllergyIntolerance')} />\n      <CarePlansVisualizer rows={getResourceByType(resources, 'CarePlan')} />\n      <ProceduresVisualizer rows={getResourceByType(resources, 'Procedure')} />\n      <EncountersVisualizer rows={getResourceByType(resources, 'Encounter')} />\n      <ImmunizationsVisualizer rows={getResourceByType(resources, 'Immunization')} />\n    </div>\n  );\n};\n\nexport default PatientRecord;\n","import { BasicMedicationRequestResource, BasicActionResource, GuidanceState } from 'pathways-model';\nimport { Note, toString } from 'components/NoteDataProvider';\nimport { v1 } from 'uuid';\n\n// translates pathway recommendation resource into suitable FHIR resource\nexport function translatePathwayRecommendation(\n  pathwayResource: BasicMedicationRequestResource | BasicActionResource,\n  patientId: string\n): fhir.Resource {\n  const { resourceType } = pathwayResource;\n  const resourceProperties = {\n    resourceType,\n    id: v1(),\n    intent: 'order',\n    subject: { reference: `Patient/${patientId}` },\n    status: 'active',\n    authoredOn: new Date().toISOString(),\n    meta: {\n      lastUpdated: new Date().toISOString()\n    }\n  };\n\n  switch (resourceType) {\n    case 'ServiceRequest': {\n      const { code } = pathwayResource as BasicActionResource;\n      return {\n        ...resourceProperties,\n        code\n      };\n    }\n    case 'MedicationRequest': {\n      const { medicationCodeableConcept } = pathwayResource as BasicMedicationRequestResource;\n      return {\n        ...resourceProperties,\n        medicationCodeableConcept\n      };\n    }\n    default: {\n      throw Error(`Translation for ${resourceType} not implemented.`);\n    }\n  }\n}\n\nexport function getHumanName(person: fhir.HumanName | fhir.HumanName[]): string {\n  let name = '';\n  if (Array.isArray(person)) {\n    name = [\n      person[0]?.prefix?.join(' '),\n      person[0]?.given?.join(' '),\n      person[0]?.family,\n      person[0]?.suffix?.join(' ')\n    ].join(' ');\n  } else {\n    name = [\n      person?.prefix?.join(' '),\n      person?.given?.join(' '),\n      person?.family,\n      person?.suffix?.join(' ')\n    ].join(' ');\n  }\n  return name;\n}\n\nexport function createDocumentReference(\n  data: string,\n  labelOrCondition: string,\n  patient: fhir.Patient\n): fhir.DocumentReference {\n  return {\n    resourceType: 'DocumentReference',\n    id: v1(),\n    meta: {\n      lastUpdated: getCurrentTime()\n    },\n    status: 'current',\n    subject: { reference: `Patient/${patient.id}` },\n    identifier: [\n      {\n        system: 'pathways.documentreference',\n        value: btoa(labelOrCondition)\n      }\n    ],\n    content: [\n      {\n        attachment: {\n          data: btoa(data), // Base 64 encoded data\n          contentType: 'text/plain'\n        }\n      }\n    ],\n    // type and indexed are required in STU3 DocumentReference but not in R4\n    type: {\n      coding: [\n        {\n          system: 'http://loinc.org',\n          code: '34108-1',\n          display: 'Outpatient Note'\n        }\n      ]\n    },\n    indexed: ''\n  };\n}\n\nexport function createNoteContent(\n  note: Note,\n  patientRecords: fhir.DomainResource[],\n  status: string,\n  notes: string,\n  pathwayState?: GuidanceState\n): string {\n  note.status = status;\n  note.notes = notes;\n  if (pathwayState) {\n    note.treatment = pathwayState.action[0].description;\n    note.node = pathwayState.label;\n  }\n\n  const tnm: string[] = ['', '', ''];\n  patientRecords.forEach(record => {\n    // TODO: should use code bindings over\n    // profile names.\n    if (record.meta?.profile && record.meta.profile.length) {\n      const elements = [\n        'TNMClinicalPrimaryTumorCategory',\n        'TNMClinicalRegionalNodesCategory',\n        'TNMClinicalDistantMetastasesCategory'\n      ];\n\n      const profile = record.meta.profile[0];\n      if (record.resourceType === 'Observation') {\n        if (profile.includes('TumorMarkerTest') && record.resourceType === 'Observation') {\n          const obs = record as fhir.Observation;\n          const value = obs.valueCodeableConcept?.text;\n          const name = obs.code.text;\n          if (value && name) {\n            note.mcodeElements[name] = value;\n          }\n        } else if (\n          elements.some(value => {\n            return profile.includes(value);\n          })\n        ) {\n          const index = elements.findIndex(value => {\n            return profile.includes(value);\n          });\n          if (index > -1) {\n            const obs = record as fhir.Observation;\n            const value = obs.valueCodeableConcept?.text;\n            if (value) {\n              tnm[index] = value;\n            }\n          }\n        }\n      }\n    }\n  });\n\n  note.mcodeElements['Clinical TNM'] = tnm.join(' ');\n  return toString(note);\n}\n\nfunction getCurrentTime(): string {\n  const now = new Date();\n  return (\n    now.getFullYear() +\n    '-' +\n    withLeadingZero(now.getMonth()) +\n    '-' +\n    withLeadingZero(now.getDay()) +\n    'T' +\n    withLeadingZero(now.getUTCHours()) +\n    ':' +\n    withLeadingZero(now.getUTCMinutes()) +\n    ':' +\n    withLeadingZero(now.getUTCSeconds()) +\n    '.' +\n    now.getUTCMilliseconds() +\n    '+00:00'\n  );\n}\n\nfunction withLeadingZero(n: number): string {\n  return n < 10 ? '0' + n : n.toString();\n}\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { usePathwayContext } from './PathwayProvider';\nimport { usePatient } from './PatientProvider';\nimport { getHumanName } from 'utils/fhirUtils';\nexport interface Note {\n  patient: string;\n  date: string;\n  physician: string;\n  birthdate?: string;\n  mcodeElements: {\n    [key: string]: string;\n  };\n  pathway?: string;\n  node?: string;\n  status: string;\n  treatment?: string;\n  notes?: string;\n}\n\ninterface NoteDataProviderProps {\n  children: ReactNode;\n  date: Date;\n  physician: string;\n}\n\nexport const NoteContext = createContext<Note | null>(null);\n\nexport const NoteDataProvider: FC<NoteDataProviderProps> = ({ children, date, physician }) => {\n  const patient = usePatient();\n  const name = patient.name ? getHumanName(patient.name) : '';\n  const note: Note = {\n    patient: name,\n    date: date.toDateString(),\n    physician: physician,\n    birthdate: patient.birthDate || '',\n    mcodeElements: {},\n    pathway: usePathwayContext().evaluatedPathway?.pathway.name,\n    status: 'Pending'\n  };\n\n  return <NoteContext.Provider value={note}>{children}</NoteContext.Provider>;\n};\n\nexport const useNote = (): Note | null => useContext(NoteContext);\n\nexport const toString = (note: Note): string => {\n  let mcodeElements = '';\n  Object.keys(note.mcodeElements).forEach(element => {\n    mcodeElements += `${element}: ${note.mcodeElements[element]}\\n`;\n  });\n  const noteString = `Date: ${note.date}\\n\nPatient: ${note.patient}\\n\nBirthdate: ${note.birthdate}\\n\nPhysician: ${note.physician}\\n\n${mcodeElements}\nPathway: ${note.pathway}\\n\nNode: ${note.node}\\n\nStatus: ${note.status}\\n\nTreatment: ${note.treatment}\\n\nNotes: ${note.notes}\n  `;\n  return noteString;\n};\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport indexStyles from 'styles/index.module.scss';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} ${indexStyles.button} ${type === 'decline' &&\n        styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={type === 'accept' ? styles.accept : styles.decline}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { usePatient } from 'components/PatientProvider';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { useFHIRClient } from 'components/FHIRClient';\nimport { createDocumentReference, createNoteContent } from 'utils/fhirUtils';\nimport { useNote } from 'components/NoteDataProvider';\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const patient = usePatient();\n  const client = useFHIRClient();\n  const { patientRecords, setPatientRecords } = usePatientRecords();\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n  const note = useNote();\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n              // Create DocumentReference with selected value and add to patient record\n              if (note) {\n                const noteString = createNoteContent(note, patientRecords, 'completed', selected);\n                const documentReference = createDocumentReference(noteString, selected, patient);\n                setPatientRecords([...patientRecords, documentReference]);\n                client?.create?.(documentReference);\n              }\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import React, { FC, useState } from 'react';\nimport styles from './withConfirmationPopup.module.scss';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\n\ntype ConfirmationProps = {\n  onConfirm: () => void;\n};\n\ntype WithConfirmationPopupProps<T> = T & ConfirmationProps;\n\nconst withConfirmationPopup = <T extends object>(\n  WrappedComponent: FC<T>\n): FC<WithConfirmationPopupProps<T>> => {\n  const PopupComponent: FC<WithConfirmationPopupProps<T>> = ({ onConfirm, ...wrappedProps }) => {\n    const [open, setOpen] = useState<boolean>(false);\n    // https://github.com/Semantic-Org/Semantic-UI-React/issues/2487\n    return (\n      <PathwayPopup\n        className={styles.withConfirmationPopup}\n        Content={<PopupContent setOpen={setOpen} onConfirm={onConfirm} />}\n        open={open}\n        setOpen={setOpen}\n        Trigger={\n          <div className={styles.triggerContainer} {...wrappedProps}>\n            <WrappedComponent {...(wrappedProps as T)} />\n          </div>\n        }\n      />\n    );\n  };\n  return PopupComponent;\n};\n\ninterface PopupContentProps {\n  setOpen: Function;\n  onConfirm: () => void;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ setOpen, onConfirm }) => {\n  return (\n    <div className={styles.popupContent}>\n      <div>Are you sure?</div>\n      <div>\n        <ActionButton\n          size=\"small\"\n          type=\"accept\"\n          onClick={(): void => {\n            onConfirm();\n            setOpen(false);\n          }}\n        />\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default withConfirmationPopup;\n","import withConfirmationPopup from 'components/withConfirmationPopup';\nimport ActionButton from 'components/ActionButton';\n\nconst ConfirmedActionButton = withConfirmationPopup(ActionButton);\n\nexport { ConfirmedActionButton };\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, useState } from 'react';\nimport { GuidanceState, DocumentationResource, State, Action } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport { ConfirmedActionButton } from 'components/ConfirmedActionButton';\nimport { isBranchState } from 'utils/nodeUtils';\nimport { useFHIRClient } from 'components/FHIRClient';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { usePatient } from 'components/PatientProvider';\nimport {\n  translatePathwayRecommendation,\n  createDocumentReference,\n  createNoteContent\n} from 'utils/fhirUtils';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useNote } from 'components/NoteDataProvider';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n  documentation: DocumentationResource | undefined;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = ({\n  pathwayState,\n  isActionable,\n  isGuidance,\n  documentation\n}) => {\n  const [comments, setComments] = useState<string>('');\n  const guidance = isGuidance && renderGuidance(pathwayState, documentation);\n  const branch = isBranchState(pathwayState) && renderBranch(documentation, pathwayState);\n  const { patientRecords, setPatientRecords } = usePatientRecords();\n  const client = useFHIRClient();\n  const note = useNote();\n  const patient = usePatient();\n\n  // prettier-ignore\n  const defaultText = 'The patient and I discussed the treatment plan, risks, benefits and alternatives.  The patient expressed understanding and wants to proceed.';\n  const onConfirm = (status: string, action?: Action[]): void => {\n    const newPatientRecords = [...patientRecords];\n\n    // Create DocumentReference and add to patient record(and post to FHIR server)\n    if (note) {\n      const noteString = createNoteContent(note, patientRecords, status, comments, pathwayState);\n      const documentReference = createDocumentReference(noteString, pathwayState.label, patient);\n      newPatientRecords.push(documentReference);\n      client?.create?.(documentReference);\n    }\n\n    // Translate pathway recommended resource and add to patient record\n    if (action && action.length > 0) {\n      const resource: fhir.Resource = translatePathwayRecommendation(\n        action[0].resource,\n        patient.id as string\n      );\n\n      newPatientRecords.push(resource);\n      client?.create?.(resource);\n    }\n\n    setPatientRecords(newPatientRecords);\n  };\n\n  return (\n    <div className={indexStyles.expandedNode}>\n      <table className={styles.infoTable}>\n        <tbody>\n          <StatusField documentation={documentation} />\n          {guidance || branch}\n        </tbody>\n      </table>\n      {isActionable && isGuidance && (\n        <form className={styles.commentsForm}>\n          <label>Comments:</label>\n          <button\n            className={`${indexStyles.button} ${styles.defaultTextButton}`}\n            onClick={(e): void => {\n              e.preventDefault();\n              if (!comments.includes(defaultText)) setComments(comments + defaultText);\n            }}\n          >\n            Use Default Text\n          </button>\n          <textarea\n            className={styles.comments}\n            value={comments}\n            onChange={(e): void => setComments(e.target.value)}\n          ></textarea>\n          <div className={styles.footer}>\n            <ConfirmedActionButton\n              type=\"accept\"\n              size=\"large\"\n              onConfirm={(): void => {\n                onConfirm('Accepted', pathwayState.action);\n              }}\n            />\n          </div>\n          <div className={styles.footer}>\n            <ConfirmedActionButton\n              type=\"decline\"\n              size=\"large\"\n              onConfirm={(): void => {\n                onConfirm('Declined');\n              }}\n            />\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\ntype StatusFieldProps = {\n  documentation: DocumentationResource | undefined;\n};\n\nconst StatusField: FC<StatusFieldProps> = ({ documentation }) => {\n  if (!documentation?.resource) {\n    return null;\n  }\n  const status = documentation.status;\n  const rawDate = documentation.resource?.meta?.lastUpdated;\n  if (rawDate)\n    return (\n      <ExpandedNodeField\n        key=\"Status\"\n        title={status}\n        description={new Date(rawDate).toLocaleString('en-us')}\n      />\n    );\n  return null;\n};\n\nfunction renderBranch(\n  documentation: DocumentationResource | undefined,\n  pathwayState: State\n): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Observation': {\n        const observation = documentation.resource as fhir.Observation;\n\n        const valueCoding = observation.valueCodeableConcept?.coding;\n        if (valueCoding) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"ValueSystem\"\n              title=\"System\"\n              description={\n                <>\n                  {valueCoding[0].system}\n                  <a href={valueCoding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n                  </a>\n                </>\n              }\n            />,\n            <ExpandedNodeField key=\"ValueCode\" title=\"Code\" description={valueCoding[0].code} />,\n            <ExpandedNodeField\n              key=\"ValueDisplay\"\n              title=\"Display\"\n              description={valueCoding[0].display}\n            />\n          );\n        }\n\n        const date = observation.effectiveDateTime;\n        if (date) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Date\"\n              title=\"Date\"\n              description={new Date(date).toLocaleString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n      case 'DocumentReference': {\n        const documentReference = documentation.resource as fhir.DocumentReference;\n        const subject = documentReference.subject;\n        if (subject)\n          returnElements.push(\n            <ExpandedNodeField key=\"subject\" title=\"Subject\" description={subject.reference} />\n          );\n\n        // Display missing data value if it is available, otherwise display note content\n        const documentReferenceIdentifier = documentReference?.identifier?.find(\n          i => i.system === 'pathways.documentreference'\n        );\n\n        if (documentReferenceIdentifier) {\n          const value = atob(documentReferenceIdentifier.value as string);\n          returnElements.push(<ExpandedNodeField key=\"value\" title=\"Value\" description={value} />);\n        } else {\n          const note = documentReference.content[0].attachment.data;\n          if (note)\n            returnElements.push(\n              <ExpandedNodeField key=\"note\" title=\"Note\" description={atob(note)} />\n            );\n        }\n        break;\n      }\n      default: {\n        returnElements.push(\n          <ExpandedNodeField key=\"error\" title=\"Error\" description=\"Unsupported Resource Type\" />\n        );\n      }\n    }\n  } else {\n    const values: string[] = pathwayState.transitions\n      .map(transition => {\n        const description = transition.condition?.description;\n        return description ? description : '';\n      })\n      // Remove duplicate values\n      .filter((v, i, arr) => arr.indexOf(v) === i);\n\n    returnElements.push(\n      <ExpandedNodeField\n        key=\"value\"\n        title=\"Value\"\n        description={<MissingDataPopup values={values} />}\n      />\n    );\n  }\n  return returnElements;\n}\n\nfunction renderGuidance(\n  pathwayState: GuidanceState,\n  documentation: DocumentationResource | undefined\n): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding =\n    'medicationCodeableConcept' in resource\n      ? resource.medicationCodeableConcept.coding\n      : resource.code.coding;\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding[0].system}\n          <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding[0].display} />\n  ];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Procedure': {\n        const procedure = documentation.resource as fhir.Procedure;\n        const start =\n          (procedure.performedPeriod && procedure.performedPeriod.start) ||\n          procedure.performedDateTime;\n        const end = procedure.performedPeriod && procedure.performedPeriod.end;\n        if (start) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Start\"\n              title=\"Start\"\n              description={new Date(start).toLocaleString('en-us')}\n            />\n          );\n        }\n\n        if (end) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"End\"\n              title=\"End\"\n              description={new Date(end).toLocaleString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n    }\n  }\n  return returnElements;\n}\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef } from 'react';\nimport { GuidanceState, State, DocumentationResource } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport nodeStyles from 'styles/index.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  pathwayState: State;\n  documentation: DocumentationResource | undefined;\n  isOnPatientPath: boolean;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClickHandler?: () => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = forwardRef<HTMLDivElement, NodeProps>(\n  (\n    {\n      pathwayState,\n      documentation,\n      isOnPatientPath,\n      isCurrentNode,\n      xCoordinate,\n      yCoordinate,\n      expanded = false,\n      onClickHandler\n    },\n    ref\n  ) => {\n    const { label } = pathwayState;\n    const style = {\n      top: yCoordinate,\n      left: xCoordinate\n    };\n\n    const backgroundColorClass = isOnPatientPath ? styles.onPatientPath : styles.notOnPatientPath;\n    const isActionable = isCurrentNode && !documentation;\n    const topLevelClasses = [styles.node, backgroundColorClass];\n    let expandedNodeClass = '';\n    if (expanded) topLevelClasses.push(nodeStyles.expanded);\n    if (isActionable) {\n      topLevelClasses.push(styles.actionable);\n      expandedNodeClass = styles.childActionable;\n    } else {\n      expandedNodeClass = isOnPatientPath\n        ? styles.childOnPatientPath\n        : styles.childNotOnPatientPath;\n    }\n    const isGuidance = isGuidanceState(pathwayState);\n    // TODO: how do we determine whether a node has been accepted or declined?\n    // for now:\n    // if it's a non-actionable guidance state on the path: accepted == has documentation\n    // if it's actionable, not guidance or not on the path: null\n    const wasActionTaken = isOnPatientPath && isGuidance && !isActionable;\n    const isAccepted = wasActionTaken ? documentation?.resourceType !== 'DocumentReference' : null;\n\n    return (\n      <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n        <div className={nodeStyles.nodeTitle} onClick={onClickHandler}>\n          <div className={nodeStyles.iconAndLabel}>\n            <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n            {label}\n          </div>\n          <StatusIcon accepted={isAccepted} />\n        </div>\n        {expanded && (\n          <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n            <ExpandedNode\n              pathwayState={pathwayState as GuidanceState}\n              isActionable={isActionable}\n              isGuidance={isGuidance}\n              documentation={documentation}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'MedicationAdministration') icon = faCapsules;\n      else if (resourceType === 'Procedure') icon = faSyringe;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  accepted: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ accepted }) => {\n  if (accepted == null) {\n    return null;\n  }\n  const icon = accepted ? faCheckCircle : faTimesCircle;\n  return (\n    <div className={nodeStyles.statusIcon}>\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  isOnPatientPath: boolean;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, isOnPatientPath, widthOffset }) => {\n  const className = isOnPatientPath ? styles.arrowOnPatientPath : styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import { Pathway, State } from 'pathways-model';\n\nexport interface CqlObject {\n  main: string;\n  libraries: Library;\n}\n\nexport interface Library {\n  [name: string]: string; // should probably have an object for expected ELM structure.\n}\nexport function getFixture(filename: string): Promise<string> {\n  return fetch(`./static/cql/${filename}`).then(cql => cql.text());\n}\n\n/**\n * Function to format each block from the pathway in CQL format\n * @param cqlBlock - block of CQL code from the pathway\n * @param resourceName - Name of the CQL resource block to be defined\n * @return the CQL code formatted pretty with the define line\n */\nfunction cqlFormat(cqlBlock: string, resourceName: string): string {\n  let formattedBlock = '';\n\n  // Definition of CQL block\n  const line1 = 'define \"' + resourceName + '\":\\n\\t';\n\n  // Build the formatted block\n  formattedBlock = line1.concat(cqlBlock);\n  return formattedBlock;\n}\n\n/**\n * Helper function to add the cql block to the completed cql\n * with the correct formatting\n * @param cql - complete cql string\n * @param cqlBlock - current cql block to append to the cql\n * @return the cql with the cql block appended correctly\n */\nfunction cqlAdd(cql: string, cqlBlock: string): string {\n  return cql.concat('\\n', '\\n', cqlBlock);\n}\n\n/**\n * Helper function to determine if a state has a conditional transition\n * @param state - the JSON object of the desired state on the pathway\n * @return true if state is a conditional transition and false\n *                   otherwise\n */\nfunction isConditional(state: State): boolean {\n  if ('transitions' in state) {\n    return state.transitions.length > 1 ? true : false;\n  } else return false;\n}\n\n/**\n * Function to extract the CQL code from each state in the pathway and build\n * the CQL code to execute\n * @param pathway - the JSON object of the entire pathway\n * @return a string of the CQL code for the navigational nodes in the pathway\n */\nexport function extractNavigationCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const stateName in pathway.states) {\n      const state = pathway.states[stateName];\n      if ('cql' in state) {\n        const cqlBlock1 = state.cql;\n        const nextBlock1 = cqlFormat(cqlBlock1, stateName);\n        cql = cqlAdd(cql, nextBlock1);\n      } else if (isConditional(state)) {\n        for (const transition of state.transitions) {\n          const condition = transition.condition;\n          if (condition) {\n            const nextBlock2 = cqlFormat(condition.cql, condition.description);\n            cql = cqlAdd(cql, nextBlock2);\n          }\n        }\n      }\n    }\n\n    return cql;\n  });\n}\n\n/**\n * Extract the CQL statements from the `criteria` section of the pathway\n * into a snippet ready to be converted to ELM.\n * @param pathway - the entire pathway object\n * @return a string of the CQL for the criteria in the pathway\n */\nexport function extractCriteriaCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const criteria of pathway.criteria) {\n      const cqlBlock1 = criteria.cql;\n      const nextBlock1 = cqlFormat(cqlBlock1, criteria.elementName);\n      cql = cqlAdd(cql, nextBlock1);\n    }\n\n    return cql;\n  });\n}\n","// sample header= \"multipart/form-data;boundary=Boundary_1\"\n// get the part after \"boundary=\" and before any subsequent ;\nexport const extractMultipartBoundary = /.*;boundary=(Boundary.*);?.*/g;\n\nexport const extractMultipartFileName = /Content-Disposition: form-data; name=\"([^\"]+)\"/;\n\n// eveything between { } including newlines. [^] is like . but matches newline\nexport const extractJSONContent = /(\\{[^]*\\})/;\n\nexport const extractCQLInclude = /include .* called (.*)/g;\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","/* eslint-disable max-len */\nimport { ElmResults } from 'pathways-model';\nimport { Library, Executor, Repository } from 'cql-execution';\nimport { PatientSource } from 'cql-exec-fhir';\n\n/**\n * Engine function that takes in a patient file (JSON) and an ELM file, running the patient against the ELM file\n * @param patient - FHIR bundle containing patient's record\n * @param elm - ELM structure (previosuly converted from CQL) on which the patient will be run.\n * @return returns a JSON object which is the result of analyzing the patient against the elm file\n */\nexport default function executeElm(patient: object, elm: object, libraries?: object): ElmResults {\n  let lib;\n  if (libraries) {\n    lib = new Library(elm, new Repository(libraries));\n  } else {\n    lib = new Library(elm);\n  }\n\n  const executor = new Executor(lib);\n  const psource = new PatientSource.FHIRv400(patient);\n  psource.loadBundles(patient);\n  const result = executor.exec(psource);\n  return result;\n}\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport {\n  Pathway,\n  PathwayResults,\n  PatientData,\n  CriteriaResult,\n  DocumentationResource,\n  State,\n  GuidanceState,\n  CriteriaResultItem\n} from 'pathways-model';\n\ninterface StateData {\n  documentation: DocumentationResource | string | null;\n  nextState: string | null;\n  status: string;\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the patient's pathway\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns a JSON object describing where the patient is on the given pathway\n *  {\n *    currentState - the name of the state patient is currently in\n *    currentStatus - the status of the patient in the current state (from FHIR resource)\n *          A status of unknown could be the resource returned an unknown status or the resource has no status at all\n *    path - list of the names of states in the patient's pathway\n *    documentation - list of documentation for the trace of the pathway (documentation is corresponding resource)\n *  }\n */\nexport function pathwayData(\n  pathway: Pathway,\n  patientData: PatientData,\n  resources: object[]\n): PathwayResults {\n  const startState = 'Start';\n  let currentStatus;\n  const patientDocumentation = [];\n  const evaluatedPathway = [startState];\n\n  let stateData = nextState(pathway, patientData, startState, resources);\n  while (stateData !== null) {\n    currentStatus = stateData.status;\n    if (stateData.documentation !== null)\n      patientDocumentation.push(retrieveResource(stateData.documentation, resources));\n    if (stateData.nextState === null) break; // The position of this line is important to maintain consistency for different scenarios\n    evaluatedPathway.push(stateData.nextState);\n    stateData = nextState(pathway, patientData, stateData.nextState, resources);\n  }\n  const currentStateName = evaluatedPathway[evaluatedPathway.length - 1];\n  const currentState = pathway.states[currentStateName];\n  return {\n    patientId: patientData.Patient.id.value,\n    currentState: currentStateName,\n    currentStatus: currentStatus,\n    nextRecommendation: nextStateRecommendation(currentState),\n    path: evaluatedPathway,\n    documentation: patientDocumentation\n  };\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the pathway criteria\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns CriteriaResult containing the expected and actual value for one data element\n */\nexport function criteriaData(pathway: Pathway, patientData: PatientData): CriteriaResult {\n  const resultItems: CriteriaResultItem[] = [];\n\n  let matches = 0;\n  pathway.criteria.forEach(criteria => {\n    let evaluationResult = patientData[criteria.elementName];\n    if (Array.isArray(evaluationResult)) {\n      evaluationResult = evaluationResult[0]; // TODO: add functionality for multiple resources\n    }\n    let actual = 'unknown';\n    let match = false;\n\n    if (evaluationResult) {\n      actual = evaluationResult['value'];\n      match = evaluationResult['match'];\n    }\n\n    if (match) matches += 1;\n\n    const criteriaResultItem = {\n      elementName: criteria.elementName,\n      expected: criteria.expected,\n      actual,\n      match\n    };\n\n    resultItems.push(criteriaResultItem);\n  });\n\n  return {\n    pathwayName: pathway.name,\n    matches: matches,\n    criteriaResultItems: resultItems\n  };\n}\n\n/**\n * Helper function to set the next recommendation\n * @param state - the current state in the pathway (where the patient is)\n * @return \"pathway terminal\" if state is the end of the pathway\n *        the name of the next state in a direct transition\n *        an object describing possible transitions and descriptions\n */\nfunction nextStateRecommendation(state: State): string | object {\n  const transitions = state.transitions;\n  if (transitions.length === 0) return 'pathway terminal';\n  else if (transitions.length === 1) return transitions[0].transition;\n  else {\n    return transitions.map(transition => {\n      return {\n        state: transition.transition,\n        conditionDescription:\n          'condition' in transition ? transition.condition && transition.condition.description : ''\n      };\n    });\n  }\n}\n\n/**\n * Helper function to format the documentation and include the related state\n * @param resource - the resource returned by the CQL execution\n * @param state - the current state name\n * @return the JSON resource with the state property set\n */\nfunction formatDocumentation(\n  resource: DocumentationResource,\n  state: string\n): DocumentationResource {\n  resource.state = state;\n  return resource;\n}\n\n/**\n * Helper function to select the transition state\n * This function is needed because MedicationRequests can have multiple\n * different statuses to indiciate complete\n * @param resource - the resource returned by the CQL execution\n * @param currentState - the current state\n * @return the next state name or null\n */\nfunction formatNextState(resource: DocumentationResource, currentState: State): string | null {\n  if (resource.resourceType === 'MedicationRequest') {\n    return currentState.transitions.length !== 0 ? currentState.transitions[0].transition : null;\n  } else {\n    return resource.status === 'completed' && currentState.transitions.length !== 0\n      ? currentState.transitions[0].transition\n      : null;\n  }\n}\n\n/**\n * Determine the nextState in a conditional transition state\n * @param patientData - JSON object representing the data on a patient\n * @param currentState - the current state\n * @param currentStateName - the name of the current state\n * @return the next state\n */\nfunction getConditionalNextState(\n  patientData: PatientData,\n  currentState: State,\n  currentStateName: string,\n  resources: fhir.DomainResource[]\n): StateData {\n  for (const transition of currentState.transitions) {\n    if (transition.condition) {\n      let documentationResource: DocumentationResource | null = null;\n      if (patientData[transition.condition.description].length)\n        // TODO: add functionality for multiple resources\n        documentationResource = patientData[transition.condition.description][0];\n      else {\n        const documentReference = retrieveNote(transition.condition.description, resources);\n        if (documentReference) {\n          documentationResource = {\n            resourceType: 'DocumentReference',\n            id: documentReference.id ? documentReference.id : 'unknown',\n            status: documentReference.status,\n            state: currentStateName,\n            resource: documentReference\n          };\n        }\n      }\n\n      if (documentationResource) {\n        return {\n          nextState: transition.transition,\n          documentation: formatDocumentation(documentationResource, currentStateName),\n          status: documentationResource.status\n        };\n      }\n    }\n  }\n\n  // No matching resource in the patient data to move from state\n  return noMatchingResourceForState();\n}\n\n/**\n * No resource exists for the next state\n * @return empty object\n */\nfunction noMatchingResourceForState(): StateData {\n  return {\n    nextState: null,\n    documentation: null,\n    status: 'not-done'\n  };\n}\n\n/**\n * Helper function to traverse the pathway and determine the next state in a patients pathway.\n * For actions this function will also verify the move is valid by the resource status\n * @param pathway - JSON object representing the complete pathway\n * @param patientData - JSON object representing the data on a patient\n * @param currentStateName - the name of the current state in the traversal\n * @return returns object with the next state, the status, and the evidenvce\n */\nfunction nextState(\n  pathway: Pathway,\n  patientData: PatientData,\n  currentStateName: string,\n  resources: fhir.DomainResource[]\n): StateData | null {\n  const currentState: State | GuidanceState = pathway.states[currentStateName];\n  if ('action' in currentState) {\n    let resource = patientData[currentStateName];\n    if (resource?.length) {\n      resource = resource[0]; // TODO: add functionality for multiple resources\n      return {\n        nextState: formatNextState(resource, currentState),\n        documentation: formatDocumentation(resource, currentStateName),\n        status: 'status' in resource ? resource.status : 'unknown'\n      };\n    } else {\n      // Check for note posted on decline\n      const documentReference = retrieveNote(currentState.label, resources);\n      if (documentReference) {\n        const doc = {\n          resourceType: 'DocumentReference',\n          id: documentReference.id ? documentReference.id : 'unknown',\n          status: 'status' in documentReference ? documentReference.status : 'unknown',\n          state: currentStateName,\n          resource: documentReference\n        };\n        return {\n          nextState: formatNextState(doc, currentState),\n          documentation: formatDocumentation(doc, currentStateName),\n          status: doc.status\n        };\n      }\n      // Action exists but has no matching resource in patientData\n      return noMatchingResourceForState();\n    }\n  } else if (currentState.transitions.length === 1) {\n    return {\n      nextState: currentState.transitions[0].transition,\n      documentation: 'direct',\n      status: 'completed'\n    };\n  } else if (currentState.transitions.length > 1) {\n    return getConditionalNextState(patientData, currentState, currentStateName, resources);\n  } else return null;\n}\n\nfunction retrieveNote(\n  condition: string,\n  resources: fhir.DomainResource[]\n): fhir.DocumentReference | null {\n  const documentReference = resources.find(resource => {\n    if (resource.resourceType !== 'DocumentReference') return false;\n    const documentReference = resource as fhir.DocumentReference;\n    if (documentReference.identifier === undefined) return false;\n    for (const identifier of documentReference.identifier) {\n      if (\n        identifier.system === 'pathways.documentreference' &&\n        identifier.value === btoa(condition)\n      )\n        return true;\n    }\n    return false;\n  });\n\n  if (!documentReference) return null;\n\n  return documentReference as fhir.DocumentReference;\n}\n\nfunction retrieveResource(\n  doc: DocumentationResource | string,\n  resources: fhir.DomainResource[]\n): DocumentationResource | string {\n  if (typeof doc !== 'string' && resources) {\n    doc.resource = resources.find(resource => {\n      return resource.resourceType === doc.resourceType && resource.id === doc.id;\n    });\n  }\n\n  return doc;\n}\n","import { extractNavigationCQL, extractCriteriaCQL, CqlObject, Library } from './cql-extractor';\nimport convertCQL, { convertBasicCQL, ElmObject } from './cql-to-elm';\nimport executeElm from './elm-executor';\nimport { pathwayData, criteriaData } from './output-results';\nimport { Pathway, PatientData, PathwayResults, ElmResults, CriteriaResult } from 'pathways-model';\nimport { getFixture } from './cql-extractor';\nimport { extractCQLInclude } from 'utils/regexes';\n\nfunction instanceOfElmObject(object: object): object is ElmObject {\n  return 'main' in object;\n}\n\n/**\n * Function to run each of the engine files in series to execute\n * the automated pathway\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return Information on the patient's current status within the\n *                  clinical pathway\n */\nexport function evaluatePatientOnPathway(\n  patient: object,\n  pathway: Pathway,\n  resources: object[]\n): Promise<PathwayResults> {\n  return extractNavigationCQL(pathway)\n    .then(cql => processCQLCommon(patient, cql))\n    .then(patientData => pathwayData(pathway, patientData, resources));\n}\n\n/**\n * Evaluate the pathway criteria against the given patient.\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return a list of CriteriaResults, each containing\n *         the expected value and actual value for one criteria item\n */\nexport function evaluatePathwayCriteria(\n  patient: object,\n  pathway: Pathway\n): Promise<CriteriaResult> {\n  return extractCriteriaCQL(pathway)\n    .then(cql => processCQLCommon(patient, cql))\n    .then(patientData => criteriaData(pathway, patientData));\n}\n\n/**\n * Common logic to execute the given CQL against the given Patient.\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return the raw, unprocessed patientResults\n *         derived from executing the CQL against the given patient\n */\nfunction processCQLCommon(patient: object, cql: string): Promise<PatientData> {\n  // Likely need an intermediary step that gathers the CQL files needed\n  // example function gatherCQL\n  return gatherCQL(cql)\n    .then(result => {\n      if (Object.keys(result).length > 0) {\n        // non-empty library\n        const cqlObject: CqlObject = {\n          main: cql,\n          libraries: result\n        };\n        return convertCQL(cqlObject);\n      } else {\n        return convertBasicCQL(cql);\n      }\n    })\n    .then(elm => {\n      let elmResults: ElmResults = {\n        patientResults: {}\n      };\n      if (instanceOfElmObject(elm)) {\n        elmResults = executeElm(patient, elm.main, elm.libraries);\n      } else {\n        elmResults = executeElm(patient, elm);\n      }\n\n      // TODO - update pathwaysData to take multiple patients\n      const patientIds = Object.keys(elmResults.patientResults);\n      const patientData = elmResults.patientResults[patientIds[0]];\n      return patientData;\n    });\n}\n\n// example function that would gather library CQL files\nfunction gatherCQL(cql: string): Promise<Library> {\n  const lib = extractCQLInclude.exec(cql);\n  if (lib) {\n    return getFixture(`${lib[1]}.cql`).then(result => {\n      return new Promise(function(resolve, reject): void {\n        setTimeout(function() {\n          resolve({ FHIRHelpers: result });\n        }, 300);\n      });\n    });\n  } else {\n    return new Promise(function(resolve, reject): void {\n      resolve({});\n    });\n  }\n}\n","import React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { evaluatePatientOnPathway } from 'engine';\nimport { EvaluatedPathway, PathwayResults, DocumentationResource } from 'pathways-model';\nimport { Layout, NodeDimensions, Edge } from 'graph-model';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\n\ninterface GraphProps {\n  evaluatedPathway: EvaluatedPathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n  updateEvaluatedPathways: (value: EvaluatedPathway) => void;\n}\n\nconst isEdgeOnPatientPath = (path: string[], edge: Edge): boolean => {\n  const startIndex = path.indexOf(edge.start);\n  const endIndex = path.indexOf(edge.end);\n  return startIndex !== -1 && endIndex !== -1 && startIndex + 1 === endIndex;\n};\n\nconst Graph: FC<GraphProps> = ({\n  evaluatedPathway,\n  interactive = true,\n  expandCurrentNode = true,\n  updateEvaluatedPathways\n}) => {\n  const patientRecords = usePatientRecords();\n  const resources = patientRecords.patientRecords;\n  const pathway = evaluatedPathway.pathway;\n  const graphElement = useRef<HTMLDivElement>(null);\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n  const [windowWidth, setWindowWidth] = useState<number>(useWindowWidth());\n  const parentWidth = graphElement?.current?.parentElement?.clientWidth ?? 0;\n  const [path, _setPath] = useState<string[]>(\n    evaluatedPathway.pathwayResults ? evaluatedPathway.pathwayResults.path : []\n  );\n\n  const setPath = useCallback(\n    (value: PathwayResults): void => {\n      _setPath(value.path);\n      patientRecords.setEvaluatePath(false);\n      updateEvaluatedPathways({ pathway: evaluatedPathway.pathway, pathwayResults: value });\n    },\n    [evaluatedPathway.pathway, updateEvaluatedPathways, patientRecords]\n  );\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    return graphLayout(pathway, nodeDimensions);\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  const initialExpandedState = useMemo(() => {\n    return Object.keys(layout).reduce((acc: { [key: string]: boolean }, curr: string) => {\n      acc[curr] = false;\n      return acc;\n    }, {});\n  }, [layout]);\n\n  const [expanded, _setExpanded] = useState<{ [key: string]: boolean | undefined }>(\n    initialExpandedState\n  );\n\n  const setExpanded = useCallback((key: string, expand?: boolean): void => {\n    _setExpanded(prevState => {\n      return { ...prevState, [key]: !prevState[key] };\n    });\n  }, []);\n\n  useEffect(() => {\n    // Keeps track of whether the current useEffect cycle has ended\n    let cancel = false;\n\n    if (resources.length > 0 && (path.length === 0 || patientRecords.evaluatePath)) {\n      // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n      const patient = {\n        resourceType: 'Bundle',\n        entry: resources.map((r: object) => ({ resource: r }))\n      };\n      evaluatePatientOnPathway(patient, pathway, resources).then(pathwayResults => {\n        if (!cancel) setPath(pathwayResults);\n      });\n\n      return (): void => {\n        cancel = true;\n      };\n    }\n  }, [pathway, resources, path.length, setPath, patientRecords]);\n\n  useEffect(() => {\n    if (path) {\n      const currentNode = path[path.length - 1];\n      if (expandCurrentNode) {\n        if (currentNode) setExpanded(currentNode, true);\n      }\n    }\n  }, [expandCurrentNode, path, setExpanded]);\n\n  // Recalculate graph layout if window size changes or if a node is expanded\n  useEffect(() => {\n    setWindowWidth(parentWidth);\n    setLayout(getGraphLayout());\n  }, [getGraphLayout, parentWidth]);\n\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [expanded, getGraphLayout]);\n\n  // maxWidth finds the edge label that is farthest to the right\n  const maxWidth: number =\n    edges !== undefined\n      ? Object.values(edges)\n          .map(e => e.label)\n          .map(l => (l ? l.x + l.text.length * 10 + windowWidth / 2 : 0))\n          .reduce((a, b) => Math.max(a, b), 0)\n      : windowWidth;\n\n  const documentation = evaluatedPathway.pathwayResults\n    ? evaluatedPathway.pathwayResults.documentation\n    : [];\n  return (\n    <div ref={graphElement} style={{ height: maxHeight + 150 + 'px', position: 'relative' }}>\n      {nodeCoordinates !== undefined\n        ? Object.keys(nodeCoordinates).map(key => {\n            const docResource = documentation.find((doc): doc is DocumentationResource => {\n              return typeof doc !== 'string' && doc.state === key;\n            });\n            const isCurrentNode = (): boolean => {\n              return path[path.length - 1] === key;\n            };\n            const onClickHandler = interactive ? (): void => setExpanded(key) : undefined;\n            return (\n              <Node\n                key={key}\n                documentation={docResource}\n                ref={(node: HTMLDivElement): void => {\n                  nodeRefs.current[key] = node;\n                }}\n                pathwayState={pathway.states[key]}\n                isOnPatientPath={path.includes(key)}\n                isCurrentNode={isCurrentNode()}\n                xCoordinate={nodeCoordinates[key].x + windowWidth / 2}\n                yCoordinate={nodeCoordinates[key].y}\n                expanded={expanded[key]}\n                onClickHandler={onClickHandler}\n              />\n            );\n          })\n        : []}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          width: maxWidth,\n          height: maxHeight,\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          overflow: 'visible'\n        }}\n      >\n        {edges !== undefined\n          ? Object.keys(edges).map(edgeName => {\n              const edge = edges[edgeName];\n              return (\n                <Arrow\n                  key={edgeName}\n                  edge={edge}\n                  edgeName={edgeName}\n                  isOnPatientPath={isEdgeOnPatientPath(path, edge)}\n                  widthOffset={windowWidth / 2}\n                />\n              );\n            })\n          : []}\n      </svg>\n    </div>\n  );\n};\n\nfunction useWindowWidth(): number {\n  const getWidth = (): number => window.innerWidth;\n  const [windowWidth, setWindowWidth] = useState(getWidth);\n\n  useEffect(() => {\n    const handleResize = (): void => setWindowWidth(getWidth);\n\n    window.addEventListener('resize', handleResize);\n    return (): void => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowWidth;\n}\n\nexport default Graph;\n","import React, { FC, ReactNode, useState } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway, EvaluatedPathway, CriteriaResult } from 'pathways-model';\n\nimport styles from './PathwaysList.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Graph from 'components/Graph';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { evaluatePathwayCriteria } from 'engine';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport {\n  faPlay,\n  faPlus,\n  faMinus,\n  faChevronUp,\n  faChevronDown,\n  faCaretDown\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface PathwaysListElementProps {\n  evaluatedPathway: EvaluatedPathway;\n  criteria?: CriteriaResult;\n  callback: Function;\n}\n\ninterface PathwaysListProps {\n  evaluatedPathways: EvaluatedPathway[];\n  callback: Function;\n  service: Service<Array<Pathway>>;\n}\n\nconst PathwaysList: FC<PathwaysListProps> = ({ evaluatedPathways, callback, service }) => {\n  const resources = usePatientRecords().patientRecords;\n  const [criteria, setCriteria] = useState<CriteriaResult[] | null>(null);\n\n  if (!criteria && evaluatedPathways.length > 0 && resources && resources.length > 0) {\n    // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n    const patient = {\n      resourceType: 'Bundle',\n      entry: resources.map((r: fhir.Resource) => ({ resource: r }))\n    };\n\n    // Evaluate pathway criteria for each pathway\n    const criteriaPromises = evaluatedPathways.map(pathway =>\n      evaluatePathwayCriteria(patient, pathway.pathway)\n    );\n    Promise.all(criteriaPromises).then(criteriaResults => {\n      setCriteria(criteriaResults.sort((a, b) => b.matches - a.matches));\n    });\n  }\n\n  function renderList(): ReactNode {\n    return (\n      <div>\n        {criteria ? (\n          criteria.map(c => {\n            const evaluatedPathway = evaluatedPathways.find(p => p.pathway.name === c.pathwayName);\n            if (evaluatedPathway)\n              return (\n                <PathwaysListElement\n                  evaluatedPathway={evaluatedPathway}\n                  callback={callback}\n                  criteria={c}\n                  key={evaluatedPathway.pathway.name}\n                />\n              );\n            else\n              return <div>An error occured evaluating the pathway criteria. Please try again.</div>;\n          })\n        ) : (\n          <div>Loading Pathways...</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.pathways_list}>\n      {service.status === 'loading' ? (\n        <div>Loading...</div>\n      ) : service.status === 'loaded' ? (\n        <div className={styles.container}>\n          <div className={styles.pathwayListHeaderContainer}>\n            <div className={styles.header_title}>\n              <div className={styles.header_title__header}>Explore Pathways</div>\n              <div className={styles.header_title__note}>Select pathway below to view details</div>\n            </div>\n            <div className={styles.matchedElementsLabel}>\n              <i>\n                mCODE\n                <br />\n                elements\n                <br />\n                matched\n              </i>\n              <FontAwesomeIcon icon={faCaretDown} />\n            </div>\n          </div>\n\n          {criteria?.length !== 0 && renderList()}\n        </div>\n      ) : (\n        <div>ERROR</div>\n      )}\n    </div>\n  );\n};\n\nconst PathwaysListElement: FC<PathwaysListElementProps> = ({\n  evaluatedPathway,\n  criteria,\n  callback\n}) => {\n  const pathway = evaluatedPathway.pathway;\n  const pathwayCtx = usePathwayContext();\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const chevron: IconProp = isVisible ? faChevronUp : faChevronDown;\n\n  function toggleVisible(): void {\n    setIsVisible(!isVisible);\n  }\n\n  return (\n    <div className={styles.pathwayElement} role={'list'} key={pathway.name}>\n      <div\n        className={styles.title}\n        role={'listitem'}\n        onClick={(e): void => {\n          pathwayCtx.setEvaluatedPathway(evaluatedPathway, true);\n          toggleVisible();\n        }}\n      >\n        <div>{pathway.name}</div>\n        <div className={styles.expand}>\n          <FontAwesomeIcon icon={chevron} />\n        </div>\n        <div className={styles.numElements}>{criteria?.matches}</div>\n      </div>\n\n      {isVisible && (\n        <div className={styles.infoContainer}>\n          <div className={styles.details}>\n            <p>{pathway.description}</p>\n            <table>\n              <tbody>\n                <tr>\n                  <th></th>\n                  <th>mCODE elements</th>\n                  <th>patient elements</th>\n                </tr>\n                {criteria?.criteriaResultItems.map(c => (\n                  <tr key={c.elementName}>\n                    <td>{c.elementName}</td>\n                    <td>{c.expected}</td>\n                    <td className={c.match ? styles.matchingElement : undefined}>{c.actual}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button className={indexStyles.button} onClick={(): void => callback(evaluatedPathway)}>\n              Select Pathway\n            </button>\n          </div>\n          <div className={styles.pathway}>\n            <Graph\n              evaluatedPathway={evaluatedPathway}\n              interactive={false}\n              expandCurrentNode={false}\n              updateEvaluatedPathways={pathwayCtx.updateEvaluatedPathways}\n            />\n            <div className={styles.controls}>\n              <FontAwesomeIcon icon={faPlay} />\n              <FontAwesomeIcon icon={faPlus} />\n              <FontAwesomeIcon icon={faMinus} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PathwaysList;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Array<Pathway>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<Array<string>>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","class MockedFHIRClient {\n  patient = {};\n\n  async create(): Promise<fhir.Resource> {\n    console.log('Mocked create');\n    return Promise.resolve({});\n  }\n}\n\nexport { MockedFHIRClient };\n","import React, { FC, useState, useEffect, useCallback } from 'react';\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport { PathwaysClient } from 'pathways-client';\nimport logo from 'camino-logo-dark.png';\nimport { getPatientRecord } from 'utils/fhirExtract';\nimport { FHIRClientProvider } from './FHIRClient';\nimport { PatientProvider } from './PatientProvider';\nimport { PatientRecordsProvider } from './PatientRecordsProvider';\nimport PatientRecord from './PatientRecord/PatientRecord';\nimport { NoteDataProvider } from './NoteDataProvider';\nimport Graph from './Graph';\nimport config from 'utils/ConfigManager';\nimport PathwaysList from './PathwaysList';\nimport { PathwayProvider } from './PathwayProvider';\nimport { EvaluatedPathway } from 'pathways-model';\nimport useGetPathwaysService from './PathwaysService/PathwaysService';\nimport FHIR from 'fhirclient';\nimport demoRecords from 'fixtures/MaureenMcodeDemoPatientRecords.json';\nimport { MockedFHIRClient } from 'utils/MockedFHIRClient';\nimport { getHumanName } from 'utils/fhirUtils';\ninterface AppProps {\n  demo: boolean;\n}\n\nconst App: FC<AppProps> = ({ demo }) => {\n  const [patientRecords, _setPatientRecords] = useState<fhir.DomainResource[]>([]);\n  const [currentPathway, setCurrentPathway] = useState<EvaluatedPathway | null>(null);\n  const [selectPathway, setSelectPathway] = useState<boolean>(true);\n  const [evaluatePath, setEvaluatePath] = useState<boolean>(false);\n  const [evaluatedPathways, setEvaluatedPathways] = useState<EvaluatedPathway[]>([]);\n  const [client, setClient] = useState<PathwaysClient | null>(null);\n  const [user, setUser] = useState<string>('');\n\n  const setPatientRecords = useCallback((value: fhir.DomainResource[]): void => {\n    _setPatientRecords(value);\n    setEvaluatePath(true);\n  }, []);\n\n  useEffect(() => {\n    if (!demo) {\n      FHIR.oauth2\n        .init({\n          clientId: 'Input client id you get when you register the app',\n          scope: 'launch/patient openid profile'\n        })\n        .then(client => {\n          // TODO: MockedFHIRClient has not mocked out requests for resources yet\n          getPatientRecord(client).then((records: fhir.DomainResource[]) => {\n            // filters out values that are empty\n            // the server might return deleted\n            // resources that only include an\n            // id, meta, and resourceType\n            const values = ['id', 'meta', 'resourceType'];\n            records = records.filter(resource => {\n              return !Object.keys(resource).every(value => values.includes(value));\n            });\n\n            setPatientRecords(records);\n          });\n          setClient(client);\n        });\n    } else {\n      setClient(new MockedFHIRClient());\n      setPatientRecords(demoRecords);\n    }\n  }, [demo, setPatientRecords]);\n\n  // gather note info\n  useEffect(() => {\n    client?.user?.read().then((user: fhir.Practitioner) => {\n      const name = user.name && getHumanName(user.name);\n      if (name) {\n        setUser(name);\n      }\n    });\n  }, [client]);\n\n  const service = useGetPathwaysService(\n    config.get(demo ? 'demoPathwaysService' : 'pathwaysService')\n  );\n\n  useEffect(() => {\n    if (service.status === 'loaded' && evaluatedPathways.length === 0)\n      setEvaluatedPathways(\n        service.payload.map(pathway => ({ pathway: pathway, pathwayResults: null }))\n      );\n  }, [service, evaluatedPathways.length, client, patientRecords]);\n\n  function setEvaluatedPathwayCallback(\n    value: EvaluatedPathway | null,\n    selectPathway = false\n  ): void {\n    window.scrollTo(0, 0);\n    setSelectPathway(selectPathway);\n    setCurrentPathway(value);\n  }\n\n  function updateEvaluatedPathways(value: EvaluatedPathway): void {\n    const newList = [...evaluatedPathways]; // Create a shallow copy of list\n    for (let i = 0; i < evaluatedPathways.length; i++) {\n      if (evaluatedPathways[i].pathway.name === value.pathway.name) {\n        newList[i] = value;\n        setEvaluatedPathways(newList);\n      }\n    }\n\n    if (currentPathway?.pathway.name === value.pathway.name) {\n      setCurrentPathway(value);\n    }\n  }\n\n  interface PatientViewProps {\n    evaluatedPathway: EvaluatedPathway | null;\n  }\n\n  const PatientView: FC<PatientViewProps> = ({ evaluatedPathway }) => {\n    return (\n      <div>\n        {evaluatedPathway ? (\n          <Graph\n            evaluatedPathway={evaluatedPathway}\n            expandCurrentNode={true}\n            updateEvaluatedPathways={updateEvaluatedPathways}\n          />\n        ) : (\n          <div>No Pathway Loaded</div>\n        )}\n        <PatientRecord />\n      </div>\n    );\n  };\n\n  return (\n    <FHIRClientProvider client={client as PathwaysClient}>\n      <PatientProvider\n        patient={\n          demo ? (demoRecords.find(r => r.resourceType === 'Patient') as fhir.Patient) : null\n        }\n      >\n        <PatientRecordsProvider\n          value={{ patientRecords, setPatientRecords, evaluatePath, setEvaluatePath }}\n        >\n          <PathwayProvider\n            pathwayCtx={{\n              updateEvaluatedPathways,\n              evaluatedPathway: currentPathway,\n              setEvaluatedPathway: setEvaluatedPathwayCallback\n            }}\n          >\n            <NoteDataProvider physician={user} date={new Date(Date.now())}>\n              <div>\n                <Header logo={logo} />\n                <Navigation\n                  evaluatedPathways={evaluatedPathways}\n                  selectPathway={selectPathway}\n                  setSelectPathway={setSelectPathway}\n                />\n              </div>\n              {selectPathway ? (\n                <PathwaysList\n                  evaluatedPathways={evaluatedPathways}\n                  callback={setEvaluatedPathwayCallback}\n                  service={service}\n                ></PathwaysList>\n              ) : (\n                <PatientView evaluatedPathway={currentPathway} />\n              )}\n            </NoteDataProvider>\n          </PathwayProvider>\n        </PatientRecordsProvider>\n      </PatientProvider>\n    </FHIRClientProvider>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './components/App.tsx';\nimport './styles/index.module.scss';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" render={() => <App demo={false} />}></Route>\n      <Route path=\"/demo\" render={() => <App demo={true} />}></Route>\n    </Switch>\n  </Router>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientSnapshot\":\"PatientSnapshot_patientSnapshot__3bGcm\",\"patientSnapshot__info\":\"PatientSnapshot_patientSnapshot__info__2Ry7e\",\"patientName\":\"PatientSnapshot_patientName__ZClJB\",\"patientSnapshot__photo\":\"PatientSnapshot_patientSnapshot__photo__3XI7U\",\"patientSnapshot__list\":\"PatientSnapshot_patientSnapshot__list__5DVC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"settingsLogo\":\"Header_settingsLogo__z_SWy\",\"headerRight\":\"Header_headerRight__2f-DD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigation__back\":\"Navigation_navigation__back__2cVZ2\",\"navigation__leftPanel\":\"Navigation_navigation__leftPanel__QjHPF\",\"navigation__rightPanel\":\"Navigation_navigation__rightPanel__1FRD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"triggerContainer\":\"withConfirmationPopup_triggerContainer__3AU8B\",\"withConfirmationPopup\":\"withConfirmationPopup_withConfirmationPopup__2V1qn\",\"popupContent\":\"withConfirmationPopup_popupContent__3ksQD\",\"selectButton\":\"withConfirmationPopup_selectButton__1e5Z2\",\"accept\":\"withConfirmationPopup_accept__X2X4A\",\"decline\":\"withConfirmationPopup_decline__18Klm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\",\"arrowOnPatientPath\":\"Arrow_arrowOnPatientPath__1r5CB\"};","var map = {\n\t\"./alert\": 288,\n\t\"./alert.js\": 288,\n\t\"./alert.js.map\": 1025,\n\t\"./allergyintolerance\": 289,\n\t\"./allergyintolerance.js\": 289,\n\t\"./allergyintolerance.js.map\": 1026,\n\t\"./appointment\": 290,\n\t\"./appointment.js\": 290,\n\t\"./appointment.js.map\": 1027,\n\t\"./appointmentresponse\": 291,\n\t\"./appointmentresponse.js\": 291,\n\t\"./appointmentresponse.js.map\": 1028,\n\t\"./availability\": 292,\n\t\"./availability.js\": 292,\n\t\"./availability.js.map\": 1029,\n\t\"./basic\": 293,\n\t\"./basic.js\": 293,\n\t\"./basic.js.map\": 1030,\n\t\"./binary\": 294,\n\t\"./binary.js\": 294,\n\t\"./binary.js.map\": 1031,\n\t\"./bundle\": 295,\n\t\"./bundle.js\": 295,\n\t\"./bundle.js.map\": 1032,\n\t\"./careplan\": 296,\n\t\"./careplan.js\": 296,\n\t\"./careplan.js.map\": 1033,\n\t\"./claimresponse\": 297,\n\t\"./claimresponse.js\": 297,\n\t\"./claimresponse.js.map\": 1034,\n\t\"./communicationrequest\": 298,\n\t\"./communicationrequest.js\": 298,\n\t\"./communicationrequest.js.map\": 1035,\n\t\"./composition\": 299,\n\t\"./composition.js\": 299,\n\t\"./composition.js.map\": 1036,\n\t\"./conceptmap\": 300,\n\t\"./conceptmap.js\": 300,\n\t\"./conceptmap.js.map\": 1037,\n\t\"./condition\": 301,\n\t\"./condition.js\": 301,\n\t\"./condition.js.map\": 1038,\n\t\"./conformance\": 302,\n\t\"./conformance.js\": 302,\n\t\"./conformance.js.map\": 1039,\n\t\"./contract\": 303,\n\t\"./contract.js\": 303,\n\t\"./contract.js.map\": 1040,\n\t\"./contraindication\": 304,\n\t\"./contraindication.js\": 304,\n\t\"./contraindication.js.map\": 1041,\n\t\"./core\": 4,\n\t\"./core.js\": 4,\n\t\"./core.js.map\": 1042,\n\t\"./coverage\": 305,\n\t\"./coverage.js\": 305,\n\t\"./coverage.js.map\": 1043,\n\t\"./dataelement\": 306,\n\t\"./dataelement.js\": 306,\n\t\"./dataelement.js.map\": 1044,\n\t\"./device\": 307,\n\t\"./device.js\": 307,\n\t\"./device.js.map\": 1045,\n\t\"./devicecomponent\": 308,\n\t\"./devicecomponent.js\": 308,\n\t\"./devicecomponent.js.map\": 1046,\n\t\"./deviceuserequest\": 309,\n\t\"./deviceuserequest.js\": 309,\n\t\"./deviceuserequest.js.map\": 1047,\n\t\"./deviceusestatement\": 310,\n\t\"./deviceusestatement.js\": 310,\n\t\"./deviceusestatement.js.map\": 1048,\n\t\"./diagnosticorder\": 311,\n\t\"./diagnosticorder.js\": 311,\n\t\"./diagnosticorder.js.map\": 1049,\n\t\"./diagnosticreport\": 312,\n\t\"./diagnosticreport.js\": 312,\n\t\"./diagnosticreport.js.map\": 1050,\n\t\"./documentmanifest\": 313,\n\t\"./documentmanifest.js\": 313,\n\t\"./documentmanifest.js.map\": 1051,\n\t\"./documentreference\": 314,\n\t\"./documentreference.js\": 314,\n\t\"./documentreference.js.map\": 1052,\n\t\"./eligibility\": 315,\n\t\"./eligibility.js\": 315,\n\t\"./eligibility.js.map\": 1053,\n\t\"./eligibilityresponse\": 316,\n\t\"./eligibilityresponse.js\": 316,\n\t\"./eligibilityresponse.js.map\": 1054,\n\t\"./encounter\": 317,\n\t\"./encounter.js\": 317,\n\t\"./encounter.js.map\": 1055,\n\t\"./enrollment\": 318,\n\t\"./enrollment.js\": 318,\n\t\"./enrollment.js.map\": 1056,\n\t\"./enrollmentresponse\": 319,\n\t\"./enrollmentresponse.js\": 319,\n\t\"./enrollmentresponse.js.map\": 1057,\n\t\"./explanationofbenefit\": 320,\n\t\"./explanationofbenefit.js\": 320,\n\t\"./explanationofbenefit.js.map\": 1058,\n\t\"./extensiondefinition\": 321,\n\t\"./extensiondefinition.js\": 321,\n\t\"./extensiondefinition.js.map\": 1059,\n\t\"./familyhistory\": 322,\n\t\"./familyhistory.js\": 322,\n\t\"./familyhistory.js.map\": 1060,\n\t\"./group\": 323,\n\t\"./group.js\": 323,\n\t\"./group.js.map\": 1061,\n\t\"./healthcareservice\": 324,\n\t\"./healthcareservice.js\": 324,\n\t\"./healthcareservice.js.map\": 1062,\n\t\"./imagingobjectselection\": 325,\n\t\"./imagingobjectselection.js\": 325,\n\t\"./imagingobjectselection.js.map\": 1063,\n\t\"./imagingstudy\": 326,\n\t\"./imagingstudy.js\": 326,\n\t\"./imagingstudy.js.map\": 1064,\n\t\"./immunization\": 327,\n\t\"./immunization.js\": 327,\n\t\"./immunization.js.map\": 1065,\n\t\"./immunizationrecommendation\": 328,\n\t\"./immunizationrecommendation.js\": 328,\n\t\"./immunizationrecommendation.js.map\": 1066,\n\t\"./list\": 329,\n\t\"./list.js\": 329,\n\t\"./list.js.map\": 1067,\n\t\"./location\": 330,\n\t\"./location.js\": 330,\n\t\"./location.js.map\": 1068,\n\t\"./media\": 331,\n\t\"./media.js\": 331,\n\t\"./media.js.map\": 1069,\n\t\"./medication\": 332,\n\t\"./medication.js\": 332,\n\t\"./medication.js.map\": 1070,\n\t\"./medicationadministration\": 333,\n\t\"./medicationadministration.js\": 333,\n\t\"./medicationadministration.js.map\": 1071,\n\t\"./medicationdispense\": 334,\n\t\"./medicationdispense.js\": 334,\n\t\"./medicationdispense.js.map\": 1072,\n\t\"./medicationprescription\": 335,\n\t\"./medicationprescription.js\": 335,\n\t\"./medicationprescription.js.map\": 1073,\n\t\"./medicationstatement\": 336,\n\t\"./medicationstatement.js\": 336,\n\t\"./medicationstatement.js.map\": 1074,\n\t\"./messageheader\": 337,\n\t\"./messageheader.js\": 337,\n\t\"./messageheader.js.map\": 1075,\n\t\"./models\": 286,\n\t\"./models.js\": 286,\n\t\"./models.js.map\": 1076,\n\t\"./namingsystem\": 338,\n\t\"./namingsystem.js\": 338,\n\t\"./namingsystem.js.map\": 1077,\n\t\"./nutritionorder\": 339,\n\t\"./nutritionorder.js\": 339,\n\t\"./nutritionorder.js.map\": 1078,\n\t\"./observation\": 340,\n\t\"./observation.js\": 340,\n\t\"./observation.js.map\": 1079,\n\t\"./operationdefinition\": 341,\n\t\"./operationdefinition.js\": 341,\n\t\"./operationdefinition.js.map\": 1080,\n\t\"./operationoutcome\": 342,\n\t\"./operationoutcome.js\": 342,\n\t\"./operationoutcome.js.map\": 1081,\n\t\"./oralhealthclaim\": 343,\n\t\"./oralhealthclaim.js\": 343,\n\t\"./oralhealthclaim.js.map\": 1082,\n\t\"./order\": 344,\n\t\"./order.js\": 344,\n\t\"./order.js.map\": 1083,\n\t\"./orderresponse\": 345,\n\t\"./orderresponse.js\": 345,\n\t\"./orderresponse.js.map\": 1084,\n\t\"./organization\": 346,\n\t\"./organization.js\": 346,\n\t\"./organization.js.map\": 1085,\n\t\"./other\": 347,\n\t\"./other.js\": 347,\n\t\"./other.js.map\": 1086,\n\t\"./patient\": 348,\n\t\"./patient.js\": 348,\n\t\"./patient.js.map\": 1087,\n\t\"./paymentnotice\": 349,\n\t\"./paymentnotice.js\": 349,\n\t\"./paymentnotice.js.map\": 1088,\n\t\"./paymentreconciliation\": 350,\n\t\"./paymentreconciliation.js\": 350,\n\t\"./paymentreconciliation.js.map\": 1089,\n\t\"./pendedrequest\": 351,\n\t\"./pendedrequest.js\": 351,\n\t\"./pendedrequest.js.map\": 1090,\n\t\"./practitioner\": 352,\n\t\"./practitioner.js\": 352,\n\t\"./practitioner.js.map\": 1091,\n\t\"./procedure\": 353,\n\t\"./procedure.js\": 353,\n\t\"./procedure.js.map\": 1092,\n\t\"./procedurerequest\": 354,\n\t\"./procedurerequest.js\": 354,\n\t\"./procedurerequest.js.map\": 1093,\n\t\"./profile\": 355,\n\t\"./profile.js\": 355,\n\t\"./profile.js.map\": 1094,\n\t\"./provenance\": 356,\n\t\"./provenance.js\": 356,\n\t\"./provenance.js.map\": 1095,\n\t\"./query\": 357,\n\t\"./query.js\": 357,\n\t\"./query.js.map\": 1096,\n\t\"./questionnaire\": 358,\n\t\"./questionnaire.js\": 358,\n\t\"./questionnaire.js.map\": 1097,\n\t\"./questionnaireanswers\": 359,\n\t\"./questionnaireanswers.js\": 359,\n\t\"./questionnaireanswers.js.map\": 1098,\n\t\"./readjudicate\": 360,\n\t\"./readjudicate.js\": 360,\n\t\"./readjudicate.js.map\": 1099,\n\t\"./referralrequest\": 361,\n\t\"./referralrequest.js\": 361,\n\t\"./referralrequest.js.map\": 1100,\n\t\"./relatedperson\": 362,\n\t\"./relatedperson.js\": 362,\n\t\"./relatedperson.js.map\": 1101,\n\t\"./reversal\": 363,\n\t\"./reversal.js\": 363,\n\t\"./reversal.js.map\": 1102,\n\t\"./riskassessment\": 364,\n\t\"./riskassessment.js\": 364,\n\t\"./riskassessment.js.map\": 1103,\n\t\"./searchparameter\": 365,\n\t\"./searchparameter.js\": 365,\n\t\"./searchparameter.js.map\": 1104,\n\t\"./securityevent\": 366,\n\t\"./securityevent.js\": 366,\n\t\"./securityevent.js.map\": 1105,\n\t\"./slot\": 367,\n\t\"./slot.js\": 367,\n\t\"./slot.js.map\": 1106,\n\t\"./specimen\": 368,\n\t\"./specimen.js\": 368,\n\t\"./specimen.js.map\": 1107,\n\t\"./statusrequest\": 369,\n\t\"./statusrequest.js\": 369,\n\t\"./statusrequest.js.map\": 1108,\n\t\"./statusresponse\": 370,\n\t\"./statusresponse.js\": 370,\n\t\"./statusresponse.js.map\": 1109,\n\t\"./subscription\": 371,\n\t\"./subscription.js\": 371,\n\t\"./subscription.js.map\": 1110,\n\t\"./substance\": 372,\n\t\"./substance.js\": 372,\n\t\"./substance.js.map\": 1111,\n\t\"./supply\": 373,\n\t\"./supply.js\": 373,\n\t\"./supply.js.map\": 1112,\n\t\"./supportingdocumentation\": 374,\n\t\"./supportingdocumentation.js\": 374,\n\t\"./supportingdocumentation.js.map\": 1113,\n\t\"./valueset\": 375,\n\t\"./valueset.js\": 375,\n\t\"./valueset.js.map\": 1114\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 287;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathways_list\":\"PathwaysList_pathways_list__2WO5g\",\"header_title\":\"PathwaysList_header_title__7EM8s\",\"header_title__header\":\"PathwaysList_header_title__header__36yqh\",\"header_title__note\":\"PathwaysList_header_title__note__34zC8\",\"container\":\"PathwaysList_container__1SC5K\",\"pathwayElement\":\"PathwaysList_pathwayElement__34hJh\",\"title\":\"PathwaysList_title__ccVmw\",\"numElements\":\"PathwaysList_numElements__1WAOk\",\"expand\":\"PathwaysList_expand__2v9Wx\",\"infoContainer\":\"PathwaysList_infoContainer__2q0Tn\",\"details\":\"PathwaysList_details__2kSzT\",\"pathway\":\"PathwaysList_pathway__1vqM1\",\"matchingElement\":\"PathwaysList_matchingElement__1SQoM\",\"controls\":\"PathwaysList_controls__vZmz8\",\"matchedElementsLabel\":\"PathwaysList_matchedElementsLabel__3cXeX\",\"pathwayListHeaderContainer\":\"PathwaysList_pathwayListHeaderContainer__2l2fi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expanded\":\"styles_expanded__XNUv-\",\"expandedNode\":\"styles_expandedNode__26Fy8\",\"nodeTitle\":\"styles_nodeTitle__5mm8f\",\"iconAndLabel\":\"styles_iconAndLabel__2LOTu\",\"statusIcon\":\"styles_statusIcon__2jDwI\",\"button\":\"styles_button__1AUjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"onPatientPath\":\"Node_onPatientPath__3LPjE\",\"actionable\":\"Node_actionable__bHXKd\",\"notOnPatientPath\":\"Node_notOnPatientPath__24OpF\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childOnPatientPath\":\"Node_childOnPatientPath__28UD6\",\"childActionable\":\"Node_childActionable__SwUjD\",\"childNotOnPatientPath\":\"Node_childNotOnPatientPath__2j4QB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};"],"sourceRoot":""}