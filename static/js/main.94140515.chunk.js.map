{"version":3,"sources":["utils/ConfigManager.js","components/MissingDataPopup/MissingDataPopup.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/FHIRClient.tsx","components/PatientProvider.tsx","components/PatientSnapshot/PatientSnapshot.tsx","components/DropDown/DropDown.tsx","components/PathwayProvider.tsx","components/Navigation/Navigation.tsx","utils/patient.js","utils/fhirExtract.js","components/PatientRecordsProvider.tsx","components/PatientRecord/PatientRecord.tsx","utils/fhirUtils.ts","components/NoteDataProvider.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","components/withConfirmationPopup/withConfirmationPopup.tsx","components/ConfirmedActionButton/ConfirmedActionButton.ts","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","engine/cql-extractor.ts","utils/regexes.ts","engine/cql-to-elm.ts","engine/elm-executor.ts","engine/output-results.ts","engine/evaluate-patient.ts","components/Graph/Graph.tsx","components/PathwaysList/PathwaysList.tsx","components/PathwaysService/PathwaysService.tsx","utils/MockedFHIRClient.ts","components/App.tsx","index.js","components/PatientSnapshot/PatientSnapshot.module.scss","components/Navigation/Navigation.module.scss","components/ActionButton/ActionButton.module.scss","components/withConfirmationPopup/withConfirmationPopup.module.scss","components/Arrow/Arrow.module.scss","../node_modules/cql-execution/lib/fhir sync /^/.//.*$","components/PathwaysList/PathwaysList.module.scss","styles/index.module.scss","components/DropDown/DropDown.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Node/Node.module.scss","components/ExpandedNode/ExpandedNode.module.scss"],"names":["config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","module","exports","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","green","typography","fontFamily","theme","createMuiTheme","palette","primary","main","secondary","common","background","default","text","projectorTheme","ThemeContext","createContext","ThemeProvider","children","useState","defaultTheme","setTheme","toggleTheme","useCallback","currentTheme","Provider","Header","props","anchorEl","setAnchorEl","useContext","handleClose","className","styles","header","src","logo","alt","onClick","event","currentTarget","aria-controls","aria-haspopup","icon","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","FHIRClientContext","patient","FHIRClientProvider","client","useFHIRClient","PatientContext","PatientProvider","currentPatient","setCurrentPatient","useEffect","read","then","usePatient","useStyles","makeStyles","color","PatientSnapshot","classes","useMemo","entry","find","n","use","given","join","family","getPatientName","address","city","state","filter","item","getPatientAddress","age","birthDateString","today","Date","birthDate","getFullYear","m","getMonth","getDate","getPatientAge","patientSnapshot","faUserCircle","patientSnapshot__photo","patientSnapshot__info","patientName","clsx","patientSnapshot__list","gender","DropDown","options","label","visible","onChange","selectedValue","setSelectPathway","onChangeCallback","dropdown","htmlFor","classNamePrefix","inputId","aria-label","PathwayContext","evaluatedPathway","setEvaluatedPathway","updateEvaluatedPathways","PathwayProvider","pathwayCtx","usePathwayContext","navigation","backgroundColor","Navigation","evaluatedPathways","selectPathway","onBack","pathway","undefined","pathwayOptions","map","navigation__leftPanel","faChevronLeft","navigation__back","navigation__rightPanel","pathwayOption","ALL_RESOURCES_PATIENT_REFERENCE","mapperName","get","MapperClass","mappers","mapperInstance","applyMapping","bundle","execute","getEverythingManually","supportedResources","push","requests","forEach","resource","request","flat","pageLimit","result","length","catch","error","console","log","Promise","all","results","x","getEverythingRevInclude","onError","query","PatientRecordsContext","patientRecords","setPatientRecords","evaluatePath","setEvaluatePath","PatientRecordsProvider","usePatientRecords","getResourceByType","patientRecord","resourceType","PatientRecord","resources","rows","getHumanName","person","Array","isArray","prefix","suffix","createDocumentReference","data","labelOrCondition","v1","meta","lastUpdated","getCurrentTime","status","subject","reference","identifier","system","btoa","content","attachment","contentType","type","coding","code","display","indexed","createNoteContent","note","notes","pathwayState","treatment","action","description","node","tnm","record","profile","elements","includes","obs","valueCodeableConcept","mcodeElements","some","index","findIndex","toString","now","withLeadingZero","getDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","NoteContext","NoteDataProvider","date","physician","toDateString","birthdate","useNote","Object","keys","element","graphLayoutProvider","layout","nodeDimensions","nodeNames","states","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","stateName","nodeDimension","setNode","width","height","transitions","transition","condition","setEdge","nodeCoordinates","startNodeShift","nodeName","y","edges","e","edge","edgeName","v","w","start","end","points","p","layoutDagre","START","nodes","rank","NaN","horizontalPosition","parents","canMove","initializeNodes","graph","HORIZONTAL_OFFSET","NODE_WIDTH","VERTICAL_OFFSET","NODE_HEIGHT","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","parentsOnHigherRank","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","setOpen","Popup","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","largeActionButton","indexStyles","button","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","data-testid","faCheck","faTimes","ActionButton","size","PopupContent","values","showCheck","setShowCheck","selected","setSelected","popupContent","key","popupChoice","footer","documentReference","create","MissingDataPopup","missingDataPopup","popupTrigger","faEdit","externalLink","onConfirm","ConfirmedActionButton","WrappedComponent","wrappedProps","withConfirmationPopup","triggerContainer","isGuidanceState","ExpandedNodeField","title","descTitle","desc","StatusField","documentation","rawDate","toLocaleString","ExpandedNode","isActionable","isGuidance","comments","setComments","guidance","medicationCodeableConcept","returnElements","href","target","rel","faExternalLinkAlt","procedure","performedPeriod","performedDateTime","renderGuidance","branch","observation","valueCoding","effectiveDateTime","identifierArray","documentReferenceIdentifier","atob","arr","renderBranch","defaultText","newPatientRecords","pathwayResource","patientId","resourceProperties","intent","authoredOn","toISOString","Error","translatePathwayRecommendation","expandedNode","infoTable","commentsForm","defaultTextButton","preventDefault","borderColor","Node","forwardRef","ref","isOnPatientPath","isCurrentNode","xCoordinate","yCoordinate","expanded","onClickHandler","style","top","left","backgroundColorClass","onPatientPath","notOnPatientPath","topLevelClasses","expandedNodeClass","nodeStyles","actionable","childActionable","childOnPatientPath","childNotOnPatientPath","isAccepted","nodeTitle","clickable","iconAndLabel","accepted","NodeIcon","faMicroscope","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faCapsules","faSyringe","StatusIcon","faCheckCircle","faTimesCircle","statusIcon","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","fill","markerEnd","Arrow","arrowOnPatientPath","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","getFixture","filename","fetch","cql","cqlFormat","cqlBlock","resourceName","concat","cqlAdd","isConditional","extractMultipartBoundary","extractMultipartFileName","extractJSONContent","extractCQLInclude","url","executeElm","elm","libraries","lib","Library","Repository","executor","Executor","psource","PatientSource","FHIRv400","loadBundles","exec","nextStateRecommendation","conditionDescription","formatDocumentation","formatNextState","currentState","nextState","patientData","currentStateName","retrieveNote","doc","documentationResource","getConditionalNextState","retrieveResource","evaluatePatientOnPathway","library","extractNavigationCQL","processCQLCommon","currentStatus","patientDocumentation","stateData","Patient","nextRecommendation","path","pathwayData","evaluatePathwayCriteria","criteria","elementName","extractCriteriaCQL","resultItems","matches","evaluationResult","actual","match","criteriaResultItem","expected","pathwayName","criteriaResultItems","criteriaData","resolve","reject","setTimeout","FHIRHelpers","gatherCQL","formdata","FormData","append","method","body","headers","boundary","obj","oldArray","line","elmName","JSON","parse","convertCQL","Accept","json","convertBasicCQL","elmResults","patientResults","patientIds","isEdgeOnPatientPath","startIndex","endIndex","interactive","expandCurrentNode","graphElement","useRef","nodeRefs","getWidth","window","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","parentWidth","current","parentElement","clientWidth","pathwayResults","_setPath","setPath","getGraphLayout","nodeElement","from","clientHeight","graphLayout","setLayout","maxHeight","max","minX","min","toAdd","initialExpandedState","curr","_setExpanded","setExpanded","expand","prevState","cancel","r","currentNode","maxWidth","l","overflow","marginRight","docResource","xmlns","zIndex","PathwaysListElement","callback","isVisible","setIsVisible","chevron","faChevronUp","faChevronDown","pathwayElement","role","numElements","infoContainer","details","matchingElement","controls","faPlus","faMinus","PathwaysList","service","setCriteria","criteriaPromises","criteriaResults","sort","pathways_list","container","pathwayListHeaderContainer","header_title","header_title__header","header_title__note","matchedElementsLabel","faCaretDown","useGetPathwaysService","setResult","getPathways","response","listOfFiles","f","typedFetch","listOfPromises","pathwaysList","payload","MockedFHIRClient","App","demo","_setPatientRecords","currentPathway","setCurrentPathway","setEvaluatedPathways","setClient","user","setUser","demoRecords","FHIR","oauth2","init","clientId","scope","statement","rest","operation","definition","getEverything","revIncludeResources","searchRevInclude","searchInclude","filters","searchParam","searchParams","getPatientRecord","records","every","setEvaluatedPathwayCallback","scrollTo","newList","rootElement","document","getElementById","ReactDOM","render","exact","webpackContext","req","webpackContextResolve","__webpack_require__","o"],"mappings":"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SAjCgB,SAAC8B,GACD,OAAlBA,GAA0B,UAAWA,GACvChB,EAAWH,oBAAoBmB,EAActJ,a,kBCvC7CuJ,EAAkC,CACtC,0BACA,2BACA,eACA,kBACA,4BACA,0BACA,yBACA,mBACA,uBACA,8BACA,oBACA,wBACA,6BACA,mBACA,wBACA,oBACA,eACA,uBACA,6BACA,2BACA,eACA,sBACA,2BACA,yBACA,oBACA,sBACA,wBACA,yBACA,6BACA,6BACA,eACA,iBACA,eACA,aACA,aACA,gBACA,0BACA,mBACA,mBACA,8BACA,gCACA,+BACA,iCACA,gCACA,mBACA,iBACA,yBACA,0BACA,6BACA,uBACA,2BACA,uBACA,0BACA,wBACA,0BACA,4BACA,gCACA,+BACA,gCACA,+BACA,oBACA,wBACA,qBACA,mBACA,0BACA,2BACA,4BACA,6BACA,4BACA,oBACA,sBACA,2BACA,6BACA,8BACA,4BACA,6BACA,iBACA,cACA,yBACA,wBACA,eACA,sBACA,wBACA,sBACA,6BACA,8BACA,4BACA,8BACA,6BACA,8BACA,+BACA,mCACA,4BACA,mCACA,8BACA,6BACA,qCACA,gBACA,gBACA,wBACA,oBACA,sBACA,uBACA,qBACA,sBACA,eACA,YACA,cACA,oBACA,sBACA,uBACA,sBACA,qBACA,+BACA,qCACA,yBACA,2BACA,2BACA,eACA,eACA,eACA,cACA,+BACA,6BACA,4BACA,4BACA,oBACA,6BACA,4BACA,gCACA,2BACA,2BACA,+BACA,+BACA,6BACA,2BACA,0BACA,6BACA,wBACA,6BACA,0BACA,yBACA,iBACA,2BACA,sBACA,yBACA,iBACA,sBACA,uBACA,mBACA,kBACA,mBACA,iBACA,eACA,oBACA,gBACA,oBACA,4BACA,qBACA,sBACA,oBACA,qBACA,uBACA,+BACA,8BACA,iCACA,iCACA,+BACA,gCACA,wBACA,0BACA,uBACA,wBACA,wBACA,yBACA,6BACA,wBACA,cACA,gBACA,qBACA,qBACA,+BACA,qBACA,mBACA,uBACA,qBACA,mBACA,mBAC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","file":"static/js/main.94140515.chunk.js","sourcesContent":["export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily:\n    \"'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n};\n\nconst theme = createMuiTheme({\n  typography: { ...typography },\n  palette: {\n    primary: {\n      main: colors.blue\n    },\n    secondary: {\n      main: colors.red\n    },\n    common: colors,\n    background: {\n      default: colors.grayLighter\n    },\n    text: {\n      primary: colors.gray,\n      secondary: colors.gray\n    }\n  }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: {\n    primary: {\n      main: colors.blue\n    },\n    secondary: {\n      main: colors.red\n    },\n    common: colors,\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }\n});\n\nexport default theme;\nexport { theme, projectorTheme };\n","import React, { FC, createContext, useState, useCallback, useContext, ReactNode } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { theme as defaultTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContext = createContext(() => {\n  // this comment does nothing but make eslint happy :)\n});\nexport const useThemeToggle = (): (() => void) => useContext(ThemeContext);\n\nconst ThemeProvider: FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setTheme] = useState(defaultTheme);\n  const toggleTheme = useCallback(() => {\n    setTheme(currentTheme => (currentTheme === defaultTheme ? projectorTheme : defaultTheme));\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ThemeContext.Provider value={toggleTheme}>{children}</ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { FC, useState, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport styles from './Header.module.scss';\n\ninterface HeaderProps {\n  logo: string;\n}\n\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleToggleTheme = (): void => {\n    toggleTheme();\n    handleClose();\n  };\n\n  return (\n    <header className={styles.header}>\n      <img src={props.logo} alt=\"logo\" />\n      <button onClick={handleClick} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwaysClient } from 'pathways-client';\n\ninterface FHIRClientProviderProps {\n  client: PathwaysClient; // TODO: fhirclient.Client\n  children: ReactNode;\n}\n\nexport const FHIRClientContext = createContext({ patient: {} });\n\nexport const FHIRClientProvider: FC<FHIRClientProviderProps> = ({ client, children }) => (\n  <FHIRClientContext.Provider value={client}>{children}</FHIRClientContext.Provider>\n);\n\nexport const useFHIRClient = (): PathwaysClient => useContext(FHIRClientContext);\n","import React, { FC, createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { useFHIRClient } from './FHIRClient';\nimport { Patient } from 'fhir-objects';\ninterface PatientProviderProps {\n  children: ReactNode;\n  patient?: Patient | null;\n}\n\nexport const PatientContext = createContext<Patient | null>(null);\n\nexport const PatientProvider: FC<PatientProviderProps> = ({ children, patient }) => {\n  const client = useFHIRClient();\n  const [currentPatient, setCurrentPatient] = useState<Patient | null>(patient || null);\n\n  useEffect(() => {\n    client?.patient?.read?.().then((patient: Patient) => setCurrentPatient(patient));\n  }, [client]);\n\n  return currentPatient == null ? (\n    <div>Loading...</div>\n  ) : (\n    <PatientContext.Provider value={currentPatient}>{children}</PatientContext.Provider>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const usePatient = (): Patient => useContext(PatientContext)!;\n","import React, { FC, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { HumanName, Address } from 'fhir-objects';\n\nimport { usePatient } from '../PatientProvider';\nimport styles from './PatientSnapshot.module.scss';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'patient-snapshot-list': {\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'PatientSnapshot' }\n);\n\nconst getPatientName = (name: Array<HumanName> = []): string => {\n  const entry = name.find(n => n.use === 'official') || name[0];\n  return entry ? `${(entry.given || []).join(' ')} ${entry.family}` : 'No name';\n};\n\nconst getPatientAge = (birthDateString: string | undefined): number => {\n  if (!birthDateString) return 0;\n  const today = new Date();\n  const birthDate = new Date(birthDateString);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n\nconst getPatientAddress = (address: Array<Address> = []): string => {\n  const entry = address[0];\n  return entry ? [entry.city, entry.state].filter(item => !!item).join(', ') : 'No Address';\n};\n\nconst PatientSnapshot: FC<{}> = () => {\n  const classes = useStyles();\n  const patient = usePatient();\n  const name = useMemo(() => getPatientName(patient.name), [patient]);\n  const address = useMemo(() => getPatientAddress(patient.address), [patient]);\n  const age = useMemo(() => getPatientAge(patient.birthDate), [patient]);\n\n  return (\n    <div className={styles.patientSnapshot}>\n      <FontAwesomeIcon icon={faUserCircle} className={styles.patientSnapshot__photo} />\n\n      <div className={styles.patientSnapshot__info}>\n        <div className={styles.patientName}>{name}</div>\n\n        <ul className={clsx(styles.patientSnapshot__list, classes['patient-snapshot-list'])}>\n          <li>\n            DOB: {patient.birthDate} (Age: {age})\n          </li>\n          <li>Admin. Sex: {patient.gender}</li>\n          <li>Location: {address}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientSnapshot;\n","import React, { FC, useCallback } from 'react';\nimport Select from 'react-select';\n\nimport styles from './DropDown.module.scss';\nimport { Option } from 'option';\n\ninterface Props {\n  label?: string;\n  id: string;\n  visible: boolean;\n  options: Array<Option>;\n  onChange?: (value: Option | ReadonlyArray<Option> | null) => void;\n  selectedValue: Option | ReadonlyArray<Option> | null;\n  setSelectPathway: (flag: boolean) => void;\n}\n\nconst DropDown: FC<Props> = ({\n  options,\n  label,\n  id,\n  visible,\n  onChange,\n  selectedValue,\n  setSelectPathway\n}: Props) => {\n  const onChangeCallback = useCallback(\n    (value: Option | ReadonlyArray<Option> | null | undefined) => {\n      if (onChange) onChange(value == null ? null : value);\n    },\n    [onChange]\n  );\n\n  if (visible)\n    return (\n      <div className={styles.dropdown}>\n        <div>\n          <label htmlFor={id}>{label}</label>\n          <button\n            onClick={(): void => {\n              setSelectPathway(true);\n            }}\n          >\n            Explore Pathways\n          </button>\n        </div>\n        <Select\n          classNamePrefix=\"DropDown\"\n          inputId={id}\n          value={selectedValue}\n          onChange={onChangeCallback}\n          options={options}\n          aria-label={label}\n        />\n      </div>\n    );\n  else return <div></div>;\n};\n\nexport default DropDown;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwayContextInterface } from 'pathways-model';\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n  pathwayCtx: PathwayContextInterface;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({\n  evaluatedPathway: null,\n  setEvaluatedPathway: () => {\n    //do nothing\n  },\n  updateEvaluatedPathways: () => {\n    //do nothing\n  }\n});\n\nexport const PathwayProvider: FC<PathwayProviderProps> = ({ children, pathwayCtx }) => {\n  return <PathwayContext.Provider value={pathwayCtx}>{children}</PathwayContext.Provider>;\n};\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport PatientSnapshot from 'components/PatientSnapshot';\nimport DropDown from 'components/DropDown';\nimport styles from './Navigation.module.scss';\nimport { EvaluatedPathway } from 'pathways-model';\nimport { Option } from 'option';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst useStyles = makeStyles(\n  theme => ({\n    navigation: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'Navigation' }\n);\n\ninterface Props {\n  evaluatedPathways: EvaluatedPathway[];\n  selectPathway: boolean;\n  setSelectPathway: (flag: boolean) => void;\n  onBack?: () => void;\n}\n\nconst Navigation: FC<Props> = ({ evaluatedPathways, selectPathway, setSelectPathway, onBack }) => {\n  const classes = useStyles();\n  const pathwayCtx = usePathwayContext();\n  const pathway = pathwayCtx.evaluatedPathway?.pathway;\n  const value =\n    pathway === undefined ? null : { label: pathway.name, value: pathwayCtx.evaluatedPathway };\n\n  const onChangeHandler = (pathwayOption: Option | ReadonlyArray<Option> | null): void => {\n    if (pathwayOption !== null && 'value' in pathwayOption) {\n      pathwayCtx.setEvaluatedPathway(pathwayOption.value);\n    }\n  };\n\n  const pathwayOptions = evaluatedPathways.map(evaluatedPathway => ({\n    label: evaluatedPathway.pathway.name,\n    value: evaluatedPathway\n  }));\n\n  return (\n    <nav className={clsx(styles.navigation, classes.navigation)}>\n      <div className={styles.navigation__leftPanel}>\n        {onBack && (\n          <FontAwesomeIcon\n            icon={faChevronLeft}\n            className={styles.navigation__back}\n            onClick={onBack}\n          />\n        )}\n\n        <PatientSnapshot />\n      </div>\n\n      <div className={styles.navigation__rightPanel}>\n        <DropDown\n          label=\"Pathway:\"\n          id=\"patient-view\"\n          visible={!selectPathway}\n          options={pathwayOptions}\n          selectedValue={value}\n          setSelectPathway={setSelectPathway}\n          onChange={onChangeHandler}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","const ALL_RESOURCES_PATIENT_REFERENCE = [\n  'ReferralRequest:patient',\n  'DocumentManifest:patient',\n  'Goal:patient',\n  'Consent:patient',\n  'DocumentReference:patient',\n  'ImagingManifest:patient',\n  'RiskAssessment:patient',\n  'CareTeam:patient',\n  'ImagingStudy:patient',\n  'FamilyMemberHistory:patient',\n  'Encounter:patient',\n  'DeviceRequest:patient',\n  'AllergyIntolerance:patient',\n  'CarePlan:patient',\n  'EpisodeOfCare:patient',\n  'Procedure:patient',\n  'List:patient',\n  'Immunization:patient',\n  'VisionPrescription:patient',\n  'ProcedureRequest:patient',\n  'Flag:patient',\n  'Observation:patient',\n  'DiagnosticReport:patient',\n  'NutritionOrder:patient',\n  'Condition:patient',\n  'Composition:patient',\n  'DetectedIssue:patient',\n  'SupplyDelivery:patient',\n  'ClinicalImpression:patient',\n  'DeviceUseStatement:patient',\n  'Task:subject',\n  'Task:requester',\n  'Task:patient',\n  'Task:owner',\n  'Task:focus',\n  'Task:based-on',\n  'SupplyRequest:requester',\n  'Specimen:subject',\n  'Specimen:patient',\n  'ServiceDefinition:successor',\n  'ServiceDefinition:predecessor',\n  'ServiceDefinition:depends-on',\n  'ServiceDefinition:derived-from',\n  'ServiceDefinition:composed-of',\n  'Sequence:patient',\n  'Schedule:actor',\n  'RiskAssessment:subject',\n  'ResearchSubject:patient',\n  'ResearchSubject:individual',\n  'RequestGroup:subject',\n  'RequestGroup:participant',\n  'RequestGroup:patient',\n  'RequestGroup:definition',\n  'RelatedPerson:patient',\n  'ReferralRequest:subject',\n  'ReferralRequest:requester',\n  'QuestionnaireResponse:subject',\n  'QuestionnaireResponse:source',\n  'QuestionnaireResponse:patient',\n  'QuestionnaireResponse:author',\n  'Provenance:target',\n  'Provenance:entity-ref',\n  'Provenance:patient',\n  'Provenance:agent',\n  'ProcessResponse:request',\n  'ProcedureRequest:subject',\n  'ProcedureRequest:replaces',\n  'ProcedureRequest:performer',\n  'ProcedureRequest:based-on',\n  'Procedure:subject',\n  'Procedure:performer',\n  'PlanDefinition:successor',\n  'PlanDefinition:predecessor',\n  'PlanDefinition:derived-from',\n  'PlanDefinition:depends-on',\n  'PlanDefinition:composed-of',\n  'Person:patient',\n  'Person:link',\n  'PaymentNotice:response',\n  'PaymentNotice:request',\n  'Patient:link',\n  'Observation:subject',\n  'Observation:performer',\n  'MessageHeader:focus',\n  'MedicationStatement:source',\n  'MedicationStatement:subject',\n  'MedicationRequest:subject',\n  'MedicationRequest:requester',\n  'MedicationDispense:subject',\n  'MedicationDispense:receiver',\n  'MedicationDispense:performer',\n  'MedicationAdministration:subject',\n  'MedicationRequest:patient',\n  'MedicationAdministration:patient',\n  'MedicationStatement:patient',\n  'MedicationDispense:patient',\n  'MedicationAdministration:performer',\n  'Media:subject',\n  'Media:patient',\n  'MeasureReport:patient',\n  'Measure:successor',\n  'Measure:predecessor',\n  'Measure:derived-from',\n  'Measure:depends-on',\n  'Measure:composed-of',\n  'List:subject',\n  'List:item',\n  'List:source',\n  'Library:successor',\n  'Library:predecessor',\n  'Library:derived-from',\n  'Library:composed-of',\n  'Library:depends-on',\n  'ImplementationGuide:resource',\n  'ImmunizationRecommendation:patient',\n  'ImagingManifest:author',\n  'GuidanceResponse:subject',\n  'GuidanceResponse:patient',\n  'Group:member',\n  'Goal:subject',\n  'Flag:subject',\n  'Flag:author',\n  'ExplanationOfBenefit:patient',\n  'ExplanationOfBenefit:payee',\n  'EnrollmentRequest:subject',\n  'EnrollmentRequest:patient',\n  'Encounter:subject',\n  'EligibilityRequest:patient',\n  'DocumentReference:subject',\n  'DocumentReference:related-ref',\n  'DocumentReference:author',\n  'DocumentManifest:subject',\n  'DocumentManifest:related-ref',\n  'DocumentManifest:content-ref',\n  'DocumentManifest:recipient',\n  'DiagnosticReport:subject',\n  'DocumentManifest:author',\n  'DeviceUseStatement:subject',\n  'DeviceRequest:subject',\n  'DeviceRequest:priorrequest',\n  'DeviceRequest:performer',\n  'DeviceRequest:based-on',\n  'Device:patient',\n  'DetectedIssue:implicated',\n  'Coverage:subscriber',\n  'Coverage:policy-holder',\n  'Coverage:payor',\n  'Contract:term-topic',\n  'Coverage:beneficiary',\n  'Contract:subject',\n  'Contract:signer',\n  'Contract:patient',\n  'Contract:agent',\n  'Consent:data',\n  'Consent:consentor',\n  'Consent:actor',\n  'Condition:subject',\n  'Condition:evidence-detail',\n  'Condition:asserter',\n  'Composition:subject',\n  'Composition:entry',\n  'Composition:author',\n  'Composition:attester',\n  'CommunicationRequest:subject',\n  'CommunicationRequest:sender',\n  'CommunicationRequest:requester',\n  'CommunicationRequest:recipient',\n  'CommunicationRequest:patient',\n  'CommunicationRequest:based-on',\n  'Communication:subject',\n  'Communication:recipient',\n  'Communication:sender',\n  'Communication:patient',\n  'Communication:part-of',\n  'Communication:based-on',\n  'ClinicalImpression:subject',\n  'ClaimResponse:patient',\n  'Claim:payee',\n  'Claim:patient',\n  'ChargeItem:subject',\n  'ChargeItem:patient',\n  'ChargeItem:participant-actor',\n  'ChargeItem:enterer',\n  'CareTeam:subject',\n  'CareTeam:participant',\n  'CarePlan:performer',\n  'CarePlan:subject',\n  'BodySite:patient',\n  'Basic:subject',\n  'Basic:patient',\n  'Basic:author',\n  'AuditEvent:patient',\n  'AuditEvent:entity',\n  'AuditEvent:agent',\n  'AppointmentResponse:patient',\n  'AppointmentResponse:actor',\n  'Appointment:patient',\n  'Appointment:actor',\n  'AllergyIntolerance:recorder',\n  'AllergyIntolerance:asserter',\n  'AdverseEvent:subject',\n  'AdverseEvent:recorder',\n  'ActivityDefinition:successor',\n  'ActivityDefinition:predecessor',\n  'ActivityDefinition:depends-on',\n  'ActivityDefinition:derived-from',\n  'ActivityDefinition:composed-of',\n  'Account:subject',\n  'Account:patient'\n];\n\nexport { ALL_RESOURCES_PATIENT_REFERENCE };\n","import { ALL_RESOURCES_PATIENT_REFERENCE } from './patient';\n\nimport { mappers } from 'fhir-mapper';\nimport config from './ConfigManager';\n\nconst mapperName = config.get('mapper');\nconst MapperClass = mappers[mapperName];\nconst mapperInstance = MapperClass ? new MapperClass() : null;\n\nconst applyMapping = (bundle) => {\n  if (mapperInstance && bundle)\n  {\n    bundle = mapperInstance.execute(bundle);\n  }\n  return bundle;\n}\n\n/**\n * There are slight discrepencies between the $everything, revinclude, and manual methods that affect the resources that might be returned\n * @param {Object} client - the fhir client\n */\nfunction getPatientRecord(client) {\n  return client.request(`/metadata`).then(statement => {\n    if (\n      statement.rest[0].operation.find(\n        e => (e.definition.reference || e.definition) === 'OperationDefinition/Patient--everything'\n      )\n    ) {\n      // supports patient everything\n      return getEverything(client).then(bundle => applyMapping(bundle));\n    } else {\n      console.log('Cannot use $everything, using reverse includes instead');\n      const supportedResources = [];\n      let revIncludeResources = [];\n      statement.rest[0].resource.forEach(resource => {\n        if (resource.type === 'Patient') {\n          if (resource.searchRevInclude) {\n            revIncludeResources = resource.searchRevInclude;\n          }\n        } else if (resource.searchInclude) {\n          const filters = resource.searchInclude.filter(target => {\n            return target === `${resource.type}:patient` || target === `${resource.type}:subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(filters[0]);\n          }\n        } else if (resource.searchParam) {\n          const filters = resource.searchParams.filter(target => {\n            return target.name === `patient` || target.name === `subject`;\n          });\n          if (filters.length > 0) {\n            supportedResources.push(`${resource.type}:${filters[0].name}`);\n          }\n        }\n      });\n      if (revIncludeResources.length > 0) {\n        return getEverythingRevInclude(client, revIncludeResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else if (supportedResources.length > 0) {\n        return getEverythingRevInclude(client, supportedResources, getEverythingManually).then(bundle => applyMapping(bundle));\n      } else {\n        console.log('Cannot use reverse includes, retrieving all resources manually from predefined list');\n        return getEverythingManually(client, ALL_RESOURCES_PATIENT_REFERENCE).then(bundle => applyMapping(bundle));\n      }\n    }\n  });\n}\n\n/**\n * Uses the $everything operation.  The server takes care of constructing the bundle that gets returned, so\n * it is generally not possible to know how it is deciding what resources to send.\n */\nfunction getEverything(client) {\n  return client.request(`/Patient/${client.patient.id}/$everything`, { flat: true, pageLimit: 0 }).then(bundle => {\n    return bundle;\n  });\n}\n\n/**\n * Uses regular FHIR search queries on every resource that is supported and can refer to a patient.\n * Which resources it queries is dependent on info available in the Capability Statement, and\n * it only provides a one layer deep search, so the results might be different from $everything.\n */\nfunction getEverythingManually(client, supportedResources) {\n  supportedResources.push('Patient:_id');\n  const requests = [];\n  supportedResources.forEach(resource => {\n    resource = resource.split(':');\n    const request = client\n      .request(`${resource[0]}?${resource[1]}=${client.patient.id}`, { flat: true, pageLimit: 0 })\n      .then(result => {\n        if (result.length > 0) {\n          return result;\n        }\n      })\n      .catch(error => {\n        console.log(`failed to fetch ${resource}`);\n        console.error(error);\n      });\n    requests.push(request);\n  });\n\n  return Promise.all(requests).then(results => {\n    const bundle = results\n      .filter(x => {\n        return x;\n      })\n      .flat();\n    return bundle;\n  });\n}\n\n/**\n * Uses the _revinclude FHIR search parameter to request the patient resource and any resource that refers to it.\n * The list of resources it checks is retrieved from the Capability Statement.  It is slightly better than the manual\n * method since it does everything in one request.\n */\nfunction getEverythingRevInclude(client, supportedResources, onError) {\n  const query = supportedResources.join('&_revinclude=');\n  return client\n    .request(`/Patient?_id=${client.patient.id}&_revinclude=${query}`, { flat: true })\n    .then(result => {\n      return result;\n    })\n    .catch(error => {\n      console.log('Reverse Include query failed, manually fetching resources instead.');\n      console.error(error);\n      onError(client, supportedResources);\n    });\n}\n\nexport { getPatientRecord };\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { DomainResource } from 'fhir-objects';\ninterface PatientRecordsProviderProps {\n  children: ReactNode;\n  value: PatientRecordsContextInterface;\n}\n\ninterface PatientRecordsContextInterface {\n  patientRecords: DomainResource[];\n  setPatientRecords: Function;\n  evaluatePath: boolean;\n  setEvaluatePath: (value: boolean) => void;\n}\n\nexport const PatientRecordsContext = createContext<PatientRecordsContextInterface>({\n  patientRecords: [],\n  setPatientRecords: (): void => {\n    return;\n  },\n  evaluatePath: true,\n  setEvaluatePath: (): void => {\n    return;\n  }\n});\n\nexport const PatientRecordsProvider: FC<PatientRecordsProviderProps> = ({ children, value }) => {\n  return <PatientRecordsContext.Provider value={value}>{children}</PatientRecordsContext.Provider>;\n};\n\nexport const usePatientRecords = (): PatientRecordsContextInterface =>\n  useContext(PatientRecordsContext);\n","import React, { FC } from 'react';\nimport { usePatient } from 'components/PatientProvider';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport {\n  AllergiesVisualizer,\n  CarePlansVisualizer,\n  ConditionsVisualizer,\n  EncountersVisualizer,\n  ImmunizationsVisualizer,\n  MedicationsVisualizer,\n  ObservationsVisualizer,\n  PatientVisualizer,\n  ProceduresVisualizer,\n  ReportsVisualizer\n} from 'fhir-visualizers';\nimport { DomainResource } from 'fhir-objects';\nconst getResourceByType = (\n  patientRecord: ReadonlyArray<DomainResource>,\n  resourceType: string\n): ReadonlyArray<object> => {\n  return patientRecord.filter(resource => resource.resourceType === resourceType);\n};\n\nconst PatientRecord: FC = () => {\n  const patient = usePatient();\n  const resources = usePatientRecords().patientRecords;\n\n  return (\n    <div>\n      <PatientVisualizer patient={patient} />\n      <ConditionsVisualizer rows={getResourceByType(resources, 'Condition')} />\n      <ObservationsVisualizer rows={getResourceByType(resources, 'Observation')} />\n      <ReportsVisualizer rows={getResourceByType(resources, 'DiagnosticReport')} />\n      <MedicationsVisualizer rows={getResourceByType(resources, 'MedicationRequest')} />\n      <AllergiesVisualizer rows={getResourceByType(resources, 'AllergyIntolerance')} />\n      <CarePlansVisualizer rows={getResourceByType(resources, 'CarePlan')} />\n      <ProceduresVisualizer rows={getResourceByType(resources, 'Procedure')} />\n      <EncountersVisualizer rows={getResourceByType(resources, 'Encounter')} />\n      <ImmunizationsVisualizer rows={getResourceByType(resources, 'Immunization')} />\n    </div>\n  );\n};\n\nexport default PatientRecord;\n","import { GuidanceState } from 'pathways-model';\nimport { Note, toString } from 'components/NoteDataProvider';\nimport {\n  Patient,\n  DomainResource,\n  HumanName,\n  DocumentReference,\n  Observation,\n  ServiceRequest,\n  MedicationRequest\n} from 'fhir-objects';\nimport { v1 } from 'uuid';\n\n// translates pathway recommendation resource into suitable FHIR resource\nexport function translatePathwayRecommendation(\n  pathwayResource: MedicationRequest | ServiceRequest,\n  patientId: string\n): MedicationRequest | ServiceRequest {\n  const { resourceType } = pathwayResource;\n  const resourceProperties = {\n    id: v1(),\n    resourceType,\n    intent: 'order',\n    subject: { reference: `Patient/${patientId}` },\n    status: 'active',\n    authoredOn: new Date().toISOString(),\n    meta: {\n      lastUpdated: new Date().toISOString()\n    }\n  };\n\n  switch (resourceType) {\n    case 'ServiceRequest': {\n      const { code } = pathwayResource as ServiceRequest;\n      return {\n        ...resourceProperties,\n        code\n      } as ServiceRequest;\n    }\n    case 'MedicationRequest': {\n      const { medicationCodeableConcept } = pathwayResource as MedicationRequest;\n      return {\n        ...resourceProperties,\n        medicationCodeableConcept\n      } as MedicationRequest;\n    }\n    default: {\n      throw Error(`Translation for ${resourceType} not implemented.`);\n    }\n  }\n}\n\nexport function getHumanName(person: HumanName[]): string {\n  let name = '';\n  if (Array.isArray(person)) {\n    name = [\n      person[0]?.prefix?.join(' '),\n      person[0]?.given?.join(' '),\n      person[0]?.family,\n      person[0]?.suffix?.join(' ')\n    ].join(' ');\n  }\n  return name;\n}\n\nexport function createDocumentReference(\n  data: string,\n  labelOrCondition: string,\n  patient: Patient\n): DocumentReference {\n  return {\n    resourceType: 'DocumentReference',\n    id: v1(),\n    meta: {\n      lastUpdated: getCurrentTime()\n    },\n    status: 'current',\n    subject: { reference: `Patient/${patient.id}` },\n    identifier: [\n      {\n        system: 'pathways.documentreference',\n        value: btoa(labelOrCondition)\n      }\n    ],\n    content: [\n      {\n        attachment: {\n          data: btoa(data), // Base 64 encoded data\n          contentType: 'text/plain'\n        }\n      }\n    ],\n    // type and indexed are required in STU3 DocumentReference but not in R4\n    type: {\n      coding: [\n        {\n          system: 'http://loinc.org',\n          code: '34108-1',\n          display: 'Outpatient Note'\n        }\n      ]\n    },\n    indexed: ''\n  };\n}\n\nexport function createNoteContent(\n  note: Note,\n  patientRecords: DomainResource[],\n  status: string,\n  notes: string,\n  pathwayState?: GuidanceState\n): string {\n  note.status = status;\n  note.notes = notes;\n  if (pathwayState) {\n    note.treatment = pathwayState.action[0].description;\n    note.node = pathwayState.label;\n  }\n\n  const tnm: string[] = ['', '', ''];\n  patientRecords.forEach(record => {\n    // TODO: should use code bindings over\n    // profile names.\n    if (record.meta?.profile && record.meta.profile.length) {\n      const elements = [\n        'TNMClinicalPrimaryTumorCategory',\n        'TNMClinicalRegionalNodesCategory',\n        'TNMClinicalDistantMetastasesCategory'\n      ];\n\n      const profile = record.meta.profile[0];\n      if (record.resourceType === 'Observation') {\n        if (profile.includes('TumorMarkerTest') && record.resourceType === 'Observation') {\n          const obs = record as Observation;\n          const value = obs.valueCodeableConcept?.text;\n          const name = obs.code.text;\n          if (value && name) {\n            note.mcodeElements[name] = value;\n          }\n        } else if (\n          elements.some(value => {\n            return profile.includes(value);\n          })\n        ) {\n          const index = elements.findIndex(value => {\n            return profile.includes(value);\n          });\n          if (index > -1) {\n            const obs = record as Observation;\n            const value = obs.valueCodeableConcept?.text;\n            if (value) {\n              tnm[index] = value;\n            }\n          }\n        }\n      }\n    }\n  });\n\n  note.mcodeElements['Clinical TNM'] = tnm.join(' ');\n  return toString(note);\n}\n\nfunction getCurrentTime(): string {\n  const now = new Date();\n  return (\n    now.getFullYear() +\n    '-' +\n    withLeadingZero(now.getMonth()) +\n    '-' +\n    withLeadingZero(now.getDay()) +\n    'T' +\n    withLeadingZero(now.getUTCHours()) +\n    ':' +\n    withLeadingZero(now.getUTCMinutes()) +\n    ':' +\n    withLeadingZero(now.getUTCSeconds()) +\n    '.' +\n    now.getUTCMilliseconds() +\n    '+00:00'\n  );\n}\n\nfunction withLeadingZero(n: number): string {\n  return n < 10 ? '0' + n : n.toString();\n}\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { usePathwayContext } from './PathwayProvider';\nimport { usePatient } from './PatientProvider';\nimport { getHumanName } from 'utils/fhirUtils';\nexport interface Note {\n  patient: string;\n  date: string;\n  physician: string;\n  birthdate?: string;\n  mcodeElements: {\n    [key: string]: string;\n  };\n  pathway?: string;\n  node?: string;\n  status: string;\n  treatment?: string;\n  notes?: string;\n}\n\ninterface NoteDataProviderProps {\n  children: ReactNode;\n  date: Date;\n  physician: string;\n}\n\nexport const NoteContext = createContext<Note | null>(null);\n\nexport const NoteDataProvider: FC<NoteDataProviderProps> = ({ children, date, physician }) => {\n  const patient = usePatient();\n  const name = patient.name ? getHumanName(patient.name) : '';\n  const note: Note = {\n    patient: name,\n    date: date.toDateString(),\n    physician: physician,\n    birthdate: patient.birthDate || '',\n    mcodeElements: {},\n    pathway: usePathwayContext().evaluatedPathway?.pathway.name,\n    status: 'Pending'\n  };\n\n  return <NoteContext.Provider value={note}>{children}</NoteContext.Provider>;\n};\n\nexport const useNote = (): Note | null => useContext(NoteContext);\n\nexport const toString = (note: Note): string => {\n  let mcodeElements = '';\n  Object.keys(note.mcodeElements).forEach(element => {\n    mcodeElements += `${element}: ${note.mcodeElements[element]}\\n`;\n  });\n  const noteString = `Date: ${note.date}\\n\nPatient: ${note.patient}\\n\nBirthdate: ${note.birthdate}\\n\nPhysician: ${note.physician}\\n\n${mcodeElements}\nPathway: ${note.pathway}\\n\nNode: ${note.node}\\n\nStatus: ${note.status}\\n\nTreatment: ${note.treatment}\\n\nNotes: ${note.notes}\n  `;\n  return noteString;\n};\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport indexStyles from 'styles/index.module.scss';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} ${indexStyles.button} ${type === 'decline' &&\n        styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={type === 'accept' ? styles.accept : styles.decline}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { usePatient } from 'components/PatientProvider';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { useFHIRClient } from 'components/FHIRClient';\nimport { createDocumentReference, createNoteContent } from 'utils/fhirUtils';\nimport { useNote } from 'components/NoteDataProvider';\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const patient = usePatient();\n  const client = useFHIRClient();\n  const { patientRecords, setPatientRecords } = usePatientRecords();\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n  const note = useNote();\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n              // Create DocumentReference with selected value and add to patient record\n              if (note) {\n                const noteString = createNoteContent(note, patientRecords, 'completed', selected);\n                const documentReference = createDocumentReference(noteString, selected, patient);\n                setPatientRecords([...patientRecords, documentReference]);\n                client?.create?.(documentReference);\n              }\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import React, { FC, useState } from 'react';\nimport styles from './withConfirmationPopup.module.scss';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\n\ntype ConfirmationProps = {\n  onConfirm: () => void;\n};\n\ntype WithConfirmationPopupProps<T> = T & ConfirmationProps;\n\nconst withConfirmationPopup = <T extends object>(\n  WrappedComponent: FC<T>\n): FC<WithConfirmationPopupProps<T>> => {\n  const PopupComponent: FC<WithConfirmationPopupProps<T>> = ({ onConfirm, ...wrappedProps }) => {\n    const [open, setOpen] = useState<boolean>(false);\n    // https://github.com/Semantic-Org/Semantic-UI-React/issues/2487\n    return (\n      <PathwayPopup\n        className={styles.withConfirmationPopup}\n        Content={<PopupContent setOpen={setOpen} onConfirm={onConfirm} />}\n        open={open}\n        setOpen={setOpen}\n        Trigger={\n          <div className={styles.triggerContainer} {...wrappedProps}>\n            <WrappedComponent {...(wrappedProps as T)} />\n          </div>\n        }\n      />\n    );\n  };\n  return PopupComponent;\n};\n\ninterface PopupContentProps {\n  setOpen: Function;\n  onConfirm: () => void;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ setOpen, onConfirm }) => {\n  return (\n    <div className={styles.popupContent}>\n      <div>Are you sure?</div>\n      <div>\n        <ActionButton\n          size=\"small\"\n          type=\"accept\"\n          onClick={(): void => {\n            onConfirm();\n            setOpen(false);\n          }}\n        />\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default withConfirmationPopup;\n","import withConfirmationPopup from 'components/withConfirmationPopup';\nimport ActionButton from 'components/ActionButton';\n\nconst ConfirmedActionButton = withConfirmationPopup(ActionButton);\n\nexport { ConfirmedActionButton };\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, useState } from 'react';\nimport { GuidanceState, DocumentationResource, State, Action } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport { ConfirmedActionButton } from 'components/ConfirmedActionButton';\nimport { isBranchState } from 'utils/nodeUtils';\nimport { useFHIRClient } from 'components/FHIRClient';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { usePatient } from 'components/PatientProvider';\nimport {\n  translatePathwayRecommendation,\n  createDocumentReference,\n  createNoteContent\n} from 'utils/fhirUtils';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useNote } from 'components/NoteDataProvider';\nimport {\n  Resource,\n  DocumentReference,\n  Observation,\n  Procedure,\n  Identifier,\n  MedicationRequest,\n  ServiceRequest\n} from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n  documentation: DocumentationResource | undefined;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = ({\n  pathwayState,\n  isActionable,\n  isGuidance,\n  documentation\n}) => {\n  const [comments, setComments] = useState<string>('');\n  const guidance = isGuidance && renderGuidance(pathwayState, documentation);\n  const branch = isBranchState(pathwayState) && renderBranch(documentation, pathwayState);\n  const { patientRecords, setPatientRecords } = usePatientRecords();\n  const client = useFHIRClient();\n  const note = useNote();\n  const patient = usePatient();\n\n  // prettier-ignore\n  const defaultText = 'The patient and I discussed the treatment plan, risks, benefits and alternatives.  The patient expressed understanding and wants to proceed.';\n  const onConfirm = (status: string, action?: Action[]): void => {\n    const newPatientRecords = [...patientRecords];\n\n    // Create DocumentReference and add to patient record(and post to FHIR server)\n    if (note) {\n      const noteString = createNoteContent(note, patientRecords, status, comments, pathwayState);\n      const documentReference = createDocumentReference(noteString, pathwayState.label, patient);\n      newPatientRecords.push(documentReference);\n      client?.create?.(documentReference);\n    }\n\n    // Translate pathway recommended resource and add to patient record\n    if (action && action.length > 0) {\n      const resource: Resource = translatePathwayRecommendation(\n        action[0].resource,\n        patient.id as string\n      );\n\n      newPatientRecords.push(resource);\n      client?.create?.(resource);\n    }\n\n    setPatientRecords(newPatientRecords);\n  };\n\n  return (\n    <div className={indexStyles.expandedNode}>\n      <table className={styles.infoTable}>\n        <tbody>\n          <StatusField documentation={documentation} />\n          {guidance || branch}\n        </tbody>\n      </table>\n      {isActionable && isGuidance && (\n        <form className={styles.commentsForm}>\n          <label>Comments:</label>\n          <button\n            className={`${indexStyles.button} ${styles.defaultTextButton}`}\n            onClick={(e): void => {\n              e.preventDefault();\n              if (!comments.includes(defaultText)) setComments(comments + defaultText);\n            }}\n          >\n            Use Default Text\n          </button>\n          <textarea\n            className={styles.comments}\n            value={comments}\n            onChange={(e): void => setComments(e.target.value)}\n          ></textarea>\n          <div className={styles.footer}>\n            <ConfirmedActionButton\n              type=\"accept\"\n              size=\"large\"\n              onConfirm={(): void => {\n                onConfirm('Accepted', pathwayState.action);\n              }}\n            />\n          </div>\n          <div className={styles.footer}>\n            <ConfirmedActionButton\n              type=\"decline\"\n              size=\"large\"\n              onConfirm={(): void => {\n                onConfirm('Declined');\n              }}\n            />\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\ntype StatusFieldProps = {\n  documentation: DocumentationResource | undefined;\n};\n\nconst StatusField: FC<StatusFieldProps> = ({ documentation }) => {\n  if (!documentation?.resource) {\n    return null;\n  }\n  const status = documentation.status;\n  const rawDate = documentation.resource?.meta?.lastUpdated;\n  if (rawDate)\n    return (\n      <ExpandedNodeField\n        key=\"Status\"\n        title={status}\n        description={new Date(rawDate).toLocaleString('en-us')}\n      />\n    );\n  return null;\n};\n\nfunction renderBranch(\n  documentation: DocumentationResource | undefined,\n  pathwayState: State\n): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Observation': {\n        const observation = documentation.resource as Observation;\n\n        const valueCoding = observation.valueCodeableConcept?.coding;\n        if (valueCoding) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"ValueSystem\"\n              title=\"System\"\n              description={\n                <>\n                  {valueCoding[0].system}\n                  <a href={valueCoding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n                  </a>\n                </>\n              }\n            />,\n            <ExpandedNodeField key=\"ValueCode\" title=\"Code\" description={valueCoding[0].code} />,\n            <ExpandedNodeField\n              key=\"ValueDisplay\"\n              title=\"Display\"\n              description={valueCoding[0].display}\n            />\n          );\n        }\n\n        const date = observation.effectiveDateTime;\n        if (date) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Date\"\n              title=\"Date\"\n              description={new Date(date).toLocaleString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n      case 'DocumentReference': {\n        const documentReference = documentation.resource as DocumentReference;\n        const subject = documentReference.subject;\n        if (subject)\n          returnElements.push(\n            <ExpandedNodeField key=\"subject\" title=\"Subject\" description={subject.reference} />\n          );\n\n        // Display missing data value if it is available, otherwise display note content\n        const identifierArray: Identifier[] | undefined = documentReference.identifier;\n        const documentReferenceIdentifier = identifierArray?.find(\n          i => i.system === 'pathways.documentreference'\n        );\n\n        if (documentReferenceIdentifier) {\n          const value = atob(documentReferenceIdentifier.value as string);\n          returnElements.push(<ExpandedNodeField key=\"value\" title=\"Value\" description={value} />);\n        } else {\n          const note = documentReference.content[0].attachment.data;\n          if (note)\n            returnElements.push(\n              <ExpandedNodeField key=\"note\" title=\"Note\" description={atob(note)} />\n            );\n        }\n        break;\n      }\n      default: {\n        returnElements.push(\n          <ExpandedNodeField key=\"error\" title=\"Error\" description=\"Unsupported Resource Type\" />\n        );\n      }\n    }\n  } else {\n    const values: string[] = pathwayState.transitions\n      .map(transition => {\n        const description = transition.condition?.description;\n        return description ? description : '';\n      })\n      // Remove duplicate values\n      .filter((v, i, arr) => arr.indexOf(v) === i);\n\n    returnElements.push(\n      <ExpandedNodeField\n        key=\"value\"\n        title=\"Value\"\n        description={<MissingDataPopup values={values} />}\n      />\n    );\n  }\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(\n  pathwayState: GuidanceState,\n  documentation: DocumentationResource | undefined\n): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding && coding[0].system}\n          <a href={coding && coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />\n  ];\n\n  if (documentation?.resource) {\n    switch (documentation.resourceType) {\n      case 'Procedure': {\n        const procedure = documentation.resource as Procedure;\n        const start =\n          (procedure.performedPeriod && procedure.performedPeriod.start) ||\n          procedure.performedDateTime;\n        const end = procedure.performedPeriod && procedure.performedPeriod.end;\n        if (start) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"Start\"\n              title=\"Start\"\n              description={new Date(start).toLocaleString('en-us')}\n            />\n          );\n        }\n\n        if (end) {\n          returnElements.push(\n            <ExpandedNodeField\n              key=\"End\"\n              title=\"End\"\n              description={new Date(end).toLocaleString('en-us')}\n            />\n          );\n        }\n        break;\n      }\n    }\n  }\n  return returnElements;\n}\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { GuidanceState, State, DocumentationResource } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport nodeStyles from 'styles/index.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'not-on-patient-path': {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    },\n    'child-not-on-patient-path': {\n      borderColor: theme.palette.background.default\n    }\n  }),\n  { name: 'Node' }\n);\n\ninterface NodeProps {\n  pathwayState: State;\n  documentation: DocumentationResource | undefined;\n  isOnPatientPath: boolean;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClickHandler?: () => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = forwardRef<HTMLDivElement, NodeProps>(\n  (\n    {\n      pathwayState,\n      documentation,\n      isOnPatientPath,\n      isCurrentNode,\n      xCoordinate,\n      yCoordinate,\n      expanded = false,\n      onClickHandler\n    },\n    ref\n  ) => {\n    const classes = useStyles();\n    const { label } = pathwayState;\n    const style = {\n      top: yCoordinate,\n      left: xCoordinate\n    };\n\n    const backgroundColorClass = isOnPatientPath\n      ? styles.onPatientPath\n      : clsx(styles.notOnPatientPath, classes['not-on-patient-path']);\n    const isActionable = isCurrentNode && !documentation;\n    const topLevelClasses = [styles.node, backgroundColorClass];\n\n    let expandedNodeClass = '';\n    if (expanded) topLevelClasses.push(nodeStyles.expanded);\n    if (isActionable) {\n      topLevelClasses.push(styles.actionable);\n      expandedNodeClass = styles.childActionable;\n    } else {\n      expandedNodeClass = isOnPatientPath\n        ? styles.childOnPatientPath\n        : clsx(styles.childNotOnPatientPath, classes['child-not-on-patient-path']);\n    }\n    const isGuidance = isGuidanceState(pathwayState);\n    // TODO: how do we determine whether a node has been accepted or declined?\n    // for now:\n    // if it's a non-actionable guidance state on the path: accepted == has documentation\n    // if it's actionable, not guidance or not on the path: null\n    const wasActionTaken = isOnPatientPath && isGuidance && !isActionable;\n    const isAccepted = wasActionTaken ? documentation?.resourceType !== 'DocumentReference' : null;\n\n    return (\n      <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n        <div\n          className={`${nodeStyles.nodeTitle} ${onClickHandler && nodeStyles.clickable}`}\n          onClick={onClickHandler}\n        >\n          <div className={nodeStyles.iconAndLabel}>\n            <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n            {label}\n          </div>\n          <StatusIcon accepted={isAccepted} />\n        </div>\n        {expanded && (\n          <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n            <ExpandedNode\n              pathwayState={pathwayState as GuidanceState}\n              isActionable={isActionable}\n              isGuidance={isGuidance}\n              documentation={documentation}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'MedicationAdministration') icon = faCapsules;\n      else if (resourceType === 'Procedure') icon = faSyringe;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  accepted: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ accepted }) => {\n  if (accepted == null) {\n    return null;\n  }\n  const icon = accepted ? faCheckCircle : faTimesCircle;\n  return (\n    <div className={nodeStyles.statusIcon}>\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  isOnPatientPath: boolean;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, isOnPatientPath, widthOffset }) => {\n  const className = isOnPatientPath ? styles.arrowOnPatientPath : styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import { Pathway, State } from 'pathways-model';\n\nexport interface CqlObject {\n  main: string;\n  libraries: Library;\n}\n\nexport interface Library {\n  [name: string]: string; // should probably have an object for expected ELM structure.\n}\nexport function getFixture(filename: string): Promise<string> {\n  return fetch(`./static/cql/${filename}`).then(cql => cql.text());\n}\n\n/**\n * Function to format each block from the pathway in CQL format\n * @param cqlBlock - block of CQL code from the pathway\n * @param resourceName - Name of the CQL resource block to be defined\n * @return the CQL code formatted pretty with the define line\n */\nfunction cqlFormat(cqlBlock: string, resourceName: string): string {\n  let formattedBlock = '';\n\n  // Definition of CQL block\n  const line1 = 'define \"' + resourceName + '\":\\n\\t';\n\n  // Build the formatted block\n  formattedBlock = line1.concat(cqlBlock);\n  return formattedBlock;\n}\n\n/**\n * Helper function to add the cql block to the completed cql\n * with the correct formatting\n * @param cql - complete cql string\n * @param cqlBlock - current cql block to append to the cql\n * @return the cql with the cql block appended correctly\n */\nfunction cqlAdd(cql: string, cqlBlock: string): string {\n  return cql.concat('\\n', '\\n', cqlBlock);\n}\n\n/**\n * Helper function to determine if a state has a conditional transition\n * @param state - the JSON object of the desired state on the pathway\n * @return true if state is a conditional transition and false\n *                   otherwise\n */\nfunction isConditional(state: State): boolean {\n  if ('transitions' in state) {\n    return state.transitions.length > 1 ? true : false;\n  } else return false;\n}\n\n/**\n * Function to extract the CQL code from each state in the pathway and build\n * the CQL code to execute\n * @param pathway - the JSON object of the entire pathway\n * @return a string of the CQL code for the navigational nodes in the pathway\n */\nexport function extractNavigationCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const stateName in pathway.states) {\n      const state = pathway.states[stateName];\n      if ('cql' in state) {\n        const cqlBlock1 = state.cql;\n        const nextBlock1 = cqlFormat(cqlBlock1, stateName);\n        cql = cqlAdd(cql, nextBlock1);\n      } else if (isConditional(state)) {\n        for (const transition of state.transitions) {\n          const condition = transition.condition;\n          if (condition) {\n            const nextBlock2 = cqlFormat(condition.cql, condition.description);\n            cql = cqlAdd(cql, nextBlock2);\n          }\n        }\n      }\n    }\n\n    return cql;\n  });\n}\n\n/**\n * Extract the CQL statements from the `criteria` section of the pathway\n * into a snippet ready to be converted to ELM.\n * @param pathway - the entire pathway object\n * @return a string of the CQL for the criteria in the pathway\n */\nexport function extractCriteriaCQL(pathway: Pathway): Promise<string> {\n  return getFixture(pathway.library).then(library => {\n    let cql = library;\n    // Loop through each JSON object in the pathway\n    for (const criteria of pathway.criteria) {\n      const cqlBlock1 = criteria.cql;\n      const nextBlock1 = cqlFormat(cqlBlock1, criteria.elementName);\n      cql = cqlAdd(cql, nextBlock1);\n    }\n\n    return cql;\n  });\n}\n","// sample header= \"multipart/form-data;boundary=Boundary_1\"\n// get the part after \"boundary=\" and before any subsequent ;\nexport const extractMultipartBoundary = /.*;boundary=(Boundary.*);?.*/g;\n\nexport const extractMultipartFileName = /Content-Disposition: form-data; name=\"([^\"]+)\"/;\n\n// eveything between { } including newlines. [^] is like . but matches newline\nexport const extractJSONContent = /(\\{[^]*\\})/;\n\nexport const extractCQLInclude = /include .* called (.*)/g;\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","/* eslint-disable max-len */\nimport { ElmResults } from 'pathways-model';\nimport { Library, Executor, Repository } from 'cql-execution';\nimport { PatientSource } from 'cql-exec-fhir';\nimport { Bundle } from 'fhir-objects';\n/**\n * Engine function that takes in a patient file (JSON) and an ELM file, running the patient against the ELM file\n * @param patientRecord - FHIR bundle containing patient's record\n * @param elm - ELM structure (previosuly converted from CQL) on which the patient will be run.\n * @return returns a JSON object which is the result of analyzing the patient against the elm file\n */\nexport default function executeElm(\n  patientRecord: Bundle,\n  elm: object,\n  libraries?: object\n): ElmResults {\n  let lib;\n  if (libraries) {\n    lib = new Library(elm, new Repository(libraries));\n  } else {\n    lib = new Library(elm);\n  }\n\n  const executor = new Executor(lib);\n  const psource = new PatientSource.FHIRv400(patientRecord);\n  psource.loadBundles(patientRecord);\n  const result = executor.exec(psource);\n  return result;\n}\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport {\n  Pathway,\n  PathwayResults,\n  PatientData,\n  CriteriaResult,\n  DocumentationResource,\n  State,\n  GuidanceState,\n  CriteriaResultItem\n} from 'pathways-model';\nimport { DocumentReference, DomainResource } from 'fhir-objects';\ninterface StateData {\n  documentation: DocumentationResource | string | null;\n  nextState: string | null;\n  status: string;\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the patient's pathway\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns a JSON object describing where the patient is on the given pathway\n *  {\n *    currentState - the name of the state patient is currently in\n *    currentStatus - the status of the patient in the current state (from FHIR resource)\n *          A status of unknown could be the resource returned an unknown status or the resource has no status at all\n *    path - list of the names of states in the patient's pathway\n *    documentation - list of documentation for the trace of the pathway (documentation is corresponding resource)\n *  }\n */\nexport function pathwayData(\n  pathway: Pathway,\n  patientData: PatientData,\n  resources: DomainResource[]\n): PathwayResults {\n  const startState = 'Start';\n  let currentStatus;\n  const patientDocumentation = [];\n  const evaluatedPathway = [startState];\n\n  let stateData = nextState(pathway, patientData, startState, resources);\n  while (stateData !== null) {\n    currentStatus = stateData.status;\n    if (stateData.documentation !== null)\n      patientDocumentation.push(retrieveResource(stateData.documentation, resources));\n    if (stateData.nextState === null) break; // The position of this line is important to maintain consistency for different scenarios\n    evaluatedPathway.push(stateData.nextState);\n    stateData = nextState(pathway, patientData, stateData.nextState, resources);\n  }\n  const currentStateName = evaluatedPathway[evaluatedPathway.length - 1];\n  const currentState = pathway.states[currentStateName];\n  return {\n    patientId: patientData.Patient.id.value,\n    currentState: currentStateName,\n    currentStatus: currentStatus,\n    nextRecommendation: nextStateRecommendation(currentState),\n    path: evaluatedPathway,\n    documentation: patientDocumentation\n  };\n}\n\n/**\n * Engine function to take in the ELM patient results and output data relating to the pathway criteria\n * @param pathway - the entire pathway\n * @param patientData - the data on the patient from a CQL execution. Note this is a single patient not the entire patientResults object\n * @return returns CriteriaResult containing the expected and actual value for one data element\n */\nexport function criteriaData(pathway: Pathway, patientData: PatientData): CriteriaResult {\n  const resultItems: CriteriaResultItem[] = [];\n\n  let matches = 0;\n  pathway.criteria.forEach(criteria => {\n    let evaluationResult = patientData[criteria.elementName];\n    if (Array.isArray(evaluationResult)) {\n      evaluationResult = evaluationResult[0]; // TODO: add functionality for multiple resources\n    }\n    let actual = 'unknown';\n    let match = false;\n\n    if (evaluationResult) {\n      actual = evaluationResult['value'];\n      match = evaluationResult['match'];\n    }\n\n    if (match) matches += 1;\n\n    const criteriaResultItem = {\n      elementName: criteria.elementName,\n      expected: criteria.expected,\n      actual,\n      match\n    };\n\n    resultItems.push(criteriaResultItem);\n  });\n\n  return {\n    pathwayName: pathway.name,\n    matches: matches,\n    criteriaResultItems: resultItems\n  };\n}\n\n/**\n * Helper function to set the next recommendation\n * @param state - the current state in the pathway (where the patient is)\n * @return \"pathway terminal\" if state is the end of the pathway\n *        the name of the next state in a direct transition\n *        an object describing possible transitions and descriptions\n */\nfunction nextStateRecommendation(state: State): string | object {\n  const transitions = state.transitions;\n  if (transitions.length === 0) return 'pathway terminal';\n  else if (transitions.length === 1) return transitions[0].transition;\n  else {\n    return transitions.map(transition => {\n      return {\n        state: transition.transition,\n        conditionDescription:\n          'condition' in transition ? transition.condition && transition.condition.description : ''\n      };\n    });\n  }\n}\n\n/**\n * Helper function to format the documentation and include the related state\n * @param resource - the resource returned by the CQL execution\n * @param state - the current state name\n * @return the JSON resource with the state property set\n */\nfunction formatDocumentation(\n  resource: DocumentationResource,\n  state: string\n): DocumentationResource {\n  resource.state = state;\n  return resource;\n}\n\n/**\n * Helper function to select the transition state\n * This function is needed because MedicationRequests can have multiple\n * different statuses to indiciate complete\n * @param resource - the resource returned by the CQL execution\n * @param currentState - the current state\n * @return the next state name or null\n */\nfunction formatNextState(resource: DocumentationResource, currentState: State): string | null {\n  if (resource.resourceType === 'MedicationRequest') {\n    return currentState.transitions.length !== 0 ? currentState.transitions[0].transition : null;\n  } else {\n    return resource.status === 'completed' && currentState.transitions.length !== 0\n      ? currentState.transitions[0].transition\n      : null;\n  }\n}\n\n/**\n * Determine the nextState in a conditional transition state\n * @param patientData - JSON object representing the data on a patient\n * @param currentState - the current state\n * @param currentStateName - the name of the current state\n * @return the next state\n */\nfunction getConditionalNextState(\n  patientData: PatientData,\n  currentState: State,\n  currentStateName: string,\n  resources: DomainResource[]\n): StateData {\n  for (const transition of currentState.transitions) {\n    if (transition.condition) {\n      let documentationResource: DocumentationResource | null = null;\n      if (patientData[transition.condition.description].length)\n        // TODO: add functionality for multiple resources\n        documentationResource = patientData[transition.condition.description][0];\n      else {\n        const documentReference = retrieveNote(transition.condition.description, resources);\n        if (documentReference) {\n          documentationResource = {\n            resourceType: 'DocumentReference',\n            id: documentReference.id ? documentReference.id : 'unknown',\n            status: documentReference.status,\n            state: currentStateName,\n            resource: documentReference\n          };\n        }\n      }\n\n      if (documentationResource) {\n        return {\n          nextState: transition.transition,\n          documentation: formatDocumentation(documentationResource, currentStateName),\n          status: documentationResource.status\n        };\n      }\n    }\n  }\n\n  // No matching resource in the patient data to move from state\n  return noMatchingResourceForState();\n}\n\n/**\n * No resource exists for the next state\n * @return empty object\n */\nfunction noMatchingResourceForState(): StateData {\n  return {\n    nextState: null,\n    documentation: null,\n    status: 'not-done'\n  };\n}\n\n/**\n * Helper function to traverse the pathway and determine the next state in a patients pathway.\n * For actions this function will also verify the move is valid by the resource status\n * @param pathway - JSON object representing the complete pathway\n * @param patientData - JSON object representing the data on a patient\n * @param currentStateName - the name of the current state in the traversal\n * @return returns object with the next state, the status, and the evidenvce\n */\nfunction nextState(\n  pathway: Pathway,\n  patientData: PatientData,\n  currentStateName: string,\n  resources: DomainResource[]\n): StateData | null {\n  const currentState: State | GuidanceState = pathway.states[currentStateName];\n  if ('action' in currentState) {\n    let resource = patientData[currentStateName];\n    if (resource?.length) {\n      resource = resource[0]; // TODO: add functionality for multiple resources\n      return {\n        nextState: formatNextState(resource, currentState),\n        documentation: formatDocumentation(resource, currentStateName),\n        status: 'status' in resource ? resource.status : 'unknown'\n      };\n    } else {\n      // Check for note posted on decline\n      const documentReference = retrieveNote(currentState.label, resources);\n      if (documentReference) {\n        const doc = {\n          resourceType: 'DocumentReference',\n          id: documentReference.id ? documentReference.id : 'unknown',\n          status: 'status' in documentReference ? documentReference.status : 'unknown',\n          state: currentStateName,\n          resource: documentReference\n        };\n        return {\n          nextState: formatNextState(doc, currentState),\n          documentation: formatDocumentation(doc, currentStateName),\n          status: doc.status\n        };\n      }\n      // Action exists but has no matching resource in patientData\n      return noMatchingResourceForState();\n    }\n  } else if (currentState.transitions.length === 1) {\n    return {\n      nextState: currentState.transitions[0].transition,\n      documentation: 'direct',\n      status: 'completed'\n    };\n  } else if (currentState.transitions.length > 1) {\n    return getConditionalNextState(patientData, currentState, currentStateName, resources);\n  } else return null;\n}\n\nfunction retrieveNote(condition: string, resources: DomainResource[]): DocumentReference | null {\n  const documentReference = resources.find(resource => {\n    if (resource.resourceType !== 'DocumentReference') return false;\n    const documentReference = resource as DocumentReference;\n    if (documentReference.identifier === undefined) return false;\n    for (const identifier of documentReference.identifier) {\n      if (\n        identifier.system === 'pathways.documentreference' &&\n        identifier.value === btoa(condition)\n      )\n        return true;\n    }\n    return false;\n  });\n\n  if (!documentReference) return null;\n\n  return documentReference as DocumentReference;\n}\n\nfunction retrieveResource(\n  doc: DocumentationResource | string,\n  resources: DomainResource[]\n): DocumentationResource | string {\n  if (typeof doc !== 'string' && resources) {\n    doc.resource = resources.find(resource => {\n      return resource.resourceType === doc.resourceType && resource.id === doc.id;\n    });\n  }\n\n  return doc;\n}\n","import { extractNavigationCQL, extractCriteriaCQL, CqlObject, Library } from './cql-extractor';\nimport convertCQL, { convertBasicCQL, ElmObject } from './cql-to-elm';\nimport executeElm from './elm-executor';\nimport { pathwayData, criteriaData } from './output-results';\nimport { Pathway, PatientData, PathwayResults, ElmResults, CriteriaResult } from 'pathways-model';\nimport { getFixture } from './cql-extractor';\nimport { extractCQLInclude } from 'utils/regexes';\nimport { DomainResource, Bundle } from 'fhir-objects';\nfunction instanceOfElmObject(object: object): object is ElmObject {\n  return 'main' in object;\n}\n\n/**\n * Function to run each of the engine files in series to execute\n * the automated pathway\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return Information on the patient's current status within the\n *                  clinical pathway\n */\nexport function evaluatePatientOnPathway(\n  patient: Bundle,\n  pathway: Pathway,\n  resources: DomainResource[]\n): Promise<PathwayResults> {\n  return extractNavigationCQL(pathway)\n    .then(cql => processCQLCommon(patient, cql))\n    .then(patientData => pathwayData(pathway, patientData, resources));\n}\n\n/**\n * Evaluate the pathway criteria against the given patient.\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return a list of CriteriaResults, each containing\n *         the expected value and actual value for one criteria item\n */\nexport function evaluatePathwayCriteria(\n  patient: Bundle,\n  pathway: Pathway\n): Promise<CriteriaResult> {\n  return extractCriteriaCQL(pathway)\n    .then(cql => processCQLCommon(patient, cql))\n    .then(patientData => criteriaData(pathway, patientData));\n}\n\n/**\n * Common logic to execute the given CQL against the given Patient.\n * @param patient - Patient's record as FHIR data\n * @param pathway - entire Pathway object\n * @return the raw, unprocessed patientResults\n *         derived from executing the CQL against the given patient\n */\nfunction processCQLCommon(patient: Bundle, cql: string): Promise<PatientData> {\n  // Likely need an intermediary step that gathers the CQL files needed\n  // example function gatherCQL\n  return gatherCQL(cql)\n    .then(result => {\n      if (Object.keys(result).length > 0) {\n        // non-empty library\n        const cqlObject: CqlObject = {\n          main: cql,\n          libraries: result\n        };\n        return convertCQL(cqlObject);\n      } else {\n        return convertBasicCQL(cql);\n      }\n    })\n    .then(elm => {\n      let elmResults: ElmResults = {\n        patientResults: {}\n      };\n      if (instanceOfElmObject(elm)) {\n        elmResults = executeElm(patient, elm.main, elm.libraries);\n      } else {\n        elmResults = executeElm(patient, elm);\n      }\n\n      // TODO - update pathwaysData to take multiple patients\n      const patientIds = Object.keys(elmResults.patientResults);\n      const patientData = elmResults.patientResults[patientIds[0]];\n      return patientData;\n    });\n}\n\n// example function that would gather library CQL files\nfunction gatherCQL(cql: string): Promise<Library> {\n  const lib = extractCQLInclude.exec(cql);\n  if (lib) {\n    return getFixture(`${lib[1]}.cql`).then(result => {\n      return new Promise(function(resolve, reject): void {\n        setTimeout(function() {\n          resolve({ FHIRHelpers: result });\n        }, 300);\n      });\n    });\n  } else {\n    return new Promise(function(resolve, reject): void {\n      resolve({});\n    });\n  }\n}\n","import React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { evaluatePatientOnPathway } from 'engine';\nimport { EvaluatedPathway, PathwayResults, DocumentationResource } from 'pathways-model';\nimport { Layout, NodeDimensions, Edge } from 'graph-model';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { DomainResource } from 'fhir-objects';\n\ninterface GraphProps {\n  evaluatedPathway: EvaluatedPathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n  updateEvaluatedPathways: (value: EvaluatedPathway) => void;\n}\n\nconst isEdgeOnPatientPath = (path: string[], edge: Edge): boolean => {\n  const startIndex = path.indexOf(edge.start);\n  const endIndex = path.indexOf(edge.end);\n  return startIndex !== -1 && endIndex !== -1 && startIndex + 1 === endIndex;\n};\n\nconst Graph: FC<GraphProps> = ({\n  evaluatedPathway,\n  interactive = true,\n  expandCurrentNode = true,\n  updateEvaluatedPathways\n}) => {\n  const patientRecords = usePatientRecords();\n  const resources = patientRecords.patientRecords;\n  const pathway = evaluatedPathway.pathway;\n  const graphElement = useRef<HTMLDivElement>(null);\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n  const [windowWidth, setWindowWidth] = useState<number>(useWindowWidth());\n  const parentWidth = graphElement?.current?.parentElement?.clientWidth ?? 0;\n  const [path, _setPath] = useState<string[]>(\n    evaluatedPathway.pathwayResults ? evaluatedPathway.pathwayResults.path : []\n  );\n\n  const setPath = useCallback(\n    (value: PathwayResults): void => {\n      _setPath(value.path);\n      patientRecords.setEvaluatePath(false);\n      updateEvaluatedPathways({ pathway: evaluatedPathway.pathway, pathwayResults: value });\n    },\n    [evaluatedPathway.pathway, updateEvaluatedPathways, patientRecords]\n  );\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    return graphLayout(pathway, nodeDimensions);\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  // If a node has a negative x value, shift nodes and edges to the right by that value\n  const minX =\n    nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.x + windowWidth / 2)\n          .reduce((a, b) => Math.min(a, b))\n      : 0;\n\n  if (minX < 0) {\n    const toAdd = minX * -1;\n    Object.keys(nodeCoordinates).forEach(key => {\n      const node = nodeCoordinates[key];\n      node.x += toAdd;\n    });\n\n    Object.keys(edges).forEach(key => {\n      const edge = edges[key];\n\n      edge.points.forEach(p => (p.x += toAdd));\n      if (edge.label) edge.label.x += toAdd;\n    });\n  }\n\n  const initialExpandedState = useMemo(() => {\n    return Object.keys(layout).reduce((acc: { [key: string]: boolean }, curr: string) => {\n      acc[curr] = false;\n      return acc;\n    }, {});\n  }, [layout]);\n\n  const [expanded, _setExpanded] = useState<{ [key: string]: boolean | undefined }>(\n    initialExpandedState\n  );\n\n  const setExpanded = useCallback((key: string, expand?: boolean): void => {\n    _setExpanded(prevState => {\n      return { ...prevState, [key]: !prevState[key] };\n    });\n  }, []);\n\n  useEffect(() => {\n    // Keeps track of whether the current useEffect cycle has ended\n    let cancel = false;\n\n    if (resources.length > 0 && (path.length === 0 || patientRecords.evaluatePath)) {\n      // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n      const patient = {\n        resourceType: 'Bundle',\n        type: 'searchset',\n        entry: resources.map((r: DomainResource) => ({ resource: r }))\n      };\n      evaluatePatientOnPathway(patient, pathway, resources).then(pathwayResults => {\n        if (!cancel) setPath(pathwayResults);\n      });\n\n      return (): void => {\n        cancel = true;\n      };\n    }\n  }, [pathway, resources, path.length, setPath, patientRecords]);\n\n  useEffect(() => {\n    if (path) {\n      const currentNode = path[path.length - 1];\n      if (expandCurrentNode) {\n        if (currentNode) setExpanded(currentNode, true);\n      }\n    }\n  }, [expandCurrentNode, path, setExpanded]);\n\n  // Recalculate graph layout if window size changes or if a node is expanded\n  useEffect(() => {\n    setWindowWidth(parentWidth);\n    setLayout(getGraphLayout());\n  }, [getGraphLayout, parentWidth]);\n\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [expanded, getGraphLayout]);\n\n  // maxWidth finds the edge label that is farthest to the right\n  const maxWidth: number =\n    edges !== undefined\n      ? Object.values(edges)\n          .map(e => e.label)\n          .map(l => (l ? l.x + l.text.length * 10 + windowWidth / 2 : 0))\n          .reduce((a, b) => Math.max(a, b), 0)\n      : windowWidth;\n\n  const documentation = evaluatedPathway.pathwayResults\n    ? evaluatedPathway.pathwayResults.documentation\n    : [];\n\n  return (\n    <div\n      ref={graphElement}\n      style={{\n        height: interactive ? maxHeight + 150 : 'inherit',\n        position: 'relative',\n        overflow: 'auto',\n        marginRight: '5px'\n      }}\n    >\n      {nodeCoordinates !== undefined\n        ? Object.keys(nodeCoordinates).map(key => {\n            const docResource = documentation.find((doc): doc is DocumentationResource => {\n              return typeof doc !== 'string' && doc.state === key;\n            });\n            const isCurrentNode = (): boolean => {\n              return path[path.length - 1] === key;\n            };\n            const onClickHandler = interactive ? (): void => setExpanded(key) : undefined;\n            return (\n              <Node\n                key={key}\n                documentation={docResource}\n                ref={(node: HTMLDivElement): void => {\n                  nodeRefs.current[key] = node;\n                }}\n                pathwayState={pathway.states[key]}\n                isOnPatientPath={path.includes(key)}\n                isCurrentNode={isCurrentNode()}\n                xCoordinate={nodeCoordinates[key].x + windowWidth / 2}\n                yCoordinate={nodeCoordinates[key].y}\n                expanded={expanded[key]}\n                onClickHandler={onClickHandler}\n              />\n            );\n          })\n        : []}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          // Adding 5 pixels to maxWidth so that the rightmost edge label is not cut off\n          width: maxWidth + 5,\n          height: maxHeight,\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          overflow: 'visible'\n        }}\n      >\n        {edges !== undefined\n          ? Object.keys(edges).map(edgeName => {\n              const edge = edges[edgeName];\n              return (\n                <Arrow\n                  key={edgeName}\n                  edge={edge}\n                  edgeName={edgeName}\n                  isOnPatientPath={isEdgeOnPatientPath(path, edge)}\n                  widthOffset={windowWidth / 2}\n                />\n              );\n            })\n          : []}\n      </svg>\n    </div>\n  );\n};\n\nfunction useWindowWidth(): number {\n  const getWidth = (): number => window.innerWidth;\n  const [windowWidth, setWindowWidth] = useState(getWidth);\n\n  useEffect(() => {\n    const handleResize = (): void => setWindowWidth(getWidth);\n\n    window.addEventListener('resize', handleResize);\n    return (): void => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowWidth;\n}\n\nexport default Graph;\n","import React, { FC, ReactNode, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Service } from 'pathways-objects';\nimport { Pathway, EvaluatedPathway, CriteriaResult } from 'pathways-model';\n\nimport styles from './PathwaysList.module.scss';\nimport indexStyles from 'styles/index.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Graph from 'components/Graph';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { evaluatePathwayCriteria } from 'engine';\nimport { usePatientRecords } from 'components/PatientRecordsProvider';\nimport { Resource } from 'fhir-objects';\nimport {\n  faPlay,\n  faPlus,\n  faMinus,\n  faChevronUp,\n  faChevronDown,\n  faCaretDown\n} from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(\n  theme => ({\n    'pathway-element': {\n      backgroundColor: theme.palette.background.default\n    },\n    title: {\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n\ninterface PathwaysListElementProps {\n  evaluatedPathway: EvaluatedPathway;\n  criteria?: CriteriaResult;\n  callback: Function;\n}\n\ninterface PathwaysListProps {\n  evaluatedPathways: EvaluatedPathway[];\n  callback: Function;\n  service: Service<Array<Pathway>>;\n}\n\nconst PathwaysList: FC<PathwaysListProps> = ({ evaluatedPathways, callback, service }) => {\n  const resources = usePatientRecords().patientRecords;\n  const [criteria, setCriteria] = useState<CriteriaResult[] | null>(null);\n\n  if (!criteria && evaluatedPathways.length > 0 && resources && resources.length > 0) {\n    // Create a fake Bundle for the CQL engine and check if patientPath needs to be evaluated\n    const patient = {\n      resourceType: 'Bundle',\n      type: 'searchset',\n      entry: resources.map((r: fhir.Resource) => ({ resource: r }))\n    };\n\n    // Evaluate pathway criteria for each pathway\n    const criteriaPromises = evaluatedPathways.map(pathway =>\n      evaluatePathwayCriteria(patient, pathway.pathway)\n    );\n    Promise.all(criteriaPromises).then(criteriaResults => {\n      setCriteria(criteriaResults.sort((a, b) => b.matches - a.matches));\n    });\n  }\n\n  function renderList(): ReactNode {\n    return (\n      <div>\n        {criteria ? (\n          criteria.map(c => {\n            const evaluatedPathway = evaluatedPathways.find(p => p.pathway.name === c.pathwayName);\n            if (evaluatedPathway)\n              return (\n                <PathwaysListElement\n                  evaluatedPathway={evaluatedPathway}\n                  callback={callback}\n                  criteria={c}\n                  key={evaluatedPathway.pathway.name}\n                />\n              );\n            else\n              return <div>An error occured evaluating the pathway criteria. Please try again.</div>;\n          })\n        ) : (\n          <div>Loading Pathways...</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.pathways_list}>\n      {service.status === 'loading' ? (\n        <div>Loading...</div>\n      ) : service.status === 'loaded' ? (\n        <div className={styles.container}>\n          <div className={styles.pathwayListHeaderContainer}>\n            <div className={styles.header_title}>\n              <div className={styles.header_title__header}>Explore Pathways</div>\n              <div className={styles.header_title__note}>Select pathway below to view details</div>\n            </div>\n            <div className={styles.matchedElementsLabel}>\n              <i>\n                mCODE\n                <br />\n                elements\n                <br />\n                matched\n              </i>\n              <FontAwesomeIcon icon={faCaretDown} />\n            </div>\n          </div>\n\n          {criteria?.length !== 0 && renderList()}\n        </div>\n      ) : (\n        <div>ERROR</div>\n      )}\n    </div>\n  );\n};\n\nconst PathwaysListElement: FC<PathwaysListElementProps> = ({\n  evaluatedPathway,\n  criteria,\n  callback\n}) => {\n  const classes = useStyles();\n  const pathway = evaluatedPathway.pathway;\n  const pathwayCtx = usePathwayContext();\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const chevron: IconProp = isVisible ? faChevronUp : faChevronDown;\n\n  function toggleVisible(): void {\n    setIsVisible(!isVisible);\n  }\n\n  return (\n    <div\n      className={clsx(styles.pathwayElement, classes['pathway-element'])}\n      role={'list'}\n      key={pathway.name}\n    >\n      <div\n        className={clsx(styles.title, classes.title)}\n        role={'listitem'}\n        onClick={(e): void => {\n          pathwayCtx.setEvaluatedPathway(evaluatedPathway, true);\n          toggleVisible();\n        }}\n      >\n        <div>{pathway.name}</div>\n        <div className={styles.expand}>\n          <FontAwesomeIcon icon={chevron} />\n        </div>\n        <div className={styles.numElements}>{criteria?.matches}</div>\n      </div>\n\n      {isVisible && (\n        <div className={styles.infoContainer}>\n          <div className={styles.details}>\n            <p>{pathway.description}</p>\n            <table>\n              <tbody>\n                <tr>\n                  <th></th>\n                  <th>mCODE elements</th>\n                  <th>patient elements</th>\n                </tr>\n                {criteria?.criteriaResultItems.map(c => (\n                  <tr key={c.elementName}>\n                    <td>{c.elementName}</td>\n                    <td>{c.expected}</td>\n                    <td className={c.match ? styles.matchingElement : undefined}>{c.actual}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button className={indexStyles.button} onClick={(): void => callback(evaluatedPathway)}>\n              Select Pathway\n            </button>\n          </div>\n          <div className={styles.pathway}>\n            <Graph\n              evaluatedPathway={evaluatedPathway}\n              interactive={false}\n              expandCurrentNode={false}\n              updateEvaluatedPathways={pathwayCtx.updateEvaluatedPathways}\n            />\n            <div className={styles.controls}>\n              <FontAwesomeIcon icon={faPlay} />\n              <FontAwesomeIcon icon={faPlus} />\n              <FontAwesomeIcon icon={faMinus} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PathwaysList;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Array<Pathway>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<Array<string>>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import { Resource } from 'fhir-objects';\nclass MockedFHIRClient {\n  patient = {};\n\n  async create(): Promise<Resource> {\n    console.log('Mocked create');\n    return Promise.resolve({});\n  }\n}\n\nexport { MockedFHIRClient };\n","import React, { FC, useState, useEffect, useCallback } from 'react';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport { PathwaysClient } from 'pathways-client';\nimport logo from 'camino-logo-dark.png';\nimport { getPatientRecord } from 'utils/fhirExtract';\nimport { FHIRClientProvider } from './FHIRClient';\nimport { PatientProvider } from './PatientProvider';\nimport { PatientRecordsProvider } from './PatientRecordsProvider';\nimport PatientRecord from './PatientRecord/PatientRecord';\nimport { NoteDataProvider } from './NoteDataProvider';\nimport Graph from './Graph';\nimport config from 'utils/ConfigManager';\nimport PathwaysList from './PathwaysList';\nimport { PathwayProvider } from './PathwayProvider';\nimport ThemeProvider from './ThemeProvider';\nimport { EvaluatedPathway } from 'pathways-model';\nimport useGetPathwaysService from './PathwaysService/PathwaysService';\nimport FHIR from 'fhirclient';\nimport demoRecords from 'fixtures/MaureenMcodeDemoPatientRecords.json';\nimport { MockedFHIRClient } from 'utils/MockedFHIRClient';\nimport { getHumanName } from 'utils/fhirUtils';\nimport { Patient, DomainResource, Practitioner } from 'fhir-objects';\ninterface AppProps {\n  demo: boolean;\n}\n\nconst App: FC<AppProps> = ({ demo }) => {\n  const [patientRecords, _setPatientRecords] = useState<DomainResource[]>([]);\n  const [currentPathway, setCurrentPathway] = useState<EvaluatedPathway | null>(null);\n  const [selectPathway, setSelectPathway] = useState<boolean>(true);\n  const [evaluatePath, setEvaluatePath] = useState<boolean>(false);\n  const [evaluatedPathways, setEvaluatedPathways] = useState<EvaluatedPathway[]>([]);\n  const [client, setClient] = useState<PathwaysClient | null>(null);\n  const [user, setUser] = useState<string>('');\n\n  const setPatientRecords = useCallback((value: DomainResource[]): void => {\n    _setPatientRecords(value);\n    setEvaluatePath(true);\n  }, []);\n\n  useEffect(() => {\n    if (!demo) {\n      FHIR.oauth2\n        .init({\n          clientId: 'Input client id you get when you register the app',\n          scope: 'launch/patient openid profile'\n        })\n        .then(client => {\n          // TODO: MockedFHIRClient has not mocked out requests for resources yet\n          getPatientRecord(client).then((records: DomainResource[]) => {\n            // filters out values that are empty\n            // the server might return deleted\n            // resources that only include an\n            // id, meta, and resourceType\n            const values = ['id', 'meta', 'resourceType'];\n            records = records.filter(resource => {\n              return !Object.keys(resource).every(value => values.includes(value));\n            });\n\n            setPatientRecords(records);\n          });\n          setClient(client);\n        });\n    } else {\n      setClient(new MockedFHIRClient());\n      setPatientRecords(demoRecords);\n    }\n  }, [demo, setPatientRecords]);\n\n  // gather note info\n  useEffect(() => {\n    client?.user?.read().then((user: Practitioner) => {\n      const name = user.name && getHumanName(user.name);\n      if (name) {\n        setUser(name);\n      }\n    });\n  }, [client]);\n\n  const service = useGetPathwaysService(\n    config.get(demo ? 'demoPathwaysService' : 'pathwaysService')\n  );\n\n  useEffect(() => {\n    if (service.status === 'loaded' && evaluatedPathways.length === 0)\n      setEvaluatedPathways(\n        service.payload.map(pathway => ({ pathway: pathway, pathwayResults: null }))\n      );\n  }, [service, evaluatedPathways.length, client, patientRecords]);\n\n  function setEvaluatedPathwayCallback(\n    value: EvaluatedPathway | null,\n    selectPathway = false\n  ): void {\n    window.scrollTo(0, 0);\n    setSelectPathway(selectPathway);\n    setCurrentPathway(value);\n  }\n\n  function updateEvaluatedPathways(value: EvaluatedPathway): void {\n    const newList = [...evaluatedPathways]; // Create a shallow copy of list\n    for (let i = 0; i < evaluatedPathways.length; i++) {\n      if (evaluatedPathways[i].pathway.name === value.pathway.name) {\n        newList[i] = value;\n        setEvaluatedPathways(newList);\n      }\n    }\n\n    if (currentPathway?.pathway.name === value.pathway.name) {\n      setCurrentPathway(value);\n    }\n  }\n\n  interface PatientViewProps {\n    evaluatedPathway: EvaluatedPathway | null;\n  }\n\n  const PatientView: FC<PatientViewProps> = ({ evaluatedPathway }) => {\n    return (\n      <div>\n        {evaluatedPathway ? (\n          <Graph\n            evaluatedPathway={evaluatedPathway}\n            expandCurrentNode={true}\n            updateEvaluatedPathways={updateEvaluatedPathways}\n          />\n        ) : (\n          <div>No Pathway Loaded</div>\n        )}\n        <PatientRecord />\n      </div>\n    );\n  };\n\n  return (\n    <ThemeProvider>\n      <FHIRClientProvider client={client as PathwaysClient}>\n        <PatientProvider\n          patient={\n            demo ? (demoRecords.find(r => r.resourceType === 'Patient') as fhir.Patient) : null\n          }\n        >\n          <PatientRecordsProvider\n            value={{ patientRecords, setPatientRecords, evaluatePath, setEvaluatePath }}\n          >\n            <PathwayProvider\n              pathwayCtx={{\n                updateEvaluatedPathways,\n                evaluatedPathway: currentPathway,\n                setEvaluatedPathway: setEvaluatedPathwayCallback\n              }}\n            >\n              <NoteDataProvider physician={user} date={new Date(Date.now())}>\n                <div>\n                  <Header logo={logo} />\n                  <Navigation\n                    evaluatedPathways={evaluatedPathways}\n                    selectPathway={selectPathway}\n                    setSelectPathway={setSelectPathway}\n                  />\n                </div>\n                {selectPathway ? (\n                  <PathwaysList\n                    evaluatedPathways={evaluatedPathways}\n                    callback={setEvaluatedPathwayCallback}\n                    service={service}\n                  ></PathwaysList>\n                ) : (\n                  <PatientView evaluatedPathway={currentPathway} />\n                )}\n              </NoteDataProvider>\n            </PathwayProvider>\n          </PatientRecordsProvider>\n        </PatientProvider>\n      </FHIRClientProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './components/App.tsx';\nimport './styles/index.module.scss';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" render={() => <App demo={false} />}></Route>\n      <Route path=\"/demo\" render={() => <App demo={true} />}></Route>\n    </Switch>\n  </Router>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientSnapshot\":\"PatientSnapshot_patientSnapshot__3bGcm\",\"patientSnapshot__info\":\"PatientSnapshot_patientSnapshot__info__2Ry7e\",\"patientName\":\"PatientSnapshot_patientName__ZClJB\",\"patientSnapshot__photo\":\"PatientSnapshot_patientSnapshot__photo__3XI7U\",\"patientSnapshot__list\":\"PatientSnapshot_patientSnapshot__list__5DVC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigation__back\":\"Navigation_navigation__back__2cVZ2\",\"navigation__leftPanel\":\"Navigation_navigation__leftPanel__QjHPF\",\"navigation__rightPanel\":\"Navigation_navigation__rightPanel__1FRD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"triggerContainer\":\"withConfirmationPopup_triggerContainer__3AU8B\",\"withConfirmationPopup\":\"withConfirmationPopup_withConfirmationPopup__2V1qn\",\"popupContent\":\"withConfirmationPopup_popupContent__3ksQD\",\"selectButton\":\"withConfirmationPopup_selectButton__1e5Z2\",\"accept\":\"withConfirmationPopup_accept__X2X4A\",\"decline\":\"withConfirmationPopup_decline__18Klm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\",\"arrowOnPatientPath\":\"Arrow_arrowOnPatientPath__1r5CB\"};","var map = {\n\t\"./alert\": 304,\n\t\"./alert.js\": 304,\n\t\"./alert.js.map\": 1046,\n\t\"./allergyintolerance\": 305,\n\t\"./allergyintolerance.js\": 305,\n\t\"./allergyintolerance.js.map\": 1047,\n\t\"./appointment\": 306,\n\t\"./appointment.js\": 306,\n\t\"./appointment.js.map\": 1048,\n\t\"./appointmentresponse\": 307,\n\t\"./appointmentresponse.js\": 307,\n\t\"./appointmentresponse.js.map\": 1049,\n\t\"./availability\": 308,\n\t\"./availability.js\": 308,\n\t\"./availability.js.map\": 1050,\n\t\"./basic\": 309,\n\t\"./basic.js\": 309,\n\t\"./basic.js.map\": 1051,\n\t\"./binary\": 310,\n\t\"./binary.js\": 310,\n\t\"./binary.js.map\": 1052,\n\t\"./bundle\": 311,\n\t\"./bundle.js\": 311,\n\t\"./bundle.js.map\": 1053,\n\t\"./careplan\": 312,\n\t\"./careplan.js\": 312,\n\t\"./careplan.js.map\": 1054,\n\t\"./claimresponse\": 313,\n\t\"./claimresponse.js\": 313,\n\t\"./claimresponse.js.map\": 1055,\n\t\"./communicationrequest\": 314,\n\t\"./communicationrequest.js\": 314,\n\t\"./communicationrequest.js.map\": 1056,\n\t\"./composition\": 315,\n\t\"./composition.js\": 315,\n\t\"./composition.js.map\": 1057,\n\t\"./conceptmap\": 316,\n\t\"./conceptmap.js\": 316,\n\t\"./conceptmap.js.map\": 1058,\n\t\"./condition\": 317,\n\t\"./condition.js\": 317,\n\t\"./condition.js.map\": 1059,\n\t\"./conformance\": 318,\n\t\"./conformance.js\": 318,\n\t\"./conformance.js.map\": 1060,\n\t\"./contract\": 319,\n\t\"./contract.js\": 319,\n\t\"./contract.js.map\": 1061,\n\t\"./contraindication\": 320,\n\t\"./contraindication.js\": 320,\n\t\"./contraindication.js.map\": 1062,\n\t\"./core\": 5,\n\t\"./core.js\": 5,\n\t\"./core.js.map\": 1063,\n\t\"./coverage\": 321,\n\t\"./coverage.js\": 321,\n\t\"./coverage.js.map\": 1064,\n\t\"./dataelement\": 322,\n\t\"./dataelement.js\": 322,\n\t\"./dataelement.js.map\": 1065,\n\t\"./device\": 323,\n\t\"./device.js\": 323,\n\t\"./device.js.map\": 1066,\n\t\"./devicecomponent\": 324,\n\t\"./devicecomponent.js\": 324,\n\t\"./devicecomponent.js.map\": 1067,\n\t\"./deviceuserequest\": 325,\n\t\"./deviceuserequest.js\": 325,\n\t\"./deviceuserequest.js.map\": 1068,\n\t\"./deviceusestatement\": 326,\n\t\"./deviceusestatement.js\": 326,\n\t\"./deviceusestatement.js.map\": 1069,\n\t\"./diagnosticorder\": 327,\n\t\"./diagnosticorder.js\": 327,\n\t\"./diagnosticorder.js.map\": 1070,\n\t\"./diagnosticreport\": 328,\n\t\"./diagnosticreport.js\": 328,\n\t\"./diagnosticreport.js.map\": 1071,\n\t\"./documentmanifest\": 329,\n\t\"./documentmanifest.js\": 329,\n\t\"./documentmanifest.js.map\": 1072,\n\t\"./documentreference\": 330,\n\t\"./documentreference.js\": 330,\n\t\"./documentreference.js.map\": 1073,\n\t\"./eligibility\": 331,\n\t\"./eligibility.js\": 331,\n\t\"./eligibility.js.map\": 1074,\n\t\"./eligibilityresponse\": 332,\n\t\"./eligibilityresponse.js\": 332,\n\t\"./eligibilityresponse.js.map\": 1075,\n\t\"./encounter\": 333,\n\t\"./encounter.js\": 333,\n\t\"./encounter.js.map\": 1076,\n\t\"./enrollment\": 334,\n\t\"./enrollment.js\": 334,\n\t\"./enrollment.js.map\": 1077,\n\t\"./enrollmentresponse\": 335,\n\t\"./enrollmentresponse.js\": 335,\n\t\"./enrollmentresponse.js.map\": 1078,\n\t\"./explanationofbenefit\": 336,\n\t\"./explanationofbenefit.js\": 336,\n\t\"./explanationofbenefit.js.map\": 1079,\n\t\"./extensiondefinition\": 337,\n\t\"./extensiondefinition.js\": 337,\n\t\"./extensiondefinition.js.map\": 1080,\n\t\"./familyhistory\": 338,\n\t\"./familyhistory.js\": 338,\n\t\"./familyhistory.js.map\": 1081,\n\t\"./group\": 339,\n\t\"./group.js\": 339,\n\t\"./group.js.map\": 1082,\n\t\"./healthcareservice\": 340,\n\t\"./healthcareservice.js\": 340,\n\t\"./healthcareservice.js.map\": 1083,\n\t\"./imagingobjectselection\": 341,\n\t\"./imagingobjectselection.js\": 341,\n\t\"./imagingobjectselection.js.map\": 1084,\n\t\"./imagingstudy\": 342,\n\t\"./imagingstudy.js\": 342,\n\t\"./imagingstudy.js.map\": 1085,\n\t\"./immunization\": 343,\n\t\"./immunization.js\": 343,\n\t\"./immunization.js.map\": 1086,\n\t\"./immunizationrecommendation\": 344,\n\t\"./immunizationrecommendation.js\": 344,\n\t\"./immunizationrecommendation.js.map\": 1087,\n\t\"./list\": 345,\n\t\"./list.js\": 345,\n\t\"./list.js.map\": 1088,\n\t\"./location\": 346,\n\t\"./location.js\": 346,\n\t\"./location.js.map\": 1089,\n\t\"./media\": 347,\n\t\"./media.js\": 347,\n\t\"./media.js.map\": 1090,\n\t\"./medication\": 348,\n\t\"./medication.js\": 348,\n\t\"./medication.js.map\": 1091,\n\t\"./medicationadministration\": 349,\n\t\"./medicationadministration.js\": 349,\n\t\"./medicationadministration.js.map\": 1092,\n\t\"./medicationdispense\": 350,\n\t\"./medicationdispense.js\": 350,\n\t\"./medicationdispense.js.map\": 1093,\n\t\"./medicationprescription\": 351,\n\t\"./medicationprescription.js\": 351,\n\t\"./medicationprescription.js.map\": 1094,\n\t\"./medicationstatement\": 352,\n\t\"./medicationstatement.js\": 352,\n\t\"./medicationstatement.js.map\": 1095,\n\t\"./messageheader\": 353,\n\t\"./messageheader.js\": 353,\n\t\"./messageheader.js.map\": 1096,\n\t\"./models\": 302,\n\t\"./models.js\": 302,\n\t\"./models.js.map\": 1097,\n\t\"./namingsystem\": 354,\n\t\"./namingsystem.js\": 354,\n\t\"./namingsystem.js.map\": 1098,\n\t\"./nutritionorder\": 355,\n\t\"./nutritionorder.js\": 355,\n\t\"./nutritionorder.js.map\": 1099,\n\t\"./observation\": 356,\n\t\"./observation.js\": 356,\n\t\"./observation.js.map\": 1100,\n\t\"./operationdefinition\": 357,\n\t\"./operationdefinition.js\": 357,\n\t\"./operationdefinition.js.map\": 1101,\n\t\"./operationoutcome\": 358,\n\t\"./operationoutcome.js\": 358,\n\t\"./operationoutcome.js.map\": 1102,\n\t\"./oralhealthclaim\": 359,\n\t\"./oralhealthclaim.js\": 359,\n\t\"./oralhealthclaim.js.map\": 1103,\n\t\"./order\": 360,\n\t\"./order.js\": 360,\n\t\"./order.js.map\": 1104,\n\t\"./orderresponse\": 361,\n\t\"./orderresponse.js\": 361,\n\t\"./orderresponse.js.map\": 1105,\n\t\"./organization\": 362,\n\t\"./organization.js\": 362,\n\t\"./organization.js.map\": 1106,\n\t\"./other\": 363,\n\t\"./other.js\": 363,\n\t\"./other.js.map\": 1107,\n\t\"./patient\": 364,\n\t\"./patient.js\": 364,\n\t\"./patient.js.map\": 1108,\n\t\"./paymentnotice\": 365,\n\t\"./paymentnotice.js\": 365,\n\t\"./paymentnotice.js.map\": 1109,\n\t\"./paymentreconciliation\": 366,\n\t\"./paymentreconciliation.js\": 366,\n\t\"./paymentreconciliation.js.map\": 1110,\n\t\"./pendedrequest\": 367,\n\t\"./pendedrequest.js\": 367,\n\t\"./pendedrequest.js.map\": 1111,\n\t\"./practitioner\": 368,\n\t\"./practitioner.js\": 368,\n\t\"./practitioner.js.map\": 1112,\n\t\"./procedure\": 369,\n\t\"./procedure.js\": 369,\n\t\"./procedure.js.map\": 1113,\n\t\"./procedurerequest\": 370,\n\t\"./procedurerequest.js\": 370,\n\t\"./procedurerequest.js.map\": 1114,\n\t\"./profile\": 371,\n\t\"./profile.js\": 371,\n\t\"./profile.js.map\": 1115,\n\t\"./provenance\": 372,\n\t\"./provenance.js\": 372,\n\t\"./provenance.js.map\": 1116,\n\t\"./query\": 373,\n\t\"./query.js\": 373,\n\t\"./query.js.map\": 1117,\n\t\"./questionnaire\": 374,\n\t\"./questionnaire.js\": 374,\n\t\"./questionnaire.js.map\": 1118,\n\t\"./questionnaireanswers\": 375,\n\t\"./questionnaireanswers.js\": 375,\n\t\"./questionnaireanswers.js.map\": 1119,\n\t\"./readjudicate\": 376,\n\t\"./readjudicate.js\": 376,\n\t\"./readjudicate.js.map\": 1120,\n\t\"./referralrequest\": 377,\n\t\"./referralrequest.js\": 377,\n\t\"./referralrequest.js.map\": 1121,\n\t\"./relatedperson\": 378,\n\t\"./relatedperson.js\": 378,\n\t\"./relatedperson.js.map\": 1122,\n\t\"./reversal\": 379,\n\t\"./reversal.js\": 379,\n\t\"./reversal.js.map\": 1123,\n\t\"./riskassessment\": 380,\n\t\"./riskassessment.js\": 380,\n\t\"./riskassessment.js.map\": 1124,\n\t\"./searchparameter\": 381,\n\t\"./searchparameter.js\": 381,\n\t\"./searchparameter.js.map\": 1125,\n\t\"./securityevent\": 382,\n\t\"./securityevent.js\": 382,\n\t\"./securityevent.js.map\": 1126,\n\t\"./slot\": 383,\n\t\"./slot.js\": 383,\n\t\"./slot.js.map\": 1127,\n\t\"./specimen\": 384,\n\t\"./specimen.js\": 384,\n\t\"./specimen.js.map\": 1128,\n\t\"./statusrequest\": 385,\n\t\"./statusrequest.js\": 385,\n\t\"./statusrequest.js.map\": 1129,\n\t\"./statusresponse\": 386,\n\t\"./statusresponse.js\": 386,\n\t\"./statusresponse.js.map\": 1130,\n\t\"./subscription\": 387,\n\t\"./subscription.js\": 387,\n\t\"./subscription.js.map\": 1131,\n\t\"./substance\": 388,\n\t\"./substance.js\": 388,\n\t\"./substance.js.map\": 1132,\n\t\"./supply\": 389,\n\t\"./supply.js\": 389,\n\t\"./supply.js.map\": 1133,\n\t\"./supportingdocumentation\": 390,\n\t\"./supportingdocumentation.js\": 390,\n\t\"./supportingdocumentation.js.map\": 1134,\n\t\"./valueset\": 391,\n\t\"./valueset.js\": 391,\n\t\"./valueset.js.map\": 1135\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 303;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathways_list\":\"PathwaysList_pathways_list__2WO5g\",\"header_title\":\"PathwaysList_header_title__7EM8s\",\"header_title__header\":\"PathwaysList_header_title__header__36yqh\",\"header_title__note\":\"PathwaysList_header_title__note__34zC8\",\"container\":\"PathwaysList_container__1SC5K\",\"pathwayElement\":\"PathwaysList_pathwayElement__34hJh\",\"title\":\"PathwaysList_title__ccVmw\",\"numElements\":\"PathwaysList_numElements__1WAOk\",\"expand\":\"PathwaysList_expand__2v9Wx\",\"infoContainer\":\"PathwaysList_infoContainer__2q0Tn\",\"details\":\"PathwaysList_details__2kSzT\",\"pathway\":\"PathwaysList_pathway__1vqM1\",\"matchingElement\":\"PathwaysList_matchingElement__1SQoM\",\"controls\":\"PathwaysList_controls__vZmz8\",\"matchedElementsLabel\":\"PathwaysList_matchedElementsLabel__3cXeX\",\"pathwayListHeaderContainer\":\"PathwaysList_pathwayListHeaderContainer__2l2fi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expanded\":\"styles_expanded__XNUv-\",\"expandedNode\":\"styles_expandedNode__26Fy8\",\"nodeTitle\":\"styles_nodeTitle__5mm8f\",\"clickable\":\"styles_clickable__3HzZZ\",\"iconAndLabel\":\"styles_iconAndLabel__2LOTu\",\"statusIcon\":\"styles_statusIcon__2jDwI\",\"button\":\"styles_button__1AUjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"onPatientPath\":\"Node_onPatientPath__3LPjE\",\"actionable\":\"Node_actionable__bHXKd\",\"notOnPatientPath\":\"Node_notOnPatientPath__24OpF\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childOnPatientPath\":\"Node_childOnPatientPath__28UD6\",\"childActionable\":\"Node_childActionable__SwUjD\",\"childNotOnPatientPath\":\"Node_childNotOnPatientPath__2j4QB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};"],"sourceRoot":""}